{"version":3,"sources":["ng://ngx-openmrs-formentry/form-entry/services/debug-mode.service.ts","ng://ngx-openmrs-formentry/form-entry/services/form-errors.service.ts","null","ng://ngx-openmrs-formentry/change-tracking/control-relation.ts","ng://ngx-openmrs-formentry/change-tracking/control-relations.ts","ng://ngx-openmrs-formentry/form-entry/control-hiders-disablers/hider-helpers.ts","ng://ngx-openmrs-formentry/form-entry/control-alerts/alert-helpers.ts","ng://ngx-openmrs-formentry/form-entry/control-hiders-disablers/disabler-helper.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/form-node.ts","ng://ngx-openmrs-formentry/form-entry/question-models/validation.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/js-expression-validation.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/conditional-validation.model.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/control-relations.factory.ts","ng://ngx-openmrs-formentry/form-entry/expression-runner/expression-runner.ts","ng://ngx-openmrs-formentry/abstract-controls-extension/afe-form-control.ts","ng://ngx-openmrs-formentry/abstract-controls-extension/afe-form-group.ts","ng://ngx-openmrs-formentry/abstract-controls-extension/afe-form-array.ts","ng://ngx-openmrs-formentry/form-entry/question-models/question-base.ts","ng://ngx-openmrs-formentry/form-entry/validators/conditional-required.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/conditional-answered.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/required.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/date.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/min.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/max.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/min-date.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/max-date.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/future-date-restriction.validator.ts","ng://ngx-openmrs-formentry/form-entry/helpers/js-expression-helper.ts","ng://ngx-openmrs-formentry/form-entry/validators/validations.ts","ng://ngx-openmrs-formentry/form-entry/validators/js-expression.validator.ts","ng://ngx-openmrs-formentry/form-entry/utils/messages.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/validation.factory.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/hiders-disablers.factory.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/show-messages.factory.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/form-control.service.ts","ng://ngx-openmrs-formentry/form-entry/form-renderer/form-renderer.component.css.ts","ng://ngx-openmrs-formentry/form-entry/data-sources/data-sources.ts","ng://ngx-openmrs-formentry/form-entry/form-renderer/form-renderer.component.ts","ng://ngx-openmrs-formentry/form-entry/error-renderer/error-renderer.component.ts","ng://ngx-openmrs-formentry/form-entry/helpers/historical-field-helper-service.ts","ng://ngx-openmrs-formentry/form-entry/directives/historical-value-directive.ts","ng://ngx-openmrs-formentry/components/select/select.component.style.ts","ng://ngx-openmrs-formentry/components/select/option.ts","ng://ngx-openmrs-formentry/components/select/diacritics.ts","ng://ngx-openmrs-formentry/components/select/option-list.ts","ng://ngx-openmrs-formentry/components/select/select.component.ts","ng://ngx-openmrs-formentry/components/select/select-dropdown.component.style.ts","ng://ngx-openmrs-formentry/components/select/select-dropdown.component.ts","ng://ngx-openmrs-formentry/components/select/select.module.ts","ng://ngx-openmrs-formentry/components/file-upload/secure.pipe.ts","ng://ngx-openmrs-formentry/shared.module.ts","ng://ngx-openmrs-formentry/components/file-upload/file-upload.component.ts","ng://ngx-openmrs-formentry/components/file-upload/file-upload.module.ts","ng://ngx-openmrs-formentry/components/date-time-picker/picker-modal/modal.component.ts","ng://ngx-openmrs-formentry/components/date-time-picker/pipes/moment.pipe.ts","ng://ngx-openmrs-formentry/components/date-time-picker/date-picker/date-picker.component.ts","ng://ngx-openmrs-formentry/components/date-time-picker/time-picker/time-picker.component.ts","ng://ngx-openmrs-formentry/components/date-time-picker/date-time-picker.component.ts","ng://ngx-openmrs-formentry/components/date-time-picker/date-time-picker.module.ts","ng://ngx-openmrs-formentry/components/ngx-date-time-picker/ngx-date-time-picker.component.ts","ng://ngx-openmrs-formentry/components/ngx-date-time-picker/ngx-date-time-picker.module.ts","ng://ngx-openmrs-formentry/form-entry/question-models/select-option.ts","ng://ngx-openmrs-formentry/components/afe-ng-select.component.ts","ng://ngx-openmrs-formentry/form-entry/services/form-schema-compiler.service.ts","ng://ngx-openmrs-formentry/form-entry/question-models/text-input-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/text-area-input-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/select-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/ui-select-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/date-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/multi-select-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/interfaces/nested-questions.ts","ng://ngx-openmrs-formentry/form-entry/question-models/group-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/repeating-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/checkbox.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/file-upload-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/test-order-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/date-validation.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/max-validation.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/min-validation.model.ts","ng://ngx-openmrs-formentry/form-entry/data-sources/dummy-data-source.ts","ng://ngx-openmrs-formentry/form-entry/services/historical-encounter-data.service.ts","ng://ngx-openmrs-formentry/form-entry/helpers/historical-expression-helper-service.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/question.factory.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/form.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/form.factory.ts","ng://ngx-openmrs-formentry/form-entry/value-adapters/obs-adapter-helper.ts","ng://ngx-openmrs-formentry/form-entry/value-adapters/obs.adapter.ts","ng://ngx-openmrs-formentry/form-entry/value-adapters/order.adapter.ts","ng://ngx-openmrs-formentry/form-entry/value-adapters/encounter.adapter.ts","ng://ngx-openmrs-formentry/form-entry/value-adapters/person-attribute.adapter.ts","ng://ngx-openmrs-formentry/components/remote-select/remote-select.component.ts","ng://ngx-openmrs-formentry/components/remote-select/remote-select.module.ts","ng://ngx-openmrs-formentry/components/appointments-overview/appointments-overview.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/encounter-viewer.service.ts","ng://ngx-openmrs-formentry/encounter-viewer/encounter-view/encounter-viewer.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/encounter-container/encounter-container.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/display-controls/question-control.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/display-controls/file-preview.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/display-controls/remote-answer.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/encounter-viewer.module.ts","ng://ngx-openmrs-formentry/components/check-box/checkbox.component.ts","ng://ngx-openmrs-formentry/components/check-box/checkbox.module.ts","ng://ngx-openmrs-formentry/form-entry/form-entry.module.ts","ng://ngx-openmrs-formentry/form-entry/question-models/pair.model.ts"],"names":["DebugModeService","prototype","debugEnabled","Injectable","FormErrorsService","Subject","this","announceErrorFieldSource","asObservable","announceErrorField","error","next","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__extends","__","constructor","create","__values","o","m","Symbol","iterator","i","call","length","value","done","ControlRelation","control","relatedTo","_control","_relatedTo","_registerForChangesFromRelatedControl","defineProperty","_lastUpdateValue","updateControlBasedOnRelation","newValue","updateCalculatedValue","updateValueAndValidity","updateHiddenState","updateDisabledState","updateAlert","valueChanges","subscribe","_this","ControlRelations","relationFor","_relationFor","_relations","addRelatedControls","_otherRelations","AbstractControl","relations","push","HiderHelper","hideControl","hidden","disable","showControl","setHiderForControl","hider","hiders","clearHidersForControl","splice","evaluateControlHiders","hiddenValue","forEach","reEvaluateHidingExpression","toHide","setUpReEvaluationWhenValueChanges","val","AlertHelper","hideAlert","shown","showAlert","setAlertsForControl","alert","alerts","clearAlertsForControl","evaluateControlAlerts","messageValue","message","reEvaluateAlertExpression","alertMessage","DisablerHelper","setDisablerForControl","disabler","disablers","clearDisablersForControl","evaluateControlDisablers","toDisable","reEvaluateDisablingExpression","enable","NodeBase","question","form","parentPath","_questionModel","_form","_path","key","removeAt","index","createChildNode","removeChildNode","LeafNode","_super","parentControl","tslib_1.__extends","GroupNode","_children","setChild","node","children","ArrayNode","formFactory","childNodeCreatedEvents","createChildFunc","g","fireChildNodeCreatedListener","removeChildFunc","addChildNodeCreatedListener","func","ValidationModel","validations","type","JsExpressionValidationModel","failsWhenExpression","ConditionalValidationModel","referenceQuestionId","referenceQuestionAnswers","ControlRelationsFactory","buildRelations","rootNode","controlsStore","mapControlIds","nodeBase","setRelations","buildArrayNodeRelations","rootControlsStore","arrayControlStore","child","questionBase","id","createRelationsToArrayControls","rChild","parentNodePath","path","substring","lastIndexOf","indexOf","aChild","aChildId","this_1","hasRelation","nodes","searchNodeByPath","an","rootControl_1","controlRelations","otherRelations","addValueChangeListener","getRelationsForControl","nodeBaseArray","searchNodeByQuestionId","controlList","addRelationToControl","required","validators","element","hide","field","calculateExpression","related","moment","moment_","ExpressionRunner","getRunnable","expression","helper","dataDependencies","runner","runnable","run","scope","uuid","window","getControlRelationValueString","getHelperMethods","getDataDependencies","dataSourcesContainer","dataSources","paramList","argList","funcDeclarationCode","funcCallCode","keys","console","warn","eval","e","relation","relatedAsControl","isArray","arrayNode","uuid_1","controlRelationsFactory_1","relationsForControl_1","concat","setControlArrayValues","relationsForControl","_getFormControlKeys","values","_getValuesForKey","array","obj","AfeFormControl","formState","validator","asyncValidator","_controlRelations","_previousValue","fireValueChangeListener","param","setValue","hiderHelper","show","setHidingFn","newHider","setCalculatorFn","newCalculator","calculator","_val","clearHidingFns","setDisablingFn","newDisabler","disablerHelper","clearDisablingFns","setAlertFn","clearMessageFns","_valueChangeListener","FormControl","AfeFormGroup","controls","FormGroup","AfeFormArray","_uuid","FormArray","QuestionBase","options","defaultValue","originalValue","extras","renderingType","label","historicalDataValue","setHistoricalValue","v","enableHistoricalValue","showHistoricalEncounterDate","showHistoricalValueDate","undefined","ConditionalRequiredValidator","validate","model","isRequired","relationValue","conditional_required","ConditionalAnsweredValidator","successCondition","conditional_answered","RequiredValidator","DateValidator","test","Date","toString","date","MinValidator","min","requiredValue","actualValue","MaxValidator","max","MinDateValidator","mindate","requiredDate","newDate","getTime","actualDate","MaxDateValidator","maxdate","FutureDateRestrictionValidator","now","futureDateRestriction","JsExpressionHelper","calcBMI","height","weight","r","toFixed","parseFloat","isEmpty","arrayContains","members","contains","extractRepeatingGroupValues","map","item","formatDate","format","offset","Error","arrayContainsAny","Validations","JsExpressionValidator","JSExpressionValidatorsEnabled","helperFunctions","js_expression","ValidationFactory","getValidators","list","_.forEach","dateValidator","allowFutureDates","futureDateRestrictionValidator","jsExpressionValidator","getMaxValueValidator","getMinValueValidator","conditionalRequiredValidator","conditionalAnsweredValidator","requiredValidator","Validators","minLength","maxLength","errors","messages","property","Messages","REQUIRED_FIELD_MSG","INVALID_DATE_MSG","FUTURE_DATE_RESTRICTION_MSG","MIN_LENGTH_MSG","replace","minlength","requiredLength","maxlength","MAX_DATE_MSG","MIN_DATE_MSG","MAX_MSG","MIN_MSG","HidersDisablersFactory","expressionRunner","expressionHelper","_debugModeService","getJsExpressionDisabler","disableWhenExpression","result","getJsExpressionHider","convertHideObjectToString","hideWhenExpression","join","AlertsFactory","getJsExpressionshowAlert","alertWhenExpression","FormControlService","validationFactory","hidersDisablersFactory","alertsFactory","generateControlModel","questionModel","generateChildren","controlType","AfeControlType","generateFormArray","generateFormGroupModel","generateFormControl","formGroup","wireHidersDisablers","wireAlerts","setControl","asGroup","questions","_generateFormGroupChildrenModel","generated","addControl","formArray","wireCalculator","alert_1","dataSource","DEFAULT_STYLES","DataSources","_dataSources","registerDataSource","unWrap","log","clearDataSource","FormRendererComponent","formErrorsService","document","activeTab","name","_name","parent","_parentComponent","ngOnInit","setUpRemoteSelect","setUpFileUpload","tab","valueProcessingInfo","lastFormTab","announceErrorField$","scrollToControl","isCollapsed","isExpanded","addChildComponent","childComponents","dataSourceOptions","clickTab","tabNumber","loadPreviousTab","isCurrentTabFirst","body","scrollTop","isCurrentTabLast","loadNextTab","tabSelected","$event","setPreviousTab","hasErrors","touched","valid","getErrors","split","elSelector","tabComponent","setTimeout","section","getElementById","focus","onDateChanged","upload","event","toggleInformation","infoId","style","display","Component","args","selector","template","styles","Inject","DOCUMENT","Input","ErrorRendererComponent","showErrors","markInvalidControls","getControlError","errorNode","pageIndex","getPageIndex","HistoricalFieldHelperService","getDisplayTextFromOptions","valueProperty","displayProperty","displayText","historicalValue","_.isArray","valueConverted_1","_.each","option","HistoricalValueDirective","historicalFieldHelper","EventEmitter","target","_node","compareString","stopPropagation","_nodeChange","emit","a","_.isUndefined","text","_date","valueDate","Directive","Output","HostListener","STYLE","Option","disabled","highlighted","selected","undecoratedCopy","Diacritics","strip","DIACRITICS","Ⓐ","Ａ","À","Á","Â","Ầ","Ấ","Ẫ","Ẩ","Ã","Ā","Ă","Ằ","Ắ","Ẵ","Ẳ","Ȧ","Ǡ","Ä","Ǟ","Ả","Å","Ǻ","Ǎ","Ȁ","Ȃ","Ạ","Ậ","Ặ","Ḁ","Ą","Ⱥ","Ɐ","Ꜳ","Æ","Ǽ","Ǣ","Ꜵ","Ꜷ","Ꜹ","Ꜻ","Ꜽ","Ⓑ","Ｂ","Ḃ","Ḅ","Ḇ","Ƀ","Ƃ","Ɓ","Ⓒ","Ｃ","Ć","Ĉ","Ċ","Č","Ç","Ḉ","Ƈ","Ȼ","Ꜿ","Ⓓ","Ｄ","Ḋ","Ď","Ḍ","Ḑ","Ḓ","Ḏ","Đ","Ƌ","Ɗ","Ɖ","Ꝺ","Ǳ","Ǆ","ǲ","ǅ","Ⓔ","Ｅ","È","É","Ê","Ề","Ế","Ễ","Ể","Ẽ","Ē","Ḕ","Ḗ","Ĕ","Ė","Ë","Ẻ","Ě","Ȅ","Ȇ","Ẹ","Ệ","Ȩ","Ḝ","Ę","Ḙ","Ḛ","Ɛ","Ǝ","Ⓕ","Ｆ","Ḟ","Ƒ","Ꝼ","Ⓖ","Ｇ","Ǵ","Ĝ","Ḡ","Ğ","Ġ","Ǧ","Ģ","Ǥ","Ɠ","Ꞡ","Ᵹ","Ꝿ","Ⓗ","Ｈ","Ĥ","Ḣ","Ḧ","Ȟ","Ḥ","Ḩ","Ḫ","Ħ","Ⱨ","Ⱶ","Ɥ","Ⓘ","Ｉ","Ì","Í","Î","Ĩ","Ī","Ĭ","İ","Ï","Ḯ","Ỉ","Ǐ","Ȉ","Ȋ","Ị","Į","Ḭ","Ɨ","Ⓙ","Ｊ","Ĵ","Ɉ","Ⓚ","Ｋ","Ḱ","Ǩ","Ḳ","Ķ","Ḵ","Ƙ","Ⱪ","Ꝁ","Ꝃ","Ꝅ","Ꞣ","Ⓛ","Ｌ","Ŀ","Ĺ","Ľ","Ḷ","Ḹ","Ļ","Ḽ","Ḻ","Ł","Ƚ","Ɫ","Ⱡ","Ꝉ","Ꝇ","Ꞁ","Ǉ","ǈ","Ⓜ","Ｍ","Ḿ","Ṁ","Ṃ","Ɱ","Ɯ","Ⓝ","Ｎ","Ǹ","Ń","Ñ","Ṅ","Ň","Ṇ","Ņ","Ṋ","Ṉ","Ƞ","Ɲ","Ꞑ","Ꞥ","Ǌ","ǋ","Ⓞ","Ｏ","Ò","Ó","Ô","Ồ","Ố","Ỗ","Ổ","Õ","Ṍ","Ȭ","Ṏ","Ō","Ṑ","Ṓ","Ŏ","Ȯ","Ȱ","Ö","Ȫ","Ỏ","Ő","Ǒ","Ȍ","Ȏ","Ơ","Ờ","Ớ","Ỡ","Ở","Ợ","Ọ","Ộ","Ǫ","Ǭ","Ø","Ǿ","Ɔ","Ɵ","Ꝋ","Ꝍ","Ƣ","Ꝏ","Ȣ","Ⓟ","Ｐ","Ṕ","Ṗ","Ƥ","Ᵽ","Ꝑ","Ꝓ","Ꝕ","Ⓠ","Ｑ","Ꝗ","Ꝙ","Ɋ","Ⓡ","Ｒ","Ŕ","Ṙ","Ř","Ȑ","Ȓ","Ṛ","Ṝ","Ŗ","Ṟ","Ɍ","Ɽ","Ꝛ","Ꞧ","Ꞃ","Ⓢ","Ｓ","ẞ","Ś","Ṥ","Ŝ","Ṡ","Š","Ṧ","Ṣ","Ṩ","Ș","Ş","Ȿ","Ꞩ","Ꞅ","Ⓣ","Ｔ","Ṫ","Ť","Ṭ","Ț","Ţ","Ṱ","Ṯ","Ŧ","Ƭ","Ʈ","Ⱦ","Ꞇ","Ꜩ","Ⓤ","Ｕ","Ù","Ú","Û","Ũ","Ṹ","Ū","Ṻ","Ŭ","Ü","Ǜ","Ǘ","Ǖ","Ǚ","Ủ","Ů","Ű","Ǔ","Ȕ","Ȗ","Ư","Ừ","Ứ","Ữ","Ử","Ự","Ụ","Ṳ","Ų","Ṷ","Ṵ","Ʉ","Ⓥ","Ｖ","Ṽ","Ṿ","Ʋ","Ꝟ","Ʌ","Ꝡ","Ⓦ","Ｗ","Ẁ","Ẃ","Ŵ","Ẇ","Ẅ","Ẉ","Ⱳ","Ⓧ","Ｘ","Ẋ","Ẍ","Ⓨ","Ｙ","Ỳ","Ý","Ŷ","Ỹ","Ȳ","Ẏ","Ÿ","Ỷ","Ỵ","Ƴ","Ɏ","Ỿ","Ⓩ","Ｚ","Ź","Ẑ","Ż","Ž","Ẓ","Ẕ","Ƶ","Ȥ","Ɀ","Ⱬ","Ꝣ","ⓐ","ａ","ẚ","à","á","â","ầ","ấ","ẫ","ẩ","ã","ā","ă","ằ","ắ","ẵ","ẳ","ȧ","ǡ","ä","ǟ","ả","å","ǻ","ǎ","ȁ","ȃ","ạ","ậ","ặ","ḁ","ą","ⱥ","ɐ","ꜳ","æ","ǽ","ǣ","ꜵ","ꜷ","ꜹ","ꜻ","ꜽ","ⓑ","ｂ","ḃ","ḅ","ḇ","ƀ","ƃ","ɓ","ⓒ","ｃ","ć","ĉ","ċ","č","ç","ḉ","ƈ","ȼ","ꜿ","ↄ","ⓓ","ｄ","ḋ","ď","ḍ","ḑ","ḓ","ḏ","đ","ƌ","ɖ","ɗ","ꝺ","ǳ","ǆ","ⓔ","ｅ","è","é","ê","ề","ế","ễ","ể","ẽ","ē","ḕ","ḗ","ĕ","ė","ë","ẻ","ě","ȅ","ȇ","ẹ","ệ","ȩ","ḝ","ę","ḙ","ḛ","ɇ","ɛ","ǝ","ⓕ","ｆ","ḟ","ƒ","ꝼ","ⓖ","ｇ","ǵ","ĝ","ḡ","ğ","ġ","ǧ","ģ","ǥ","ɠ","ꞡ","ᵹ","ꝿ","ⓗ","ｈ","ĥ","ḣ","ḧ","ȟ","ḥ","ḩ","ḫ","ẖ","ħ","ⱨ","ⱶ","ɥ","ƕ","ⓘ","ｉ","ì","í","î","ĩ","ī","ĭ","ï","ḯ","ỉ","ǐ","ȉ","ȋ","ị","į","ḭ","ɨ","ı","ⓙ","ｊ","ĵ","ǰ","ɉ","ⓚ","ｋ","ḱ","ǩ","ḳ","ķ","ḵ","ƙ","ⱪ","ꝁ","ꝃ","ꝅ","ꞣ","ⓛ","ｌ","ŀ","ĺ","ľ","ḷ","ḹ","ļ","ḽ","ḻ","ſ","ł","ƚ","ɫ","ⱡ","ꝉ","ꞁ","ꝇ","ǉ","ⓜ","ｍ","ḿ","ṁ","ṃ","ɱ","ɯ","ⓝ","ｎ","ǹ","ń","ñ","ṅ","ň","ṇ","ņ","ṋ","ṉ","ƞ","ɲ","ŉ","ꞑ","ꞥ","ǌ","ⓞ","ｏ","ò","ó","ô","ồ","ố","ỗ","ổ","õ","ṍ","ȭ","ṏ","ō","ṑ","ṓ","ŏ","ȯ","ȱ","ö","ȫ","ỏ","ő","ǒ","ȍ","ȏ","ơ","ờ","ớ","ỡ","ở","ợ","ọ","ộ","ǫ","ǭ","ø","ǿ","ɔ","ꝋ","ꝍ","ɵ","ƣ","ȣ","ꝏ","ⓟ","ｐ","ṕ","ṗ","ƥ","ᵽ","ꝑ","ꝓ","ꝕ","ⓠ","ｑ","ɋ","ꝗ","ꝙ","ⓡ","ｒ","ŕ","ṙ","ř","ȑ","ȓ","ṛ","ṝ","ŗ","ṟ","ɍ","ɽ","ꝛ","ꞧ","ꞃ","ⓢ","ｓ","ß","ś","ṥ","ŝ","ṡ","š","ṧ","ṣ","ṩ","ș","ş","ȿ","ꞩ","ꞅ","ẛ","ⓣ","ｔ","ṫ","ẗ","ť","ṭ","ț","ţ","ṱ","ṯ","ŧ","ƭ","ʈ","ⱦ","ꞇ","ꜩ","ⓤ","ｕ","ù","ú","û","ũ","ṹ","ū","ṻ","ŭ","ü","ǜ","ǘ","ǖ","ǚ","ủ","ů","ű","ǔ","ȕ","ȗ","ư","ừ","ứ","ữ","ử","ự","ụ","ṳ","ų","ṷ","ṵ","ʉ","ⓥ","ｖ","ṽ","ṿ","ʋ","ꝟ","ʌ","ꝡ","ⓦ","ｗ","ẁ","ẃ","ŵ","ẇ","ẅ","ẘ","ẉ","ⱳ","ⓧ","ｘ","ẋ","ẍ","ⓨ","ｙ","ỳ","ý","ŷ","ỹ","ȳ","ẏ","ÿ","ỷ","ẙ","ỵ","ƴ","ɏ","ỿ","ⓩ","ｚ","ź","ẑ","ż","ž","ẓ","ẕ","ƶ","ȥ","ɀ","ⱬ","ꝣ","Ά","Έ","Ή","Ί","Ϊ","Ό","Ύ","Ϋ","Ώ","ά","έ","ή","ί","ϊ","ΐ","ό","ύ","ϋ","ΰ","ω","ς","OptionList","_options","highlight","equalValues","v0","v1","slice","sort","every","getOptionsByValue","filter","selection","selectedOption","select","multiple","clearSelection","deselect","term","trim","resetFilter","l","toUpperCase","t","_highlightedOption","hasShownSelected","getFirstShownSelected","getFirstShown","highlightOption","clearHighlightedOption","highlightNextOption","shownOptions","filtered","getHighlightedIndexFromList","highlightPreviousOption","highlightedOption","getHighlightedIndex","hasShown","some","hasSelected","_a","tslib_1.__values","_b","SELECT_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","SelectComponent","multi","BACKSPACE","TAB","ENTER","ESC","SPACE","UP","DOWN","_","placeholderView","placeholder","ngAfterViewInit","updateFilterWidth","ngOnChanges","changes","updateOptionsList","isFirstChange","numOptions","optionList","minNumOptions","currentValue","filterEnabled","onWindowClick","selectContainerClicked","closeDropdown","clearClicked","onWindowResize","updateWidth","onSelectContainerClick","toggleDropdown","onSelectContainerFocus","onTouched","onSelectContainerKeydown","handleSelectContainerKeydown","onDropdownOptionClicked","toggleSelectOption","selectOption","onDropdownClose","onSingleFilterClick","onSingleFilterInput","typed","onSingleFilterKeydown","handleSingleFilterKeydown","onMultipleFilterInput","isOpen","openDropdown","onMultipleFilterKeydown","handleMultipleFilterKeydown","onClearSelectionClick","onDeselectOptionClick","deselectOption","open","close","clear","valueChanged","writeValue","registerOnChange","fn","onChange","registerOnTouched","setDisabledState","isDisabled","_value","TypeError","firstTime","updatePosition","filterInput","nativeElement","opened","clearFilterInput","closed","deselected","dropdown","moveHighlightedIntoView","selectHighlightedOption","deselectLast","sel","setMultipleFilterInput","which","KEYS","altKey","preventDefault","hasFocus","selectionSpan","blur","width","offsetWidth","left","offsetLeft","top","offsetTop","offsetHeight","filterInputWidth","providers","encapsulation","ViewEncapsulation","None","ViewChild","SelectDropdownComponent","optionsReset","singleFilterClick","singleFilterInput","singleFilterKeydown","onOptionsWheel","handleOptionsWheel","onOptionMouseover","onOptionClick","optionClicked","getOptionStyle","background-color","highlightColor","color","highlightTextColor","optionsList","listHeight","itemIndex","itemHeight","itemTop","itemBottom","viewTop","div","atTop","atBottom","scrollHeight","deltaY","SelectModule","NgModule","declarations","exports","imports","CommonModule","FormsModule","SecurePipe","_ref","sanitizer","BehaviorSubject","_result","ngOnDestroy","_subscription","_dispose","transform","url","getfile","internalTransform","asyncTrasnform","previousUrl","_internalSubscription","sanitized","bypassSecurityTrustUrl","_obj","_latestValue","_latestReturnedValue","WrappedValue","wrap","_subscribe","_updateLatestValue","unsubscribe","async","markForCheck","Pipe","pure","ChangeDetectorRef","DomSanitizer","SharedModule","RemoteFileUploadComponent","renderer","_dataSource","data","uploading","fileUpload","innerValue","image","propagateChange","clearValue","Renderer2","RemoteFileUploadModule","FileUploaderModule","ModalComponent","closeModal","onOverlayClick","changeDetection","ChangeDetectionStrategy","OnPush","animations","MomentPipe","DatePickerComponent","monthsShort","initValue","fullYearRange","currentYear","calendarDate","clone","startOf","year","displayYearsIndex","displayYearRange","generateCalendar","prev","onDisplayYears","subtract","showMonthSelection","onDisplayMonths","showYearSelection","add","selectDay","day","daysDifference","diff","selectedDay","parseToReturnObjectType","onSelectDate","cancelDatePicker","selectMonth","month","selectYear","selectToday","today","clearPickDate","onDatePickerCancel","generateYears","years","_.chunk","locale","currentMonth","dayNames","weekdaysShort","initDate","returnObject","viewFormat","selectedDate","calendarDays","start","localeData","firstDayOfWeek","end","toDate","toJSON","toArray","toISOString","toObject","TimePickerComponent","use12Hour","hourFormat","time","initTime","increaseHour","decreaseHour","increaseMinute","decreaseMinute","increaseSecond","decreaseSecond","selectTime","onSelectTime","cancelTimePicker","selectNow","clearTime","onTimePickerCancel","Moment","DateTimePickerComponent","weeksSelected","count","nextDate","setDate","getDate","setTime","toggleDatePicker","status","showDatePicker","toggleTimePicker","showTimePicker","modelValue","onDateChange","MY_FORMATS","parse","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","NgxDateTimePickerComponent","loadInitial","setFormValues","selectedTime","onDateSelect","setDateTime","onTimeSelect","setCurrentTime","currentTime","weekSelect","nextWeekDate","nextWeekTime","setCurrentDate","currentDay","newTime","newDateTime","dateTimeString","MAT_DATE_FORMATS","useValue","DateAdapter","useClass","MomentDateAdapter","ReactiveFormsModule","MatDatepickerModule","MatFormFieldModule","MatNativeDateModule","MatInputModule","AmazingTimePickerModule","MatSelectModule","AfeNgSelectComponent","getChangingText","getData","question_options","resolveSelectedOption","selected_question_option","searchText","subject","searchOptions","mappedOptions","onValueChange","subjectOption","resolveSelectedValue","resetOptions","FormSchemaCompiler","compileFormSchema","formSchema","referencedComponents","refForms","getReferencedForms","_.isEmpty","placeHolders","getAllPlaceholderObjects","replaceAllPlaceholdersWithActualObjects","findSchemaByName","schemaArray","nameOfSchema","foundSchema","schema","getPageInSchemaByLabel","pageLabel","foundPage","pages","page","getSectionInSchemaByPageLabelBySectionLabel","sectionLabel","foundSection","sections","getQuestionByIdInSchema","questionId","isQuestionObjectWithId","isSchemaSubObjectExpandable","toExpand","getQuestionsArrayByQuestionIdInSchema","getQuestionsArrayByQuestionId","object","returnedValue","objectKeys","_.includes","referencedObjects","extractPlaceholderObjects","subSchema","objectsArray","reference","fillPlaceholderObject","placeHolderObject","referenceObject","member","keyValReferencedForms","placeHoldersArray","placeHolder","referencedObject","getReferencedObject","removeExcludedQuestionsFromPlaceholder","removeObjectFromArray","indexOfObject","excludeQuestions","excludedQuestionId","questionsArray","referenceData","formSchemasLookupArray","referencedForms","alias","formName","TextInputQuestion","TextAreaInputQuestion","rows","SelectQuestion","UiSelectQuestion","DateQuestion","MultiSelectQuestion","NestedQuestion","QuestionGroup","RepeatingQuestion","CheckBoxQuestion","FileUploadQuestion","TestOrderQuestion","orderType","selectableOrders","orderSettingUuid","rendering","DateValidationModel","MaxValidationModel","MinValidationModel","DummyDataSource","selectOptions","sampleData","concept","returnErrorOnNext","of","fetchFile","HistoricalEncounterDataService","registerEncounters","encounters","encStore","getValue","pathArray","getFirstValue","getAllObjects","getSingleObject","group_1","encounter","_transformEncounter","_.sortBy","reverse","putObject","getObject","answers","getAllValues","encounterDatetime","_.isNil","newpath","childObject","prevEncounter","location","patient","encounterType","provider","obs","processedObs","_transformObs","_.extend","obsRep","singleObs","_augumentObs","groupMembers","group_2","existing","toAdd","_.has","temp","apply","HistoricalHelperService","evaluate","expr","HD","deps","QuestionFactory","createQuestionModel","toFormQuestionModel","toSelectQuestion","schemaQuestion","questionOptions","addValidators","copyProperties","addDisableOrHideProperty","addAlertProperty","addHistoricalExpressions","addCalculatorProperty","toNumericQuestion","toNumberQuestion","toDateQuestion","toEncounterDatetimeQuestion","showTime","showWeeksAdder","weeksList","toCheckBoxQuestion","toMultiCheckboxQuestion","renderType","toTextAreaQuestion","toTextQuestion","toFileUploadQuestion","toDrugQuestion","toProblemQuestion","toConceptAnswerSelect","toRepeatingQuestion","getChildrenQuestionModels","testOrder","toTestOrderQuestion","orders","toGroupQuestion","toPageQuestion","toSectionQuestion","getSchemaQuestions","toPersonAttributeQuestion","searchFunction","resolveFunction","toEncounterProviderQuestion","toFieldSetQuestion","toReturn","toEncounterLocationQuestion","listQuestions","getQuestions","foundArray","toModel","generateId","showDate","convertOldVersionComplexObsQuestionToNewVersion","converted","mainField","JSON","stringify","shownDateOptions","obsField","dateField","dateOptions","assign","mappings","source","destination","historicalExpression","origValue","historicalHelperService","historicalPrepopulate","calculate","x","s","Math","random","floor","String","fromCharCode","Form","questionFactory","_dataSourcesContainer","found","aChildNode","questionType","searchNodeByQuestionType","findNodesByQuestionId","nodeAsGroup","results","_showErrors","invalidControlNodes","c","markAsTouched","groupNode","updateHiddenDisabledStateForAllControls","_updateHiddenDisabledStateForAllControls","updateAlertsForAllControls","_updateAlertsForAllControls","FormFactory","controlService","questionFactroy","controlRelationsFactory","createForm","createNode","parentNode","createArrayNode","createGroupNode","createLeafNode","controlModel","createNodeChildren","createArrayNodeChild","removeArrayNodeChild","factory","groupQuestion","group","nodeControl","nodeToRemove","controlIndexToRemove","ObsAdapterHelper","findObsAnswerToQuestion","obsArray","isObsNode","childQuestionsUuids","getChildQuestionsConceptUuids","isSubsetOf","getGroupMembersConceptUuids","obsWithGroupMembers","supersetArray","subsetArray","setSimpleObsNodeValue","obsToUse","initialValue","setNodeFormControlValue","setMultiselectObsNodeValue","obsUuids","obs_1","obs_1_1","setComplexObsNodeValue","valueField","setNodeValue","obsDatetime","setGroupObsNodeValue","setRepeatingGroupObsNodeValue","createdNode","getObsNodeType","answeringObs","multiselectObs","complexObs","groupObs","repeatingGroupObs","getSimpleObsPayload","voided","simpleNodeValueChanged","toOpenMrsDateTimeString","getComplexObsPayload","valuePayload","getObsNodePayload","areDatesEqual","payload","getMultiselectObsPayload","existingUuids","getGroupPayload","childrenPayload","groupPayload","getRepeatingGroupPayload","nodeAsArray","groupsUuidsAfterEditting","voidedGroup","groupNodePayoad","arrayNodePayload","simpleObs","groupedObs","repeatingGroupedObs","date1","date2","isSame","datetime","ObsValueAdapter","generateFormPayload","populateForm","setValues","forcegroup","setObsValue","_.find","setComplexObsValue","setRepeatingGroupValues","nodes_1","nodes_1_1","obsUuid","multiObs","_.filter","getMultiselectValues","multiObs_1","multiObs_1_1","groupRepeatingObs","intersect","schemaQuestions","_.intersection","groups","getQuestionNodes","arrays","pages_1","pages_1_1","repeatingGroup","nodes_2","nodes_2_1","traverse","processGroup","obsPayload","getObsPayload","mappedMembers","Boolean","mapInitialGroup","current","mapModelGroup","processRepeatingGroups","initialValues","repeatingModel","_d","_e","deleted","leftOuterJoinArrays","newObs","groupConcept","newObsPayload","deletedObs","createGroupDeletedObs","deletedObs_1","deletedObs_1_1","createGroupNewObs","newObsPayload_1","newObsPayload_1_1","first","second","obj2","_.isEqual","newPayload","payload_1","payload_1_1","payload_2","payload_2_1","getExactTime","processObs","obsValue","multis","processMultiSelect","mappedInitial","mappedCurrent","processDeletedMultiSelectObs","processNewMultiSelectObs","updateOrVoidObs","processComplexObs","createdPayload","values_1","values_1_1","values_2","values_2_1","qs","rep","multiSelectObs","values_3","values_3_1","isObs","nodes_3","nodes_3_1","OrderValueAdapter","formOrderNodes","_setOrderProvider","_findTestOrderQuestionNodes","_createOrdersPayload","existingOrders","_getExistingOrders","_setOrderValues","providerUuid","orderNodes","deletedOrders","selectedOrders","orderNode","orderNodeValues","order","orderValue","payloadOrder","_createPayloadOrder","orderNumber","orderNodes_1","orderNodes_1_1","_getDeletedOrders","_addDeletedOrdersToPayload","orderUuid","dateVoided","auditInfo","orderNodes_2","orderNodes_2_1","_setOrderNodeValues","orderConcept","quesitonExtras","orderer","careSetting","deleteOrders","existingOrderConcept","orders_1","orders_1_1","childNode","formNode","EncounterAdapter","ordersAdapter","obsAdapter","populateNode","getEncounterNodes","firstProvider","generateNodePayload","setNonFilledPayloadMembers","dateValue","utcOffset","encounterRole","_getEncounterNodes","patientUuid","setPayloadPatientUuid","visitUuid","setPayloadVisitUuid","encounterTypeUuid","setPayloadEncounterTypeUuid","formUuid","setPayloadFormUuid","encounterUuid","setPayloadEncounterUuid","_isEncounterNode","PersonAttribuAdapter","getPersonAttributeNodes","isSimpleValue","attributeType","hydratedObject","_getPersonAttributesNodes","RemoteSelectComponent","change","dataFromSourceChanged","subscribeToDataSourceDataChanges","items","notFoundMsg","restoreSelectedValue","selectC","search","_.map","_.clone","_.uniqBy","canSearch","loading","removed","RemoteSelectModule","AppointmentsOverviewComponent","resetProperties","showAppointments","loadingAppointments","monthlyScheduleResourceService","locationUuid","userLocation","startDate","endDate","endOf","_data_1","urlParams","encodeURI","programType","getMonthlySchedule","limit","locationUuids","programVisitEncounter","appointmentsLoaded","appointment","scheduled","appointments","errorLoadingAppointments","EncounterViewerService","resolveSelectedValueFromSchema","answerUuid","answer","hasAnswer","answered","questionsAnswered","$answered","ans","isDate","convertTime","unixTimestamp","getFullYear","getMonth","hour","getHours","getMinutes","getSeconds","EncounterViewerComponent","encounterViewerService","_schema","enc","fileDataSource","remoteDataSource","customDataSource","questionAnswered","checkForColon","questionLabel","EncounterContainerComponent","encAdapter","$form","$enc","QuestionControlComponent","isUuid","arrayElement","arr_1","el","str","_.isNumber","noop","FilePreviewComponent","encounterService","onChangeCallback","onTouchedCallback","onBlur","RemoteAnswerComponent","EncounterViewerModule","HttpModule","CheckboxControlComponent","selectOpt","checked","CheckboxModule","FormEntryModule","CollapseModule","DateTimePickerModule","MatIconModule","MatTabsModule","MatCardModule","NgxDateTimePickerModule","FormBuilder","Pair"],"mappings":"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","sourcesContent":["/*\nThis service checks if the debug mode on ng2-amrs\nhas been enabled by checking cookies.\nIf the debug mode has been enabled then\nit returns true and all fields are displayed\nfor use by testers\n*/\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\n\nexport class DebugModeService {\n\n    public cookieKey = 'formDebug';\n\n    constructor() {\n    }\n   public debugEnabled(): boolean {\n\n             // check if the hidefield\n            return false;\n     }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Observable } from 'rxjs';\nimport { AbstractControl } from '@angular/forms';\nimport { AfeFormControl } from '../../public_api';\nimport { AfeFormArray, AfeFormGroup } from '../../abstract-controls-extension';\n\n@Injectable()\nexport class FormErrorsService {\n\n  // Observable string sources\n  public static control: AfeFormControl | AfeFormArray | AfeFormGroup  = null;\n  public static tab: number = null;\n  public announceErrorFieldSource = new Subject<string>();\n  public announceErrorField$: Observable<any> = this.announceErrorFieldSource.asObservable();\n  public announceErrorField(error: string) {\n    this.announceErrorFieldSource.next(error);\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { AbstractControl } from '@angular/forms';\n\n// import { CanHide } from '../form-entry/control-hiders-disablers/can-hide';\n// import { CanDisable } from '../form-entry/control-hiders-disablers/can-disable';\n\nexport class ControlRelation {\n    private _control: AbstractControl;\n    private _relatedTo: AbstractControl;\n    private _lastUpdateValue: any;\n\n    constructor(control: AbstractControl, relatedTo: AbstractControl) {\n        this._control = control;\n        this._relatedTo = relatedTo;\n        this._registerForChangesFromRelatedControl();\n    }\n\n    get control(): AbstractControl {\n        return this._control;\n    }\n\n    get relatedTo(): AbstractControl {\n        return this._relatedTo;\n    }\n\n    get lastUpdateValue(): any {\n        return this._lastUpdateValue;\n    }\n\n    updateControlBasedOnRelation(newValue: any): boolean {\n        if (newValue !== this._lastUpdateValue) {\n            this._lastUpdateValue = newValue;\n\n            if ((this._control as any).updateCalculatedValue) {\n              (this._control as any).updateCalculatedValue();\n            }\n\n            this._control.updateValueAndValidity();\n            if ((this._control as any).updateHiddenState) {\n                (this._control as any).updateHiddenState();\n            }\n\n            if ((this._control as any).updateDisabledState) {\n                (this._control as any).updateDisabledState();\n            }\n\n            if ((this._control as any).updateAlert) {\n                (this._control as any).updateAlert();\n            }\n            return true;\n        }\n        return false;\n    }\n\n    private _registerForChangesFromRelatedControl() {\n\n      this._relatedTo.valueChanges.subscribe((value) => {\n        this.updateControlBasedOnRelation(value);\n      });\n    }\n}\n","import { AbstractControl } from '@angular/forms';\n\nimport { ControlRelation } from './control-relation';\n\nexport class ControlRelations {\n\n    private _relationFor: AbstractControl;\n    private _relations: ControlRelation[];\n    private _otherRelations: any = [];\n\n    constructor(relationFor: AbstractControl, relatedTo?: AbstractControl | AbstractControl[]) {\n        this._relationFor = relationFor;\n        this._relations = [];\n\n        if (relatedTo) {\n            this.addRelatedControls(relatedTo);\n        }\n    }\n\n    get relationsFor(): AbstractControl {\n        return this._relationFor;\n    }\n\n    get relations(): ControlRelation[] {\n        return this._relations;\n    }\n\n    get otherRelations() {\n      return this._otherRelations;\n    }\n\n    addRelatedControls(relatedTo: AbstractControl | AbstractControl[]) {\n        if (relatedTo instanceof AbstractControl) {\n            this.relations.push(new ControlRelation(this._relationFor, relatedTo));\n        }\n\n        if (relatedTo instanceof Array) {\n            for (let i = 0; i < relatedTo.length; i++) {\n                this.relations.push(new ControlRelation(this._relationFor, relatedTo[i]));\n            }\n        }\n    }\n}\n","import { CanHide, Hider } from './can-hide';\nexport class HiderHelper {\n\n    public hideControl(control: CanHide) {\n        control.hidden = true;\n        if (control.disable) {\n            control.disable();\n        }\n    }\n\n    public showControl(control: CanHide) {\n        control.hidden = false;\n    }\n\n    public setHiderForControl(control: CanHide, hider: Hider) {\n        control.hiders.push(hider);\n    }\n\n    public clearHidersForControl(control: CanHide) {\n        control.hiders.splice(0);\n        control.hidden = false;\n    }\n\n    public evaluateControlHiders(control: CanHide) {\n\n        let hiddenValue = false;\n        control.hiders.forEach(hider => {\n            hider.reEvaluateHidingExpression();\n            if (hider.toHide === true) {\n                hiddenValue = true;\n            }\n        });\n\n        control.hidden = hiddenValue;\n        if (control.hidden && control.disable) {\n            control.disable();\n            // control.setValue(null);\n        }\n    }\n\n    public setUpReEvaluationWhenValueChanges(control: CanHide) {\n        if (control.updateHiddenState) {\n            control.valueChanges.subscribe((val) => {\n                control.updateHiddenState();\n            });\n        }\n    }\n\n}\n","import { CanGenerateAlert, Alert } from './can-generate-alert';\nexport class AlertHelper {\n\n    public hideAlert(control: Alert) {\n        control.shown = false;\n    }\n\n    public showAlert(control: Alert) {\n        control.shown = true;\n    }\n\n    public setAlertsForControl(control: CanGenerateAlert, alert: Alert) {\n        control.alerts.push(alert);\n    }\n\n    public clearAlertsForControl(control: CanGenerateAlert) {\n        control.alerts.splice(0);\n        control.alert = '';\n    }\n\n    public evaluateControlAlerts(control: CanGenerateAlert) {\n        let messageValue = '';\n        control.alerts.forEach(message => {\n            message.reEvaluateAlertExpression();\n            if (message.shown === true) {\n                messageValue = message.alertMessage;\n            } else {\n                messageValue = '';\n            }\n        });\n\n        control.alert = messageValue;\n        // if (control.message && control.disable) {\n        //     control.disable();\n        //     // control.setValue(null);\n        // }\n    }\n\n    public setUpReEvaluationWhenValueChanges(control: CanGenerateAlert) {\n        if (control.updateAlert) {\n            control.valueChanges.subscribe((val) => {\n                control.updateAlert();\n            });\n        }\n    }\n\n}\n","import { CanDisable, Disabler } from './can-disable';\nexport class DisablerHelper {\n\n    public setDisablerForControl(control: CanDisable, disabler: Disabler) {\n        control.disablers.push(disabler);\n    }\n\n    public clearDisablersForControl(control: CanDisable) {\n        control.disablers.splice(0);\n        control.disable();\n    }\n\n    public evaluateControlDisablers(control: CanDisable) {\n        let toDisable = false;\n        control.disablers.forEach(hider => {\n            hider.reEvaluateDisablingExpression();\n            if (hider.toDisable === true) {\n                toDisable = true;\n            }\n        });\n\n        // console.log('Control', control);\n\n        if (toDisable) {\n            control.disable();\n        } else {\n            control.enable();\n        }\n    }\n\n    public setUpReEvaluationWhenValueChanges(control: CanDisable) {\n        if (control.updateDisabledState) {\n            control.valueChanges.subscribe((val) => {\n                control.updateDisabledState();\n            });\n        }\n    }\n\n}\n","import { AbstractControl } from '@angular/forms';\n\nimport { FormFactory } from './form.factory';\nimport { Form } from './form';\n\n// import { AfeControlType, AfeFormArray, AfeFormGroup, AfeFormControl } from '../../abstract-controls-extension';\nimport { QuestionBase, RepeatingQuestion } from '../question-models/models';\nimport { AfeFormControl, AfeFormArray, AfeFormGroup } from '../../abstract-controls-extension';\nexport interface ChildNodeCreatedListener {\n\n    addChildNodeCreatedListener(func: any);\n\n    fireChildNodeCreatedListener(node: GroupNode);\n}\n\nexport type CreateArrayChildNodeFunction = (question: RepeatingQuestion, node: ArrayNode, factory?: FormFactory) => GroupNode;\n\nexport interface RemoveArrayChildNodeFunction {\n    (index: number, node: ArrayNode);\n}\n\nexport class NodeBase {\n    public children?: any;\n    private _control: AfeFormControl | AfeFormArray | AfeFormGroup;\n    private _questionModel: QuestionBase;\n    private _form: Form;\n    private _path: string;\n\n    public initialValue: any;\n\n    constructor(question: QuestionBase, control?: AfeFormControl | AfeFormArray | AfeFormGroup, form?: Form, parentPath?: string) {\n        this._control = control;\n        this._questionModel = question;\n        this._form = form;\n        this._path = parentPath ? parentPath + '.' + question.key : question.key;\n    }\n\n    public get question(): QuestionBase {\n        return this._questionModel;\n    }\n\n    public get control(): AfeFormControl | AfeFormArray | AfeFormGroup {\n        return this._control;\n    }\n\n    public get form(): Form {\n        return this._form;\n    }\n\n    public get path(): string {\n        return this._path;\n    }\n    removeAt(index: number) {}\n\n    createChildNode() {}\n    removeChildNode() {}\n\n}\n\nexport class LeafNode extends NodeBase {\n    constructor(question: QuestionBase, control?: AfeFormControl | AfeFormArray | AfeFormGroup,\n         parentControl?: AfeFormControl | AfeFormArray | AfeFormGroup, form?: Form, parentPath?: string) {\n        super(question, control, form, parentPath);\n    }\n}\n\nexport class GroupNode extends NodeBase {\n    private _children: any;\n    constructor(question: QuestionBase, control?: AfeFormControl | AfeFormArray | AfeFormGroup,\n        parentControl?: AfeFormControl | AfeFormArray | AfeFormGroup, form?: Form, parentPath?: string) {\n        super(question, control, form, parentPath);\n        this._children = {};\n    }\n\n    public get children(): any {\n        return this._children;\n    }\n\n    public setChild(key: string, node: NodeBase) {\n        this.children[key] = node;\n    }\n\n}\n\nexport class ArrayNode extends NodeBase implements ChildNodeCreatedListener {\n\n    private childNodeCreatedEvents: any[] = [];\n    private _children: GroupNode[];\n    public createChildFunc: CreateArrayChildNodeFunction;\n    public removeChildFunc: RemoveArrayChildNodeFunction;\n\n    constructor(question: QuestionBase, control?: AfeFormControl | AfeFormArray | AfeFormGroup,\n        parentControl?: AfeFormControl | AfeFormArray | AfeFormGroup, private formFactory?: FormFactory,\n        form?: Form, parentPath?: string) {\n        super(question, control, form, parentPath);\n        this._children = [];\n        this.childNodeCreatedEvents = [];\n    }\n\n    public get children(): GroupNode[] {\n        return this._children;\n    }\n\n    public createChildNode(): GroupNode {\n        if (this.createChildFunc) {\n            const g: GroupNode = this.createChildFunc(this.question as RepeatingQuestion, this, this.formFactory);\n            this.fireChildNodeCreatedListener(g);\n            return g;\n        }\n        return null;\n    }\n\n    public removeAt(index: number) {\n        if (this.removeChildFunc) {\n            this.removeChildFunc(index, this);\n        }\n    }\n\n    addChildNodeCreatedListener(func: any) {\n        this.childNodeCreatedEvents.push(func);\n    }\n\n    fireChildNodeCreatedListener(node: GroupNode) {\n        for (let i = 0; i < this.childNodeCreatedEvents.length; i++) {\n\n            const func: any = this.childNodeCreatedEvents[i];\n            func(node);\n        }\n    }\n}\n\n\n","\nexport class ValidationModel {\n\n  type: string;\n\n  message: string;\n\n  constructor(validations: any) {\n\n    this.type = validations.type;\n    this.message = validations.message || null;\n  }\n}\n","\nimport { ValidationModel } from './validation.model';\n\nexport class JsExpressionValidationModel extends ValidationModel {\n\n  failsWhenExpression: string;\n\n  constructor(validations: any) {\n    super(validations);\n    this.failsWhenExpression = validations.failsWhenExpression;\n  }\n}\n","import { ValidationModel } from './validation.model';\n\nexport class ConditionalValidationModel extends ValidationModel {\n\n  referenceQuestionId: string;\n  referenceQuestionAnswers: any;\n\n  constructor(validations: any) {\n    super(validations);\n    this.referenceQuestionId = validations.referenceQuestionId;\n    this.referenceQuestionAnswers = validations.referenceQuestionAnswers;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n// import { ControlRelation } from  '../../change-tracking/control-relation';\nimport { QuestionBase } from '../question-models/question-base';\nimport { JsExpressionValidationModel } from '../question-models/js-expression-validation.model';\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\nimport { NodeBase, GroupNode, LeafNode, ArrayNode } from './form-node';\nimport { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { AfeFormArray } from '../../abstract-controls-extension/afe-form-array';\nimport { Form } from './form';\n\n@Injectable()\nexport class ControlRelationsFactory {\n\n  constructor() { }\n\n  buildRelations(rootNode: GroupNode) {\n\n    const controlsStore: any = this.mapControlIds(rootNode, {});\n\n    for (const key in controlsStore) {\n      if (controlsStore.hasOwnProperty(key)) {\n        const nodeBase: NodeBase = controlsStore[key];\n\n        this.setRelations(controlsStore, nodeBase);\n      }\n    }\n  }\n\n  buildArrayNodeRelations(node: GroupNode) {\n\n    const form: Form = node.form;\n\n    if (!form) {\n      return;\n    }\n    const rootNode: GroupNode = form.rootNode;\n\n    // build relations for controls in the same array\n    this.buildRelations(node);\n\n    // build relations for control outside the array\n    const rootControlsStore: any = this.mapControlIds(rootNode, {});\n    const arrayControlStore: any = this.mapControlIds(node, {});\n\n    for (const key in rootControlsStore) {\n\n      if (rootControlsStore.hasOwnProperty(key)) {\n\n        const child: NodeBase = rootControlsStore[key];\n\n        if (child instanceof LeafNode) {\n\n          const questionBase: QuestionBase = (child as LeafNode).question;\n\n          if (questionBase.key && questionBase.key.length > 0) {\n            this.setRelations(arrayControlStore, child);\n          }\n        }\n      }\n    }\n\n    // define relations for controls outside the group to controls in this group\n    this.createRelationsToArrayControls(node);\n\n    // fire relations\n    for (const id in arrayControlStore) {\n      if (arrayControlStore.hasOwnProperty(id)) {\n\n        const child: NodeBase = arrayControlStore[id];\n        const control: AfeFormControl | AfeFormArray = child.control as AfeFormControl | AfeFormArray;\n        control.updateHiddenState();\n        control.updateAlert();\n      }\n    }\n  }\n\n  createRelationsToArrayControls(node: GroupNode) {\n\n    const form: Form = node.form;\n\n    const rootNode: GroupNode = form.rootNode;\n\n    // build relations for control outside the array\n    const rootControlsStore: any = this.mapControlIds(rootNode, {});\n    const arrayControlStore: any = this.mapControlIds(node, {});\n\n    // loop through form controls\n    for (const key in rootControlsStore) {\n      if (rootControlsStore.hasOwnProperty(key)) {\n\n        const rChild: NodeBase = rootControlsStore[key];\n\n        const parentNodePath = node.path.substring(0, node.path.lastIndexOf('.'));\n\n        if (rChild.path.indexOf(parentNodePath + '.') === -1) {\n\n          // loop through controls in the array group\n          for (const id in arrayControlStore) {\n            if (arrayControlStore.hasOwnProperty(id)) {\n\n              const aChild: NodeBase = arrayControlStore[id];\n              const aChildId = aChild.question.key;\n              if (this.hasRelation(aChildId, rChild.question)) {\n\n                const nodes: Array<NodeBase> = node.form.searchNodeByPath(rootNode, parentNodePath, []);\n                if (nodes.length > 0) {\n                  const an = nodes[0] as ArrayNode;\n                  const rootControl = (rChild.control as AfeFormControl | AfeFormArray);\n\n                  if (rootControl.controlRelations.otherRelations.indexOf(an) === -1) {\n                    rootControl.controlRelations.otherRelations.push(an);\n                  }\n\n                  (aChild.control as AfeFormControl | AfeFormArray).addValueChangeListener((value) => {\n\n                    if ((rootControl as any).updateCalculatedValue) {\n                      (rootControl as any).updateCalculatedValue();\n                    }\n\n                    rootControl.updateValueAndValidity();\n                    if ((rootControl as any).updateHiddenState) {\n                      (rootControl as any).updateHiddenState();\n                    }\n\n                    if ((rootControl as any).updateAlert) {\n                      (rootControl as any).updateAlert();\n                    }\n\n                    if ((rootControl as any).updateDisabledState) {\n                      (rootControl as any).updateDisabledState();\n                    }\n                  });\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  getRelationsForControl(id, node: GroupNode): Array<AfeFormControl | AfeFormArray> {\n\n    const relations: Array<AfeFormControl | AfeFormArray> = new Array<AfeFormControl | AfeFormArray>();\n\n    const nodeBaseArray: Array<NodeBase> = node.form.searchNodeByQuestionId(id);\n\n    if (nodeBaseArray.length > 0) {\n\n      const nodeBase: NodeBase = nodeBaseArray[0];\n\n      const controlList: any = this.mapControlIds(node, {});\n\n      for (const key in controlList) {\n        if (controlList.hasOwnProperty(key)) {\n\n          if (this.hasRelation(controlList[key].question.key, nodeBase.question)) {\n            relations.push(controlList[key].control);\n          }\n        }\n      }\n    }\n    return relations;\n  }\n\n  mapControlIds(node: GroupNode, controlsStore: any) {\n\n    const children: NodeBase = node.children;\n\n    for (const key in children) {\n\n      if (children.hasOwnProperty(key)) {\n\n        const child: NodeBase = children[key];\n\n        if (child instanceof GroupNode) {\n\n          this.mapControlIds(child, controlsStore);\n        } else if (child instanceof LeafNode) {\n\n          const questionBase: QuestionBase = (child as LeafNode).question;\n\n          if (questionBase.key && questionBase.key.length > 0) {\n            controlsStore[questionBase.key] = child;\n          }\n        } else if (child instanceof ArrayNode) {\n\n          const questionBase: QuestionBase = (child as ArrayNode).question;\n\n          if (questionBase.key && questionBase.key.length > 0) {\n            controlsStore[questionBase.key] = child;\n          }\n        }\n      }\n    }\n\n    return controlsStore;\n  }\n\n  setRelations(controlsStore: any, nodeBase: NodeBase) {\n\n    const questionBase: QuestionBase = nodeBase.question;\n\n    const id = questionBase.key;\n\n    for (const key in controlsStore) {\n      if (controlsStore.hasOwnProperty(key) && key !== id) {\n\n        const node: NodeBase = controlsStore[key];\n        const question: QuestionBase = node.question;\n\n        if (this.hasRelation(id, question, nodeBase)) {\n          this.addRelationToControl(node.control as AfeFormControl | AfeFormArray, nodeBase.control as AfeFormControl | AfeFormArray);\n        }\n\n        // add conditional required and conditional answered relations\n        if (typeof question.required === 'object') {\n\n          const required: any = question.required;\n\n          if (required.type === 'conditionalRequired') {\n\n            if (required.referenceQuestionId === id) {\n              this.addRelationToControl(node.control as AfeFormControl | AfeFormArray,\n                nodeBase.control as AfeFormControl | AfeFormArray);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  hasRelation(id: string, questionBase: QuestionBase, nodeBase?: NodeBase) {\n\n    let hasRelation = false;\n\n    if (questionBase.validators && questionBase.validators.length > 0) {\n\n      questionBase.validators.forEach(element => {\n\n        if (element instanceof JsExpressionValidationModel) {\n\n          const model: JsExpressionValidationModel = element as JsExpressionValidationModel;\n\n          const failsWhenExpression: string = model.failsWhenExpression;\n          if (failsWhenExpression && failsWhenExpression.indexOf(id) !== -1) {\n            hasRelation = true;\n          }\n        } else if (element instanceof ConditionalValidationModel && element.type === 'conditionalAnswered'\n          && element.referenceQuestionId === id) {\n          hasRelation = true;\n        }\n      });\n    }\n\n    // add hiders and disablers relations\n    if (!hasRelation) {\n\n      if (typeof questionBase.hide === 'string') {\n\n        const hide: string = questionBase.hide as string;\n\n        if (hide.length > 0 && hide.indexOf(id) !== -1) {\n          hasRelation = true;\n        }\n      } else if (typeof questionBase.hide === 'object') {\n\n        const hideObj: any = questionBase.hide;\n\n        if (hideObj.field === id) {\n          hasRelation = true;\n        }\n      }\n\n     if ( questionBase.alert && typeof questionBase.alert === 'object') {\n        hasRelation = true;\n      }\n\n      if (typeof questionBase.disable === 'string') {\n\n        const disable: string = questionBase.disable as string;\n\n        if (disable.length > 0 && disable.indexOf(id) !== -1) {\n          hasRelation = true;\n        }\n      }\n    }\n\n    // add calculate expressions relations\n    if (!hasRelation && questionBase.calculateExpression && questionBase.calculateExpression.length > 0\n      && questionBase.calculateExpression.indexOf(id) !== -1) {\n      hasRelation = true;\n    }\n\n    return hasRelation;\n  }\n\n  addRelationToControl(control: AfeFormControl | AfeFormArray, related: AfeFormControl | AfeFormArray) {\n\n    //  let relations = control.controlRelations.relations;\n    //\n    //  let hasRelation = false;\n    //\n    //   relations.forEach(element => {\n    //\n    //     let controlRelation: ControlRelation = element as ControlRelation;\n    //\n    //     let relation: AfeFormControl | AfeFormArray = controlRelation.control as AfeFormControl | AfeFormArray;\n    //\n    //     if ( control.uuid !== undefined && control.uuid === relation.uuid ) {\n    //       hasRelation = true;\n    //     }\n    //   });\n\n    // if ( !hasRelation ) {\n    control.controlRelations.addRelatedControls(related);\n    // }\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { AfeFormControl, AfeFormArray, AfeFormGroup } from '../../abstract-controls-extension/control-extensions';\nimport { ArrayNode } from '../form-factory/form-node';\nimport { ControlRelationsFactory } from '../form-factory/control-relations.factory';\nimport { Form } from '../form-factory/form';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\nexport class ExpressionRunner {\n    getRunnable(expression: string, control: AfeFormArray | AfeFormGroup | AfeFormControl,\n        helper: any, dataDependencies: any, form?: Form):\n        Runnable {\n        const runner = this;\n        const runnable: Runnable = {\n            run: () => {\n\n                /* tslint:disable */\n                let scope: any = {};\n                if (control.uuid) {\n                    scope[control.uuid] = control.value;\n                }\n                window['moment'] = moment;\n                // scope.moment = moment;\n                scope['myValue'] = control.value;\n                runner.getControlRelationValueString(control, scope);\n                runner.getHelperMethods(helper, scope);\n                runner.getDataDependencies(dataDependencies, scope);\n\n                if (form) {\n                    // console.error('Form defined', form);\n                    runner.getDataDependencies(form.dataSourcesContainer.dataSources, scope);\n                }\n\n                let paramList = '';\n                let argList = '';\n                for (let o in scope) {\n                    paramList = paramList === \"\" ? paramList + o : paramList + ',' + o;\n                    argList = argList === \"\" ? argList + \"scope['\" + o + \"']\" : argList + \",scope['\" + o + \"']\";\n                }\n\n                // prevent more than one return statements\n                if (expression.indexOf('return') === -1) {\n                    expression = '\"return ' + expression + '\"';\n                }\n\n                let funcDeclarationCode = 'var afeDynamicFunc = new Function(\"' + paramList + '\", ' + expression + ');';\n                let funcCallCode = 'afeDynamicFunc.call(this ' + (argList === '' ? '' : ',' + argList) + ');';\n\n                try {\n\n                    if (Object.keys(scope).indexOf('undefined') >= 0) {\n                        console.warn('Missing reference found', expression, scope);\n                        return false;\n                    }\n                    //console.info('results: ', expression, eval(funcDeclarationCode + funcCallCode));\n                    return eval(funcDeclarationCode + funcCallCode);\n                } catch (e) {\n                    // if (window['error_count']) {\n                    //     window['error_count'] = window['error_count'] + 1;\n                    // } else {\n                    //     window['error_count'] = 1;\n                    // }\n                    // console.error(window['error_count'] + ' Error running expression:' + expression + '. ',\n                    //     e, control, 'Effective Expression', (funcDeclarationCode + funcCallCode));\n                    // console.error('Error running expression:' + expression + '. ',\n                    //     e, control, 'Effective Expression', (funcDeclarationCode + funcCallCode));\n\n                    // Uncomment the line above during debugging\n                    // console.error('Error running expression:' + expression, scope);\n\n                    return false;\n                }\n                /* tslint:enable */\n            }\n        };\n        return runnable;\n    }\n\n    private getControlRelationValueString(control: AfeFormArray | AfeFormGroup | AfeFormControl, scope: any) {\n        if (control && control.controlRelations && control.controlRelations.relations) {\n            control.controlRelations.relations.forEach(relation => {\n                if (relation.relatedTo) {\n                    const related = relation.relatedTo as any;\n                    const relatedAsControl = relation.relatedTo as AbstractControl;\n                    if (relatedAsControl && Array.isArray(relatedAsControl.value)) {\n                        scope[related.uuid] = relation.relatedTo.value;\n                    } else {\n                        scope[related.uuid] = relation.relatedTo.value && relation.relatedTo.value.value ?\n                            relation.relatedTo.value.value : relation.relatedTo.value;\n                    }\n                }\n            });\n        }\n\n        if (control && control.controlRelations && control.controlRelations.otherRelations\n            && control.controlRelations.otherRelations.length > 0) {\n\n            control.controlRelations.otherRelations.forEach(node => {\n                if (node instanceof ArrayNode) {\n                    const arrayNode: ArrayNode = node as ArrayNode;\n                    const uuid = control.uuid;\n\n                    const controlRelationsFactory: ControlRelationsFactory = new ControlRelationsFactory();\n                    let relationsForControl: Array<AfeFormControl | AfeFormArray> = [];\n                    // get all related controls\n                    arrayNode.children.forEach(child => {\n                        relationsForControl = relationsForControl.concat(controlRelationsFactory.getRelationsForControl(uuid, child));\n\n                    });\n\n                    this.setControlArrayValues(control as AfeFormControl | AfeFormArray, relationsForControl, scope);\n                }\n            });\n        }\n    }\n\n    private setControlArrayValues(control: AfeFormControl | AfeFormArray,\n        relationsForControl: Array<AfeFormControl | AfeFormArray>, scope: any) {\n        const keys: Array<string> = this._getFormControlKeys(relationsForControl);\n\n        keys.forEach(key => {\n            const values: any = this._getValuesForKey(key, relationsForControl);\n            scope[key] = values;\n        });\n    }\n\n    private _getFormControlKeys(array: Array<AfeFormControl | AfeFormArray>): Array<string> {\n\n        const keys: Array<string> = [];\n        array.forEach(control => {\n\n            if (keys.indexOf(control.uuid) === -1) {\n                keys.push(control.uuid);\n            }\n        });\n\n        return keys;\n    }\n\n    private _getValuesForKey(key: string, array: Array<AfeFormControl | AfeFormArray>): any {\n        const values: any = [];\n\n        array.forEach(control => {\n\n            if (control.uuid === key) {\n                values.push(control.value);\n            }\n        });\n\n        return values;\n    }\n\n    private getHelperMethods(obj: any, scope?: any) {\n        for (const key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                scope[key] = obj[key];\n            }\n        }\n    }\n\n    private getDataDependencies(obj: any, scope?: any) {\n        for (const key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                scope[key] = obj[key];\n            }\n        }\n    }\n}\n\nexport interface Runnable {\n    run();\n}\n","import { FormControl, ValidatorFn, AsyncValidatorFn, AbstractControlOptions } from '@angular/forms';\n\nimport { ControlRelations } from '../change-tracking/control-relations';\nimport { ValueChangeListener } from './value-change.listener';\nimport { CanHide, Hider } from '../form-entry/control-hiders-disablers/can-hide';\nimport { CanDisable, Disabler } from '../form-entry/control-hiders-disablers/can-disable';\nimport { CanGenerateAlert, Alert } from '../form-entry/control-alerts/can-generate-alert';\nimport { HiderHelper } from '../form-entry/control-hiders-disablers/hider-helpers';\nimport { AlertHelper } from '../form-entry/control-alerts/alert-helpers';\nimport { DisablerHelper } from '../form-entry/control-hiders-disablers/disabler-helper';\nimport { CanCalculate } from '../form-entry/control-calculators/can-calculate';\nimport { ExpressionRunner } from '../form-entry/expression-runner/expression-runner';\n\nclass AfeFormControl extends FormControl implements CanHide, CanDisable, CanCalculate, CanGenerateAlert, ValueChangeListener {\n    private _controlRelations: ControlRelations;\n    private _valueChangeListener: any;\n    private _previousValue;\n    public uuid: string;\n    public pathFromRoot: string;\n\n    hidden = false;\n    hiders: Hider[];\n    alert: string;\n    alerts: Alert[];\n    calculator: Function;\n    disablers: Disabler[];\n\n    private hiderHelper: HiderHelper = new HiderHelper();\n    private disablerHelper: DisablerHelper = new DisablerHelper();\n    private AlertHelper: AlertHelper = new AlertHelper();\n    constructor(formState?: any, validator?: ValidatorFn | ValidatorFn[] | AbstractControlOptions | null,\n        asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[] | null) {\n        super(formState, validator, asyncValidator);\n        this._controlRelations = new ControlRelations(this);\n        this.hiders = [];\n        this.disablers = [];\n        this.alerts = [];\n\n        this.valueChanges.subscribe((value) => {\n            if (this._previousValue !== value) {\n                this.fireValueChangeListener(value);\n                this._previousValue = value;\n            }\n        });\n    }\n\n    get controlRelations(): ControlRelations {\n        return this._controlRelations;\n    }\n\n    disable(param?: { onlySelf?: boolean, emitEvent?: boolean }) {\n        super.disable(param);\n        super.setValue('');\n    }\n\n    hide() {\n        this.hiderHelper.hideControl(this);\n    }\n\n    show() {\n        this.hiderHelper.showControl(this);\n    }\n\n    setHidingFn(newHider: Hider) {\n        this.hiderHelper.setHiderForControl(this, newHider);\n    }\n\n    setCalculatorFn(newCalculator: Function) {\n        this.calculator = newCalculator;\n    }\n\n    updateCalculatedValue() {\n        if (this.calculator) {\n            const _val = this.calculator.call(ExpressionRunner, {});\n            this.setValue(_val);\n        }\n    }\n\n    clearHidingFns() {\n        this.hiderHelper.clearHidersForControl(this);\n    }\n\n    updateHiddenState() {\n        this.hiderHelper.evaluateControlHiders(this);\n    }\n\n    setDisablingFn(newDisabler: Disabler) {\n        this.disablerHelper.setDisablerForControl(this, newDisabler);\n    }\n\n    clearDisablingFns() {\n        this.disablerHelper.clearDisablersForControl(this);\n    }\n\n    updateDisabledState() {\n        this.disablerHelper.evaluateControlDisablers(this);\n    }\n\n    setAlertFn(newHider: Alert) {\n        this.AlertHelper.setAlertsForControl(this, newHider);\n    }\n\n    clearMessageFns() {\n        this.AlertHelper.clearAlertsForControl(this);\n    }\n\n    updateAlert() {\n        this.AlertHelper.evaluateControlAlerts(this);\n    }\n\n    addValueChangeListener(func: any) {\n        this._valueChangeListener = func;\n    }\n\n    fireValueChangeListener(value: any) {\n        if (this._valueChangeListener && typeof this._valueChangeListener === 'function') {\n            this._valueChangeListener(value);\n        }\n    }\n\n    setValue(value: any) {\n        super.setValue(value);\n    }\n}\nexport { AfeFormControl };\n","import { FormGroup, ValidatorFn, AsyncValidatorFn, AbstractControl } from '@angular/forms';\n\nimport { ControlRelations } from '../change-tracking/control-relations';\n\nimport { CanHide, Hider } from '../form-entry/control-hiders-disablers/can-hide';\nimport { CanDisable, Disabler } from '../form-entry/control-hiders-disablers/can-disable';\nimport { CanGenerateAlert, Alert } from '../form-entry/control-alerts/can-generate-alert';\nimport { HiderHelper } from '../form-entry/control-hiders-disablers/hider-helpers';\nimport { DisablerHelper } from '../form-entry/control-hiders-disablers/disabler-helper';\nimport { AlertHelper } from '../form-entry/control-alerts/alert-helpers';\n\nexport class AfeFormGroup extends FormGroup implements CanHide, CanDisable , CanGenerateAlert {\n    private _controlRelations: ControlRelations;\n\n    public uuid: string;\n    public pathFromRoot: string;\n\n    hidden: false;\n    hiders: Hider[];\n    alert: string;\n    alerts: Alert[];\n\n    disablers: Disabler[];\n\n    private hiderHelper: HiderHelper = new HiderHelper();\n    private disablerHelper: DisablerHelper = new DisablerHelper();\n    private AlertHelper: AlertHelper = new AlertHelper();\n\n    constructor(controls: { [key: string]: AbstractControl }, validator?: ValidatorFn, asyncValidator?: AsyncValidatorFn) {\n        super(controls, validator, asyncValidator);\n        this._controlRelations = new ControlRelations(this);\n        this.hiders = [];\n        this.disablers = [];\n        this.alerts = [];\n    }\n\n    get controlRelations(): ControlRelations {\n        return this._controlRelations;\n    }\n\n    hide() {\n        this.hiderHelper.hideControl(this);\n    }\n\n    show() {\n        this.hiderHelper.showControl(this);\n    }\n\n    disable(param?: { onlySelf?: boolean, emitEvent?: boolean }) {\n        super.disable(param);\n        super.setValue({});\n    }\n\n    setHidingFn(newHider: Hider) {\n        this.hiderHelper.setHiderForControl(this, newHider);\n    }\n\n    clearHidingFns() {\n        this.hiderHelper.clearHidersForControl(this);\n    }\n\n    updateHiddenState() {\n        this.hiderHelper.evaluateControlHiders(this);\n    }\n\n    setDisablingFn(newDisabler: Disabler) {\n        this.disablerHelper.setDisablerForControl(this, newDisabler);\n    }\n\n    clearDisablingFns() {\n        this.disablerHelper.clearDisablersForControl(this);\n    }\n\n    updateDisabledState() {\n        this.disablerHelper.evaluateControlDisablers(this);\n    }\n\n    setAlertFn(newHider: Alert) {\n        this.AlertHelper.setAlertsForControl(this, newHider);\n    }\n\n    clearMessageFns() {\n        this.AlertHelper.clearAlertsForControl(this);\n    }\n\n     updateAlert() {\n        this.AlertHelper.evaluateControlAlerts(this);\n    }\n    setValue(value: any) {\n        super.setValue(value);\n    }\n\n}\n","import { FormArray, ValidatorFn, AsyncValidatorFn, AbstractControl } from '@angular/forms';\n\nimport { ControlRelations } from '../change-tracking/control-relations';\nimport { ValueChangeListener } from './value-change.listener';\nimport { CanHide, Hider } from '../form-entry/control-hiders-disablers/can-hide';\nimport { CanGenerateAlert, Alert } from '../form-entry/control-alerts/can-generate-alert';\nimport { CanDisable, Disabler } from '../form-entry/control-hiders-disablers/can-disable';\nimport { HiderHelper } from '../form-entry/control-hiders-disablers/hider-helpers';\nimport { AlertHelper } from '../form-entry/control-alerts/alert-helpers';\nimport { DisablerHelper } from '../form-entry/control-hiders-disablers/disabler-helper';\n\n\nexport class AfeFormArray extends FormArray implements CanHide, CanDisable, CanGenerateAlert, ValueChangeListener {\n    private _controlRelations: ControlRelations;\n    private _valueChangeListener: any;\n    private _previousValue;\n    private _uuid: string;\n    public pathFromRoot: string;\n\n    hidden: false;\n    hiders: Hider[];\n\n    alert: string;\n    alerts: Alert[];\n\n    disablers: Disabler[];\n\n    private hiderHelper: HiderHelper = new HiderHelper();\n    private AlertHelper: AlertHelper = new AlertHelper();\n    private disablerHelper: DisablerHelper = new DisablerHelper();\n\n    constructor(controls: AbstractControl[], validator?: ValidatorFn, asyncValidator?: AsyncValidatorFn) {\n        super(controls, validator, asyncValidator);\n        this._controlRelations = new ControlRelations(this);\n        this.hiders = [];\n        this.alerts = [];\n        this.disablers = [];\n\n        this.valueChanges.subscribe((value) => {\n          if (this._previousValue !== value) {\n            this.fireValueChangeListener(value);\n            this._previousValue = value;\n          }\n        });\n    }\n\n    get uuid(): string {\n        return this._uuid;\n    }\n    set uuid(val: string) {\n        this._uuid = val;\n    }\n\n    get controlRelations(): ControlRelations {\n        return this._controlRelations;\n    }\n\n    hide() {\n        this.hiderHelper.hideControl(this);\n    }\n\n    show() {\n        this.hiderHelper.showControl(this);\n    }\n\n    disable(param?: { onlySelf?: boolean, emitEvent?: boolean }) {\n        super.disable(param);\n        super.setValue([]);\n    }\n\n    setHidingFn(newHider: Hider) {\n        this.hiderHelper.setHiderForControl(this, newHider);\n    }\n\n    clearHidingFns() {\n        this.hiderHelper.clearHidersForControl(this);\n    }\n\n    updateHiddenState() {\n        this.hiderHelper.evaluateControlHiders(this);\n    }\n\n    setDisablingFn(newDisabler: Disabler) {\n        this.disablerHelper.setDisablerForControl(this, newDisabler);\n    }\n\n    clearDisablingFns() {\n        this.disablerHelper.clearDisablersForControl(this);\n    }\n\n    updateDisabledState() {\n        this.disablerHelper.evaluateControlDisablers(this);\n    }\n\n    setAlertFn(newHider: Alert) {\n        this.AlertHelper.setAlertsForControl(this, newHider);\n    }\n\n    clearMessageFns() {\n        this.AlertHelper.clearAlertsForControl(this);\n    }\n\n     updateAlert() {\n        this.AlertHelper.evaluateControlAlerts(this);\n    }\n\n    addValueChangeListener(func: any) {\n      this._valueChangeListener = func;\n    }\n\n    fireValueChangeListener(value: any) {\n      if (this.alerts.length > 0) {\n        this.updateAlert();\n      }\n      if (this._valueChangeListener && typeof this._valueChangeListener === 'function') {\n        this._valueChangeListener(value);\n      }\n    }\n\n    setValue(value: any) {\n        super.setValue(value);\n    }\n\n}\n","import { BaseOptions } from './interfaces/base-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\nimport { ValidationModel } from './validation.model';\n\nexport class QuestionBase implements BaseOptions {\n    type: string;\n    order?: number;\n    questionOptions?: any;\n    questions?: any;\n    placeholder?: any;\n    hidden?: any;\n    showTime?: any;\n    showWeek?: any;\n    historicalDisplay?: any;\n    rows?: any;\n    showWeeksAdder?: any;\n    key: string;    alert?: any;\n\n    label?: string;\n    renderingType: string;\n\n    defaultValue?: any;\n    originalValue?: any;\n    enableHistoricalValue?: boolean;\n    showHistoricalValueDate?: boolean;\n    historicalDataValue?: any;\n    extras?: any;\n    dataSource?: string;\n    dataSourceOptions?: any;\n\n    controlType?: AfeControlType;\n    validators?: Array<ValidationModel>;\n    required?: boolean;\n    hide?: string | boolean;\n    disable?: string | boolean;\n    calculateExpression?: string;\n    options?: any;\n\n    constructor(options: BaseOptions) {\n\n        this.defaultValue = options.defaultValue;\n        this.originalValue = options.originalValue;\n        this.extras = options.extras;\n        this.renderingType = options.type;\n        this.key = options.key || '';\n        this.label = options.label || '';\n        this.validators = options.validators || [];\n        this.required = options.required;\n        this.hide = options.hide;\n        this.disable = options.disable;\n        this.alert = options.alert;\n        this.historicalDataValue = options.historicalDataValue;\n        this.calculateExpression = options.calculateExpression;\n    }\n\n    setHistoricalValue(v: boolean) {\n        this.enableHistoricalValue = v;\n    }\n    showHistoricalEncounterDate(v?: boolean) {\n      this.showHistoricalValueDate = v === undefined ? true : v;\n    }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\n\nexport class ConditionalRequiredValidator {\n\n  constructor() {}\n\n  validate(model: ConditionalValidationModel) {\n\n    // convert helper functions to string\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      const value = control.value;\n      let relationValue = null;\n      const referenceQuestionId: string = model.referenceQuestionId;\n      const referenceQuestionAnswers: any = model.referenceQuestionAnswers;\n      let isRequired: boolean;\n\n      if (control && control.controlRelations && control.controlRelations.relations) {\n          control.controlRelations.relations.forEach(relation => {\n\n            const relatedAsControl = relation.relatedTo as any;\n            if (relatedAsControl.uuid === referenceQuestionId) {\n              if (relatedAsControl && Array.isArray(relatedAsControl.value)) {\n                  relationValue = relation.relatedTo.value;\n              } else {\n                  relationValue = relation.relatedTo.value && relation.relatedTo.value.value ?\n                      relation.relatedTo.value.value : relation.relatedTo.value;\n              }\n            }\n          });\n      }\n\n      if (typeof referenceQuestionAnswers === 'object' && referenceQuestionAnswers.indexOf(relationValue) !== -1) {\n        isRequired = true;\n      }\n\n      if (isRequired && !value) {\n        return { 'conditional_required': { message:  model.message  } };\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\n\nexport class ConditionalAnsweredValidator {\n\n  constructor() {}\n\n  validate(model: ConditionalValidationModel) {\n\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      const value = control.value;\n      let relationValue = null;\n      const referenceQuestionId: string = model.referenceQuestionId;\n      const referenceQuestionAnswers: any = model.referenceQuestionAnswers;\n      let successCondition: any = true;\n\n      if (value) {\n        if (control && control.controlRelations && control.controlRelations.relations) {\n            control.controlRelations.relations.forEach(relation => {\n\n              const relatedAsControl = relation.relatedTo as any;\n              if (relatedAsControl.uuid === referenceQuestionId) {\n                if (Array.isArray(relatedAsControl.value)) {\n                    relationValue = relatedAsControl.value;\n                } else {\n                    relationValue = relatedAsControl.value && typeof relatedAsControl.value === 'object' && relatedAsControl.value.value ?\n                        relatedAsControl.value.value : relatedAsControl.value;\n                }\n              }\n\n              if (!relationValue) {\n                successCondition = false;\n              } else if (typeof referenceQuestionAnswers === 'object' && referenceQuestionAnswers.indexOf(relationValue) === -1) {\n                successCondition = false;\n              }\n            });\n        }\n      }\n\n      if (!successCondition) {\n        return { 'conditional_answered': { message:  model.message  } };\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\n\nexport class RequiredValidator {\n\n  validate(control: AfeFormControl) {\n\n    if (control.hidden) {\n      return null;\n    }\n\n    const value: any = control.value;\n    const isEmpty: boolean = value == null || typeof value === 'string' && value.length === 0;\n\n    return isEmpty ? { 'required': true } : null;\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\n\n\nexport class DateValidator {\n\n  constructor() { }\n\n  validate(control: AfeFormControl) {\n\n    if (control.hidden) {\n      return null;\n    }\n\n    const value = control.value;\n\n    if (value && value.length !== 0) {\n\n      // YYYY-MM-DD or DD-MM-YYYY\n      const test: boolean = !/Invalid|NaN/.test(new Date(value).toString());\n\n      return test ? null : { 'date': true };\n    } else {\n      return null;\n    }\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\n\nexport class MinValidator {\n\n\n  validate(min: number) {\n\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      if (control.hidden) {\n        return null;\n      }\n      if (control.value && control.value.length !== 0) {\n\n        const v: number = control.value;\n        return v >= min ? null : { 'min': { requiredValue: min, actualValue: v } };\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\n\nexport class MaxValidator {\n\n  validate(max: number) {\n\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      if (control.hidden) {\n        return null;\n      }\n\n      if (control.value && control.value.length !== 0) {\n\n        const v: number = control.value;\n        return v <= max ? null : { 'max': { requiredValue: max, actualValue: v } };\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { DateValidator } from './date.validator';\n\nexport class MinDateValidator {\n\n  validate(min: Date) {\n\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      if (control.hidden) {\n        return null;\n      }\n\n      if (control.value && control.value.length !== 0) {\n\n        if (!new DateValidator().validate(control.value)) {\n\n          const newDate: Date = new Date(control.value);\n\n          return newDate.getTime() < min.getTime() ? { 'mindate': { 'requiredDate': min, actualDate: newDate } } : null;\n        } else {\n\n          return { 'mindate': { 'requiredDate': min } };\n        }\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { DateValidator } from './date.validator';\n\nexport class MaxDateValidator {\n\n  validate(max: Date) {\n\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      if (control.hidden) {\n        return null;\n      }\n\n      if (control.value && control.value.length !== 0) {\n\n        if (!new DateValidator().validate(control.value)) {\n\n          const newDate: Date = new Date(control.value);\n\n          return newDate.getTime() > max.getTime() ? { 'maxdate': { 'requiredDate': max, actualDate: newDate } } : null;\n        } else {\n\n          return { 'maxdate': { 'requiredDate': max } };\n        }\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { DateValidator } from './date.validator';\n\nexport class FutureDateRestrictionValidator {\n\n  constructor() { }\n\n  validate(control: AfeFormControl) {\n\n    if (control.hidden) {\n      return null;\n    }\n\n    const value = control.value;\n    const now: Date = new Date();\n\n    if (value && value.length !== 0) {\n\n      if (!new DateValidator().validate(value)) {\n\n        const d: Date = new Date(value);\n\n        return d.getTime() > now.getTime() ? { 'futureDateRestriction': true } : null;\n      }\n    }\n\n    return null;\n  }\n}\n","\nexport class JsExpressionHelper {\n\n  calcBMI(height, weight) {\n\n    let r;\n    if (height && weight) {\n      r = (weight / (height / 100 * height / 100)).toFixed(1);\n    }\n    return height && weight ? parseFloat(r) : null;\n  }\n\n  isEmpty(val) {\n\n    if (val === undefined || val === null || val === '' || val === 'null' || val === 'undefined') {\n      return true;\n    }\n\n    if (Array.isArray(val) && val.length === 0) {\n      return true;\n    }\n    return false;\n  }\n\n  arrayContains(array, members) {\n\n    if (Array.isArray(members)) {\n\n      if (members.length === 0) {\n        return true;\n      }\n\n      let contains = true;\n\n      for (let i = 0; i < members.length; i++) {\n        const val = members[i];\n        if (array.indexOf(val) === -1) {\n          contains = false;\n        }\n      }\n\n      return contains;\n    } else {\n      return array.indexOf(members) !== -1;\n    }\n  }\n  extractRepeatingGroupValues(key, array) {\n    const values = array.map(function(item) {\n    return item[key];\n    });\n  return values;\n  }\n  formatDate(value, format, offset) {\n\n    format = format || 'yyyy-MM-dd';\n    offset = offset || '+0300';\n\n    if (!(value instanceof Date)) {\n\n      value = new Date(value);\n      if (value === null || value === undefined) {\n        throw new Error('DateFormatException: value passed ' +\n          'is not a valid date');\n      }\n    }\n\n    return value; // TODO implement this\n    // return $filter('date')(value, format, offset);\n  }\n\n  arrayContainsAny(array, members) {\n\n    if (Array.isArray(members)) {\n      if (members.length === 0) {\n        return true;\n      }\n      let contains = false;\n\n      for (let i = 0; i < members.length; i++) {\n\n        const val = members[i];\n        if (array.indexOf(val) !== -1) {\n          contains = true;\n        }\n      }\n      return contains;\n    } else {\n      return array.indexOf(members) !== -1;\n    }\n  }\n\n  get helperFunctions() {\n    const helper = this;\n    return {\n      arrayContainsAny: helper.arrayContainsAny,\n      calcBMI: helper.calcBMI,\n      isEmpty: helper.isEmpty,\n      arrayContains: helper.arrayContains,\n      extractRepeatingGroupValues: helper.extractRepeatingGroupValues,\n    };\n  }\n}\n","\n\nexport class Validations {\n\n  public static JSExpressionValidatorsEnabled = false;\n\n  constructor() {}\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { ExpressionRunner } from '../expression-runner/expression-runner';\nimport { JsExpressionHelper } from '../helpers/js-expression-helper';\nimport { JsExpressionValidationModel } from '../question-models/js-expression-validation.model';\nimport { Validations } from './validations';\n\nexport class JsExpressionValidator {\n\n  constructor() {}\n\n  validate(model: JsExpressionValidationModel, form?: any) {\n\n    // convert helper functions to string\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      if (!Validations.JSExpressionValidatorsEnabled) {\n        return null;\n      }\n\n      const expression = model.failsWhenExpression;\n      const helper = new JsExpressionHelper();\n      const dataDependencies = {};\n\n      const helperFunctions = helper.helperFunctions;\n      const runnable = new ExpressionRunner().getRunnable(expression, control, helperFunctions, dataDependencies, form);\n\n      if (runnable.run()) {\n\n        return { 'js_expression': { 'expression': expression, message:  model.message } };\n      }\n\n      return null;\n    };\n  }\n}\n","\nexport class Messages {\n\n  public static readonly REQUIRED_FIELD_MSG = 'This field is required!';\n\n  public static readonly INVALID_DATE_MSG = 'Provided date is invalid!';\n\n  public static readonly FUTURE_DATE_RESTRICTION_MSG = 'Future date is not allowed!';\n\n  public static readonly MIN_LENGTH_MSG = 'Min Length should be {minLength}';\n\n  public static readonly MAX_LENGTH_MSG = 'Max Length should be {maxLength}';\n\n  public static readonly MAX_DATE_MSG = 'Max Date should be {maxDate}';\n\n  public static readonly MIN_DATE_MSG = 'Min Date should be {minDate}';\n\n  public static readonly MAX_MSG = 'Max value should be {max}';\n\n  public static readonly MIN_MSG = 'Min value should be {min}';\n}\n","import {Injectable} from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport * as _ from 'lodash';\n\nimport { ConditionalRequiredValidator } from '../validators/conditional-required.validator';\nimport { ConditionalAnsweredValidator } from '../validators/conditional-answered.validator';\nimport { RequiredValidator } from '../validators/required.validator';\nimport { DateValidator } from '../validators/date.validator';\nimport { MinValidator } from '../validators/min.validator';\nimport { MaxValidator } from '../validators/max.validator';\nimport { MinDateValidator } from '../validators/min-date.validator';\nimport { MaxDateValidator } from '../validators/max-date.validator';\nimport { FutureDateRestrictionValidator } from '../validators/future-date-restriction.validator';\nimport { JsExpressionValidator } from '../validators/js-expression.validator';\nimport { QuestionBase } from '../question-models/question-base';\nimport { Messages } from '../utils/messages';\nimport { ValidationModel } from '../question-models/validation.model';\nimport { DateValidationModel } from '../question-models/date-validation.model';\nimport { MaxValidationModel} from '../question-models/max-validation.model';\nimport { MinValidationModel} from '../question-models/min-validation.model';\nimport { JsExpressionValidationModel } from '../question-models/js-expression-validation.model';\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\n\n@Injectable()\nexport class ValidationFactory {\n\n  constructor() {}\n\n  getValidators(question: QuestionBase, form?: any) {\n\n    const list: Array<any> = [];\n\n    if (question.validators) {\n\n      _.forEach(question.validators, (validator: ValidationModel) => {\n\n        switch (validator.type) {\n          case 'date':\n            list.push(this.dateValidator);\n            const allowFutureDates: boolean = ( <DateValidationModel>validator ).allowFutureDates;\n\n            if (!allowFutureDates) {\n              list.push(this.futureDateRestrictionValidator);\n            }\n            break;\n          case 'js_expression':\n            list.push(this.jsExpressionValidator.validate(<JsExpressionValidationModel>validator, form));\n            break;\n          case 'max':\n            list.push(this.getMaxValueValidator((<MaxValidationModel>validator).max));\n            break;\n          case 'min':\n            list.push(this.getMinValueValidator((<MinValidationModel>validator).min));\n            break;\n          case 'conditionalRequired':\n            list.push(this.conditionalRequiredValidator.validate(<ConditionalValidationModel>validator));\n            break;\n          case 'conditionalAnswered':\n            list.push(this.conditionalAnsweredValidator.validate(<ConditionalValidationModel>validator));\n            break;\n        }\n      });\n    }\n\n    if (question.required && typeof(question.required) === 'string' && question.required === 'true') {\n      list.push(this.requiredValidator);\n    } else {\n\n      // TODO - handle custom required validator\n    }\n\n    return list;\n  }\n\n  get conditionalRequiredValidator(): ConditionalRequiredValidator {\n    return new ConditionalRequiredValidator();\n  }\n\n  get conditionalAnsweredValidator(): ConditionalAnsweredValidator {\n    return new ConditionalAnsweredValidator();\n  }\n\n  get requiredValidator(): any {\n    return new RequiredValidator().validate;\n  }\n\n  get dateValidator(): any {\n    return new DateValidator().validate;\n  }\n\n  get futureDateRestrictionValidator(): any {\n    return new FutureDateRestrictionValidator().validate;\n  }\n\n  get maxDateValidator(): any {\n    return new MaxDateValidator().validate;\n  }\n\n  get minDateValidator(): any {\n    return new MinDateValidator().validate;\n  }\n\n  get minLengthValidator(): any {\n    return Validators.minLength;\n  }\n\n  get maxLengthValidator() {\n    return Validators.maxLength;\n  }\n\n  public getMinValueValidator(min: number): any {\n    return new MinValidator().validate(min);\n  }\n\n  public getMaxValueValidator(max: number): any {\n\n    return new MaxValidator().validate(max);\n  }\n\n  get jsExpressionValidator() {\n\n    return new JsExpressionValidator();\n  }\n\n  public errors(errors: any, question: QuestionBase): Array<string> {\n\n    const messages: Array<string> = [];\n\n    for (const property in errors) {\n        if (errors.hasOwnProperty(property)) {\n\n            switch (property) {\n              case 'required':\n                messages.push(Messages.REQUIRED_FIELD_MSG);\n                break;\n              case 'date':\n                messages.push(Messages.INVALID_DATE_MSG);\n                break;\n              case 'futureDateRestriction':\n                messages.push(Messages.FUTURE_DATE_RESTRICTION_MSG);\n                break;\n              case 'minlength':\n                messages.push(Messages.MIN_LENGTH_MSG.replace('{minLength}', errors.minlength.requiredLength));\n                break;\n              case 'maxlength':\n                messages.push(Messages.MIN_LENGTH_MSG.replace('{maxLength}', errors.maxlength.requiredLength));\n                break;\n              case 'maxdate':\n                messages.push(Messages.MAX_DATE_MSG.replace('{maxDate}', errors.maxdate.requiredDate));\n                break;\n              case 'mindate':\n                messages.push(Messages.MIN_DATE_MSG.replace('{minDate}', errors.mindate.requiredDate));\n                break;\n              case 'max':\n                messages.push(Messages.MAX_MSG.replace('{max}', errors.max.requiredValue));\n                break;\n              case 'min':\n                messages.push(Messages.MIN_MSG.replace('{min}', errors.min.requiredValue));\n                break;\n              case 'js_expression':\n                messages.push(errors['js_expression'].message);\n                break;\n              case 'conditional_required':\n                messages.push(errors['conditional_required'].message);\n                break;\n              case 'conditional_answered':\n                messages.push(errors['conditional_answered'].message);\n                break;\n            }\n        }\n    }\n\n    return messages;\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Disabler } from '../control-hiders-disablers/can-disable';\nimport { Hider } from '../control-hiders-disablers/can-hide';\n\nimport { ExpressionRunner, Runnable } from '../expression-runner/expression-runner';\nimport { AfeFormControl, AfeFormArray, AfeFormGroup\n} from '../../abstract-controls-extension';\nimport { QuestionBase } from '../question-models/question-base';\nimport { JsExpressionHelper } from '../helpers/js-expression-helper';\nimport { Form } from './form';\n// Add ability to display all fields for debugging\nimport { DebugModeService } from './../services/debug-mode.service';\n\n@Injectable()\nexport class HidersDisablersFactory {\n\n    constructor(private expressionRunner: ExpressionRunner,\n     private expressionHelper: JsExpressionHelper,\n     private _debugModeService: DebugModeService) {\n    }\n\n    getJsExpressionDisabler(question: QuestionBase, control: AfeFormControl | AfeFormArray | AfeFormGroup,\n        form?: Form): Disabler {\n        const runnable: Runnable =\n            this.expressionRunner.getRunnable(question.disable as string, control,\n                this.expressionHelper.helperFunctions, {}, form);\n        const disabler: Disabler = {\n            toDisable: false,\n            disableWhenExpression: question.disable as string,\n            reEvaluateDisablingExpression: () => {\n                const result = runnable.run();\n                disabler.toDisable = result;\n            }\n        };\n        return disabler;\n    }\n\n    getJsExpressionHider(question: QuestionBase, control: AfeFormControl | AfeFormArray | AfeFormGroup,\n        form?: Form): Hider {\n\n        const hide: any = question.hide;\n        const value: string = typeof hide === 'object' ? this.convertHideObjectToString(hide) : question.hide as string;\n\n        // check if debugging has been enabled\n\n        const debugEnabled = this._debugModeService.debugEnabled();\n\n        const runnable: Runnable = this.expressionRunner.getRunnable(value, control,\n        this.expressionHelper.helperFunctions, {}, form);\n\n        const hider: Hider = {\n            toHide: false,\n            hideWhenExpression: value,\n            reEvaluateHidingExpression: () => {\n                 /* if debug is enabled then hiders to be false\n                 else run the normal eveluator i.e runnable.run()\n                 */\n                if (debugEnabled === true) {\n                      hider.toHide = false ;\n                  } else {\n                      hider.toHide =  runnable.run();\n                  }\n            }\n        };\n        return hider;\n    }\n\n    convertHideObjectToString(hide: any) {\n\n      if (hide.value instanceof Array) {\n\n        const arrayStr: string = '\\'' + hide.value.join('\\',\\'') + '\\'';\n        const exp = '!arrayContains([' + arrayStr + '],' + hide.field + ')';\n        return exp;\n      }\n\n      return '';\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Alert } from '../control-alerts/can-generate-alert';\n\nimport { ExpressionRunner, Runnable } from '../expression-runner/expression-runner';\nimport { AfeFormControl, AfeFormArray, AfeFormGroup } from '../../abstract-controls-extension';\nimport { QuestionBase } from '../question-models/question-base';\nimport { JsExpressionHelper } from '../helpers/js-expression-helper';\nimport { Form} from './form';\n\n@Injectable()\nexport class AlertsFactory {\n    constructor(private expressionRunner: ExpressionRunner, private expressionHelper: JsExpressionHelper) {\n    }\n    getJsExpressionshowAlert(question: QuestionBase, control: AfeFormControl | AfeFormArray | AfeFormGroup,\n        form?: Form): Alert {\n        const runnable: Runnable =\n            this.expressionRunner.getRunnable(question.alert.alertWhenExpression, control,\n                this.expressionHelper.helperFunctions, {}, form);\n        const showAlert: Alert = {\n            shown: false,\n            alertWhenExpression: question.alert.alertWhenExpression,\n            alertMessage: question.alert.message,\n            reEvaluateAlertExpression: () => {\n                const result = runnable.run();\n                showAlert.shown = result;\n            }\n        };\n        return showAlert;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { AfeFormControl, AfeFormArray, AfeFormGroup, AfeControlType\n} from '../../abstract-controls-extension';\n\nimport { NestedQuestion } from '../question-models/interfaces/nested-questions';\n\nimport { QuestionBase } from '../question-models/question-base';\nimport { QuestionGroup } from '../question-models/group-question';\nimport { ValidationFactory } from '../form-factory/validation.factory';\nimport { HidersDisablersFactory } from './hiders-disablers.factory';\nimport { AlertsFactory } from './show-messages.factory';\nimport { Form } from './form';\nimport { ExpressionRunner, Runnable } from '../expression-runner/expression-runner';\nimport { JsExpressionHelper } from '../helpers/js-expression-helper';\n\n\n@Injectable()\nexport class FormControlService {\n    controls = [];\n    validationFactory: ValidationFactory;\n    hidersDisablersFactory: HidersDisablersFactory;\n\n    constructor(validationFactory: ValidationFactory,\n        hidersDisablersFactory: HidersDisablersFactory, private alertsFactory: AlertsFactory) {\n        this.validationFactory = validationFactory;\n        this.hidersDisablersFactory = hidersDisablersFactory;\n    }\n\n    generateControlModel(questionModel: QuestionBase | NestedQuestion, parentControl: AfeFormGroup,\n        generateChildren: boolean, form?: Form): AfeFormControl | AfeFormArray | AfeFormGroup {\n        if (questionModel instanceof QuestionBase) {\n            if (questionModel.controlType === AfeControlType.AfeFormArray) {\n                return this.generateFormArray(questionModel, parentControl, form);\n            }\n            if (questionModel.controlType === AfeControlType.AfeFormGroup) {\n                return this.generateFormGroupModel(questionModel, generateChildren, parentControl, form);\n            }\n\n            if (questionModel.controlType === AfeControlType.AfeFormControl) {\n                return this.generateFormControl(questionModel, parentControl, form);\n            }\n        }\n        return null;\n    }\n\n    generateFormGroupModel(question: QuestionBase, generateChildren: boolean,\n        parentControl?: AfeFormGroup, form?: Form): AfeFormGroup {\n        const formGroup = new AfeFormGroup({});\n        this.wireHidersDisablers(question, formGroup, form);\n        this.wireAlerts(question, formGroup, form);\n        if (parentControl instanceof AfeFormGroup) {\n            parentControl.setControl(question.key, formGroup);\n        }\n\n        const asGroup = question as QuestionGroup;\n\n        if (generateChildren && asGroup && asGroup.questions.length > 0) {\n            this._generateFormGroupChildrenModel(asGroup.questions, formGroup, form);\n        }\n\n        return formGroup;\n    }\n\n    _generateFormGroupChildrenModel(questions: QuestionBase[], parentControl: AfeFormGroup, form?: Form) {\n\n        if (questions.length > 0) {\n            questions.forEach(element => {\n                const generated = this.generateControlModel(element, parentControl, true, form);\n                if (generated !== null) {\n                    parentControl.addControl(element.key, generated);\n                }\n            });\n        }\n    }\n\n\n    generateFormArray(question: QuestionBase, parentControl?: AfeFormGroup, form?: Form): AfeFormArray {\n\n        const validators = this.validationFactory.getValidators(question, form);\n         let formArray: AfeFormArray;\n         if (validators && validators.length > 0) {\n             formArray = new AfeFormArray([], validators[0]);\n         } else {\n            formArray = new AfeFormArray([]);\n         }\n        formArray.uuid = question.key;\n        this.wireHidersDisablers(question, formArray, form);\n        this.wireAlerts(question, formArray, form);\n        if (parentControl instanceof AfeFormGroup) {\n            parentControl.setControl(question.key, formArray);\n        }\n\n        return formArray;\n    }\n\n    generateFormControl(question: QuestionBase, parentControl?: AfeFormGroup, form?: Form): AfeFormControl {\n\n        const value = question.defaultValue || '';\n        const validators = this.validationFactory.getValidators(question, form);\n\n        const control = new AfeFormControl(value, validators);\n        control.uuid = question.key;\n        this.wireHidersDisablers(question, control, form);\n        this.wireAlerts(question, control, form);\n        this.wireCalculator(question, control, (form ? form.dataSourcesContainer.dataSources : null));\n\n        if (parentControl instanceof AfeFormGroup) {\n            parentControl.setControl(question.key, control);\n        }\n\n        return control;\n    }\n\n    private wireAlerts(question: QuestionBase,\n        control: AfeFormArray | AfeFormGroup | AfeFormControl, form?: Form) {\n        if (question.alert && question.alert !== '') {\n            const alert = this.alertsFactory.getJsExpressionshowAlert(question, control, form);\n            control.setAlertFn(alert);\n        }\n    }\n    private wireHidersDisablers(question: QuestionBase,\n        control: AfeFormArray | AfeFormGroup | AfeFormControl, form?: Form) {\n        if (question.hide && question.hide !== '') {\n            const hider = this.hidersDisablersFactory.getJsExpressionHider(question, control, form);\n            control.setHidingFn(hider);\n        }\n\n        if (question.disable && question.disable !== '') {\n            const disable =\n                this.hidersDisablersFactory.getJsExpressionDisabler(question, control, form);\n            control.setDisablingFn(disable);\n        }\n    }\n\n    private wireCalculator(question: QuestionBase,\n        control: AfeFormControl, dataSource?: any) {\n        if (question.calculateExpression && question.calculateExpression !== '') {\n            const helper: JsExpressionHelper = new JsExpressionHelper();\n            const runner: ExpressionRunner = new ExpressionRunner();\n            const runnable: Runnable = runner.getRunnable(question.calculateExpression\n                , control,\n                helper.helperFunctions,\n                dataSource);\n            // this functionality strictly assumes the calculateExpression function has been defined in the JsExpressionHelper class\n            control.setCalculatorFn(runnable.run);\n        }\n\n    }\n\n}\n","export const DEFAULT_STYLES = `a {\n      color: white;\n      text-decoration: none;\n      font-size: 12px;\n      text-transform: uppercase;\n    }\n\n    ul {\n      list-style-type: none;\n      margin: 2px auto;\n      position: relative;\n    }\n\n    li {\n      display: block;\n      padding: 10px 20px;\n      white-space: nowrap;\n      transition: all 0.3s ease-in;\n      border-bottom: 4px solid transparent;\n    }\n\n    li:hover {\n      border-bottom: 4px solid white;\n      opacity: 0.7;\n      cursor: pointer;\n    }\n\n    .owl-theme .owl-controls .owl-nav {\n      position: absolute;\n      width: 100%;\n      top: 0;\n    }\n\n    .owl-theme .owl-controls .owl-nav [class*=\"owl-\"] {\n      position: absolute;\n      background: none;\n      color: black;\n    }\n\n    .owl-theme .owl-controls .owl-nav [class*=\"owl-\"]:hover {\n      background: none;\n      color: black;\n    }\n\n    .owl-theme .owl-controls .owl-nav .owl-next {\n      right: 0;\n      transform: translate(120%);\n    }\n\n    .owl-theme .owl-controls .owl-nav .owl-prev {\n      left: 0;\n      transform: translate(-120%);\n    }\n\n    .slick-initialized .swipe-tab-content {\n      position: relative;\n      min-height: 365px;\n    }\n    @media screen and (min-width: 767px) {\n      .slick-initialized .swipe-tab-content {\n        min-height: 500px;\n      }\n    }\n    .slick-initialized .swipe-tab {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      height: 50px;\n      background: none;\n      border: 0;\n      color: #757575;\n      cursor: pointer;\n      text-align: center;\n      border-bottom: 2px solid rgba(51, 122, 183, 0);\n      transition: all 0.5s;\n    }\n    .slick-initialized .swipe-tab:hover {\n      color: #337AB7;\n    }\n    .slick-initialized .swipe-tab.active-tab {\n      border-bottom-color: #337AB7;\n      color: #337AB7;\n      font-weight: bold;\n    }\n\n    .disabled {\n      opacity: .5;\n      pointer-events: none;\n    }\n\n    .select2-container {\n      margin-top: -5px;\n    }\n\n    .btn {\n      padding: 0px 12px !important;\n    }\n\n    .form-tooltip{\n      color:rgb(51, 122, 183);\n      display: inline-block;\n    }\n    .question-info{\n          opacity:0;\n          height:0px;\n          display: none;\n          transition-duration: opacity 1s ease-out;\n          transtion-delay: 0.5s;\n          padding-top: 2px;\n          padding-bottom: 2px;\n          color: #696969;\n          border-style: ridge;\n          border-width: 1px;\n          border-color: #337ab7;\n          margin-top: 2px;\n    }\n    .hide-info{\n      display:none;\n      height:0px;\n    }\n    .form-tooltip:hover ~ .question-info {\n          display:block;\n          opacity:1;\n          height:auto;\n     }\n    .form-tooltip .tooltipcontent::after {\n          content: \" \";\n          position: absolute;\n          bottom: 100%;  /* At the top of the tooltip */\n          right: 0%;\n          margin-left: -5px;\n          border-width: 5px;\n          border-style: solid;\n          border-top-color: transparent;\n          border-right-color: transparent;\n          border-bottom-color: #337ab7;\n          border-left-color: transparent;\n }\n\n    ng-select.form-control {\n      padding-top: 0;\n      height: auto;\n      padding-bottom: 0;\n    }\n\n .forms-dropdown-menu {\n     max-height: 450px;\n     overflow-y: scroll;\n }\n .no-border {\n  border: 0;\n  box-shadow: none;\n}\n\n    `;\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class DataSources {\n    private _dataSources: any = {};\n    constructor() {\n    }\n\n    get dataSources(): any {\n        return this._dataSources;\n    }\n\n    registerDataSource(key: string, dataSource: any, unWrap = false) {\n        if (unWrap) {\n            // tslint:disable-next-line:forin\n            for (const o in dataSource) {\n                console.log('registering', o, dataSource[o]);\n                this.registerDataSource(o, dataSource[o], false);\n            }\n        }\n        if (this.dataSources[key]) {\n            console.warn('Overriding registered data source', key);\n        }\n        this._dataSources[key] = dataSource;\n    }\n\n    clearDataSource(key: string) {\n        delete this._dataSources[key];\n    }\n\n}\n","import {\n  Component, OnInit, Input, Inject\n} from '@angular/core';\nimport 'hammerjs';\nimport { DEFAULT_STYLES } from './form-renderer.component.css';\nimport { DOCUMENT } from '@angular/common';\nimport { DataSources } from '../data-sources/data-sources';\nimport { NodeBase, LeafNode } from '../form-factory/form-node';\nimport { AfeFormGroup } from '../../abstract-controls-extension/afe-form-group';\nimport { ValidationFactory } from '../form-factory/validation.factory';\nimport { DataSource } from '../question-models/interfaces/data-source';\nimport { FormErrorsService } from '../services/form-errors.service';\nimport { QuestionGroup } from '../question-models/group-question';\n\n@Component({\n  selector: 'form-renderer',\n  template: `<!--CONTAINERS-->\n<div *ngIf=\"node.question.renderingType === 'form'\">\n  <div class=\"dropdown dropdown-tabs forms-dropdown\">\n    <a class=\"btn dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\">\n      <i class=\"fa fa-angle-double-down\"></i>\n    </a>\n    <ul class=\"dropdown-menu dropdown-menu-right forms-dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdownMenu\">\n      <li *ngFor=\"let question of node.question.questions; let i = index;\" (click)=\"clickTab(i)\" >\n        {{question.label}}\n      </li>\n    </ul>\n  </div>\n  <mat-tab-group (selectChange)='tabSelected($event)' [selectedIndex]='activeTab'>\n    <mat-tab [label]='question.label' *ngFor=\"let question of node.question.questions; let i = index;\">\n      <ng-template matTabContent>\n        <div (swipeLeft)='loadNextTab()' (swipeRight)='loadPreviousTab()'>\n          <form-renderer [name]=\"question.label\" [node]=\"node.children[question.key]\" [parentComponent]=\"this\" [parentGroup]=\"node.control\"></form-renderer>\n        </div>\n      </ng-template>\n    </mat-tab>\n  </mat-tab-group>\n\n  <div style=\"text-align: center;\">\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"loadPreviousTab()\" [ngClass]=\"{disabled: isCurrentTabFirst()}\">&lt;&lt;</button>\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"loadNextTab()\" [ngClass]=\"{disabled: isCurrentTabLast()}\">\n      &gt;&gt;</button>\n  </div>\n</div>\n<div *ngIf=\"node.question.renderingType === 'page'\">\n  <!--<h2>{{node.question.label}}</h2>-->\n  <form-renderer *ngFor=\"let question of node.question.questions\" [parentComponent]=\"this\" [node]=\"node.children[question.key]\"\n    [parentGroup]=\"parentGroup\" [name]=\"node.question.label\"></form-renderer>\n</div>\n<div *ngIf=\"node.question.renderingType === 'section'\">\n  <div class=\"panel  panel-primary\">\n    <div class=\"panel-heading\">\n      <button type=\"button\" class=\"btn btn-primary pull-right\" (click)=\"isCollapsed = !isCollapsed\">\n        {{isCollapsed ? 'Show' : 'Hide'}}\n      </button> {{node.question.label}}\n    </div>\n    <div class=\"panel-body\" [collapse]=\"isCollapsed\">\n      <form-renderer *ngFor=\"let question of node.question.questions\" [parentComponent]=\"this\" [node]=\"node.children[question.key]\"\n        [parentGroup]=\"parentGroup\" [name]=\"node.question.label + ' section'\"></form-renderer>\n    </div>\n  </div>\n</div>\n\n<!-- MESSAGES -->\n<div *ngIf=\"node.control && node.control.alert && node.control.alert !== ''\" class=\"alert alert-warning\">\n  <a href=\"#\" class=\"close\" data-dismiss=\"alert\">&times;</a> {{node.control.alert}}\n</div>\n\n<!--CONTROLS-->\n\n<div *ngIf=\"node.question.controlType === 0\" class=\"form-group\" [formGroup]=\"parentGroup\" [hidden]=\"node.control.hidden\"\n  [ngClass]=\"{disabled: node.control.disabled}\">\n  <!--LEAF CONTROL-->\n  <div class=\"question-area\">\n    <a class=\"form-tooltip pull-right\" (click)=\"toggleInformation(node.question.extras.id)\" data-placement=\"right\" *ngIf=\"node.question && node.question.extras.questionInfo  && node.question.extras.questionInfo !== ''  && node.question.extras.questionInfo !== ' '\">\n      <i class=\"glyphicon glyphicon-question-sign\" aria-hidden=\"true\"></i>\n    </a>\n\n    <label *ngIf=\"node.question.label\" [style.color]=\"hasErrors()? 'red' :''\" class=\"control-label\" [attr.for]=\"node.question.key\">\n      {{node.question.required === true ? '*':''}} {{node.question.label}}\n    </label>\n    <div [ngSwitch]=\"node.question.renderingType\">\n      <select class=\"form-control\" *ngSwitchCase=\"'select'\" [formControlName]=\"node.question.key\" [id]=\"node.question.key + 'id'\">\n        <option *ngFor=\"let o of node.question.options\" [ngValue]=\"o.value\">{{o.label}}\n        </option>\n      </select>\n      <remote-file-upload *ngSwitchCase=\"'file'\" [dataSource]=\"dataSource\" [formControlName]=\"node.question.key\" [id]=\"node.question.key + 'id'\"\n        (fileChanged)=\"upload($event)\">\n      </remote-file-upload>\n      <textarea [placeholder]=\"node.question.placeholder\" [rows]=\"node.question.rows\" class=\"form-control\" *ngSwitchCase=\"'textarea'\"\n        [formControlName]=\"node.question.key\" [id]=\"node.question.key + 'id'\">\n      </textarea>\n      <remote-select *ngSwitchCase=\"'remote-select'\" [placeholder]=\"node.question.placeholder\" tabindex=\"0\" [dataSource]=\"dataSource\"\n        [componentID]=\"node.question.key + 'id'\" [formControlName]=\"node.question.key\" [id]=\"node.question.key + 'id'\"></remote-select>\n        \n    <!--\n      <date-time-picker *ngSwitchCase=\"'date'\" [showTime]=\"node.question.showTime\" tabindex=\"0\" [weeks]='node.question.extras.questionOptions.weeksList'\n        (onDateChange)=\"onDateChanged(node)\" [showWeeks]=\"node.question.showWeeksAdder\" [formControlName]=\"node.question.key\"\n        [id]=\"node.question.key + 'id'\"></date-time-picker>\n    -->\n    \n      <ngx-date-time-picker *ngSwitchCase=\"'date'\" [showTime]=\"node.question.showTime\" [id]=\"node.question.key + 'id'\" [formControlName]=\"node.question.key\"\n            (onDateChange)=\"onDateChanged(node)\" [showWeeks]=\"node.question.showWeeksAdder\" ></ngx-date-time-picker>\n\n      <ng-select *ngSwitchCase=\"'multi-select'\" [noFilter]=\"50\" [style.height]='auto' tabindex=\"0\" [formControlName]=\"node.question.key\"\n        [id]=\"node.question.key + 'id'\" [options]=\"node.question.options\" [multiple]=\"true\">\n      </ng-select>\n      <input class=\"form-control\" *ngSwitchCase=\"'number'\" [formControlName]=\"node.question.key \" [attr.placeholder]=\"node.question.placeholder \"\n        [type]=\"'number'\" [id]=\"node.question.key + 'id' \" [step]=\"'any'\" [min]=\"node.question.extras.questionOptions.min\"\n        [max]=\"node.question.extras.questionOptions.max\">\n      <input class=\"form-control\" *ngSwitchDefault [formControlName]=\"node.question.key \" [attr.placeholder]=\"node.question.placeholder \"\n        [type]=\"node.question.renderingType\" [id]=\"node.question.key + 'id' \">\n\n      <div *ngSwitchCase=\"'radio'\">\n        <div *ngFor=\"let o of node.question.options\">\n          <label class=\"form-control no-border\">\n            <input type=\"radio\" [formControlName]=\"node.question.key\" [id]=\"node.question.key + 'id'\" [value]=\"o.value\"> {{ o.label }}\n          </label>\n        </div>\n      </div>\n\n      <div *ngSwitchCase=\"'checkbox'\">\n        <checkbox [id]=\"node.question.key + 'id'\" [formControlName]=\"node.question.key\" [options]=\"node.question.options\"></checkbox>\n      </div>\n\n      <div *ngIf=\"node.question.enableHistoricalValue && node.question.historicalDisplay\">\n        <div class=\"container-fluid\">\n          <div class=\"row\">\n            <div class=\"col-xs-9\">\n              <span class=\"text-warning\">Previous Value: </span>\n              <strong>{{node.question.historicalDisplay?.text}}</strong>\n              <span *ngIf=\"node.question.showHistoricalValueDate\">\n                <span> | </span>\n                <strong class=\"text-primary\">{{node.question.historicalDisplay?._date}}</strong>\n              </span>\n\n            </div>\n            <button type=\"button\" [node]=\"node\" [name]=\"'historyValue'\" class=\"btn btn-primary btn-small col-xs-3\">Use Value\n            </button>\n          </div>\n        </div>\n      </div>\n      <appointments-overview [node]=\"node\"></appointments-overview>\n      <div *ngIf=\"hasErrors() \">\n        <p *ngFor=\"let e of errors() \">\n          <span class=\"text-danger \">{{e}}</span>\n        </p>\n      </div>\n    </div>\n\n    <div class=\"question-info col-md-12 col-lg-12 col-sm-12\" id=\"{{node.question.extras.id}}\" *ngIf=\"node.question && node.question.extras.questionInfo  && node.question.extras.questionInfo !== ''  && node.question.extras.questionInfo !== ' '\">\n      {{node.question.extras.questionInfo}}\n    </div>\n\n  </div>\n</div>\n<div *ngIf=\"node.question.controlType === 1\" [hidden]=\"node.control.hidden\" [ngClass]=\"{disabled: node.control.disabled}\">\n\n\n  <!--ARRAY CONTROL-->\n  <div [ngSwitch]=\"node.question.renderingType \">\n    <div class='well' style=\"padding: 2px; \" *ngSwitchCase=\" 'repeating' \">\n      <h4 style=\"margin: 2px; font-weight: bold;\">{{node.question.label}}</h4>\n      <hr style=\"margin-left:-2px; margin-right:-2px; margin-bottom:4px; margin-top:8px; border-width:2px;\" />\n      <div [ngSwitch]=\"node.question.extras.type\">\n        <div *ngSwitchCase=\"'testOrder'\">\n          <div *ngFor=\"let child of node.children; let i=index \">\n            <form-renderer *ngFor=\"let question of child.question.questions \" [parentComponent]=\"this\" [node]=\"child.children[question.key]\n            \" [parentGroup]=\"child.control \"></form-renderer>\n            <div>{{child.orderNumber}}</div>\n            <button type=\"button \" class='btn btn-sm btn-danger' (click)=\"node.removeAt(i) \">Remove</button>\n            <br/>\n            <hr style=\"margin-left:-2px; margin-right:-2px; margin-bottom:4px; margin-top:8px; border-width:1px;\" />\n          </div>\n        </div>\n\n        <div *ngSwitchCase=\"'obsGroup'\" style=\"margin-bottom:20px;\">\n          <div *ngFor=\"let child of node.children; let i=index \">\n            <form-renderer *ngFor=\"let question of child.question.questions \" [parentComponent]=\"this\" [node]=\"child.children[question.key]\n            \" [parentGroup]=\"child.control \"></form-renderer>\n            <button type=\"button \" class='btn btn-sm btn-danger' (click)=\"node.removeAt(i) \">Remove</button>\n            <br/>\n            <hr style=\"margin-left:-2px; margin-right:-2px; margin-bottom:4px; margin-top:8px; border-width:1px;\" />\n          </div>\n        </div>\n      </div>\n      <button type=\"button \" class='btn btn-primary' (click)=\"node.createChildNode() \">Add</button>\n    </div>\n  </div>\n\n</div>\n<div *ngIf=\"node.question.controlType === 2\" [hidden]=\"node.control.hidden\" [ngClass]=\"{disabled: node.control.disabled}\">\n\n  <!--GROUP-->\n  <div [ngSwitch]=\"node.question.renderingType \">\n    <div *ngSwitchCase=\" 'group' \">\n      <form-renderer *ngFor=\"let question of node.question.questions \" [parentComponent]=\"this\" [node]=\"node.children[question.key]\n            \" [parentGroup]=\"node.control \"></form-renderer>\n    </div>\n    <div *ngSwitchCase=\" 'field-set' \" style=\"border: 1px solid #eeeeee; padding: 2px; margin: 2px;\">\n      <form-renderer *ngFor=\"let question of node.question.questions \" [parentComponent]=\"this\" [node]=\"node.children[question.key]\n            \" [parentGroup]=\"node.control \"></form-renderer>\n    </div>\n  </div>\n\n</div>\n`,\n  styles: ['../../style/app.css', DEFAULT_STYLES]\n})\nexport class FormRendererComponent implements OnInit {\n  private _parentComponent: FormRendererComponent;\n  private _name: string;\n  @Input() public node: NodeBase;\n  @Input() public parentGroup: AfeFormGroup;\n  public childComponents: FormRendererComponent[] = [];\n  @Input() public set name(name: string) {\n    this._name = name;\n  }\n  @Input() public set parentComponent(parent: FormRendererComponent) {\n    this._parentComponent = parent;\n  }\n  public showTime: boolean;\n  public showWeeks: boolean;\n  public activeTab: number;\n  public dataSource: DataSource;\n  public isCollapsed = false;\n  public auto: any;\n\n  constructor(\n  private validationFactory: ValidationFactory,\n  private dataSources: DataSources,\n  private formErrorsService: FormErrorsService,\n  @Inject(DOCUMENT) private document: any) {\n    this.activeTab = 0;\n  }\n public ngOnInit() {\n\n    this.setUpRemoteSelect();\n    this.setUpFileUpload();\n    if (this.node && this.node.form) {\n      const tab = this.node.form.valueProcessingInfo.lastFormTab;\n      if (tab && tab !== this.activeTab) {\n        this.activeTab = tab;\n      }\n    }\n    if (this.node && this.node.question.renderingType === 'form') {\n      this.formErrorsService.announceErrorField$.subscribe(\n        (error) => {\n          this.scrollToControl(error);\n        });\n    }\n\n    if (this.node && this.node.question.renderingType === 'section') {\n      this.isCollapsed = !(this.node.question as QuestionGroup).isExpanded;\n    }\n\n  }\n\n  public addChildComponent(child: FormRendererComponent) {\n    this.childComponents.push(child);\n  }\n\n  public setUpRemoteSelect() {\n    if (this.node && this.node.question.extras &&\n    this.node.question.renderingType === 'remote-select') {\n      this.dataSource = this.dataSources.dataSources[this.node.question.dataSource];\n      if (this.dataSource && this.node.question.dataSourceOptions) {\n        this.dataSource.dataSourceOptions = this.node.question.dataSourceOptions;\n      }\n    }\n  }\n\n  public setUpFileUpload() {\n    if (this.node && this.node.question.extras && this.node.question.renderingType === 'file') {\n      this.dataSource = this.dataSources.dataSources[this.node.question.dataSource];\n      console.log('Key', this.node.question);\n      console.log('Data source', this.dataSource);\n    }\n\n  }\n\n\n public clickTab(tabNumber) {\n    this.activeTab = tabNumber;\n  }\n\n  public loadPreviousTab() {\n    if (!this.isCurrentTabFirst()) {\n      this.clickTab(this.activeTab - 1);\n      document.body.scrollTop = 0;\n    }\n  }\n\n  public  isCurrentTabFirst() {\n    return this.activeTab === 0;\n  }\n\n  public  isCurrentTabLast() {\n    return this.activeTab === this.node.question['questions'].length - 1;\n  }\n\n  public  loadNextTab() {\n    if (!this.isCurrentTabLast()) {\n      this.clickTab(this.activeTab + 1);\n      document.body.scrollTop = 0;\n    }\n  }\n  public  tabSelected($event) {\n    this.activeTab = $event.index;\n    this.setPreviousTab();\n  }\n  public  setPreviousTab() {\n    if (this.node && this.node.form) {\n      this.node.form.valueProcessingInfo['lastFormTab'] = this.activeTab;\n    }\n\n  }\n public   hasErrors() {\n    return this.node.control.touched && !this.node.control.valid;\n  }\n\n  public  errors() {\n    return this.getErrors(this.node);\n  }\n\n\n  public scrollToControl(error: string) {\n    const tab: number = +error.split(',')[0];\n    const elSelector = error.split(',')[1] + 'id';\n    // the tab components\n    const tabComponent: FormRendererComponent = this.childComponents[tab];\n\n    this.clickTab(tab);\n    setTimeout(() => {\n      // expand all sections\n      tabComponent.childComponents.forEach((section) => {\n        section.isCollapsed = false;\n        setTimeout(() => {\n          const element: any = this.document.getElementById(elSelector);\n          element.focus();\n        }, 200);\n      });\n\n    }, 200);\n  }\n\n  public onDateChanged(node: LeafNode) {\n    this.node = node;\n  }\n\n  public upload(event) {\n    console.log('Event', event);\n    console.log('Data', this.dataSource);\n  }\n\n  public toggleInformation(infoId) {\n    const e = document.getElementById(infoId);\n\n    if (e.style.display === 'block') {\n        e.style.display = 'none';\n     } else {\n        e.style.display = 'block';\n     }\n\n\n    console.log('InfoId', infoId);\n  }\n\n\n   private getErrors(node: NodeBase) {\n    const errors: any = node.control.errors;\n\n    if (errors) {\n\n      return this.validationFactory.errors(errors, node.question);\n    }\n\n    return [];\n  }\n}\n","import {\n    Component, OnInit, Input\n} from '@angular/core';\nimport * as _ from 'lodash';\n\nimport { Form } from '../form-factory/form';\nimport { ValidationFactory } from '../form-factory/validation.factory';\nimport { NodeBase, LeafNode } from '../form-factory/form-node';\nimport { QuestionGroup } from '../question-models/group-question';\nimport { FormErrorsService } from '../services/form-errors.service';\n\n@Component({\n    selector: 'error-renderer',\n    template: `<div *ngIf=\"showErrors()\" class=\"container\">\n<ul class=\"list-group\">\n  <li class=\"list-group-item list-group-item-warning\" *ngFor=\"let errorNode of errorNodes\" (click)=announceErrorField(errorNode)>\n    <div class=\"error\" *ngIf=\"errorNode.control.valid == false\">\n      <h4>{{errorNode.question.label}}</h4>\n      <span class=\"text-danger\"> {{getControlError(errorNode)}}</span>\n    </div>\n  </li>\n</ul>\n</div>\n`,\n    styles: [`ul{list-style:none}.list-group-item{padding:2px 15px;cursor:pointer}ul li:hover{background-color:#fff}h4{margin-top:7px;margin-bottom:7px}`]\n})\nexport class ErrorRendererComponent implements OnInit {\n\n  @Input() form: Form;\n\n  constructor(private validationFactory: ValidationFactory, private formErrorsService: FormErrorsService) {}\n\n  ngOnInit() {\n  }\n\n  showErrors() {\n    return !this.form.valid && this.form.showErrors;\n  }\n\n  get errorNodes() {\n\n    const invalidControls = this.form.markInvalidControls(this.form.rootNode, []);\n    return invalidControls;\n  }\n\n  getControlError(node: LeafNode) {\n      const errors: any = node.control.errors;\n\n      if (errors) {\n\n          return this.validationFactory.errors(errors, node.question);\n      }\n\n      return [];\n  }\n\n  announceErrorField(errorNode: LeafNode) {\n\n    const nodes: Array<NodeBase> = this.form.searchNodeByQuestionId(errorNode.path.substring(0, errorNode.path.indexOf('.')));\n\n    _.forEach(nodes, (node: NodeBase) => {\n\n      if (node.question.renderingType === 'page') {\n        const pageIndex: number = this.getPageIndex(node);\n        this.formErrorsService.announceErrorField(pageIndex + ',' + errorNode.question.key);\n      }\n    });\n  }\n\n  getPageIndex(node: NodeBase) {\n     const questionGroup: QuestionGroup = this.form.rootNode.question as QuestionGroup;\n     return questionGroup.questions.indexOf(node.question);\n  }\n}\n","import * as _ from 'lodash';\nimport { QuestionBase } from '../question-models/question-base';\n\nexport class HistoricalFieldHelperService {\n\n  public getDisplayTextFromOptions(question: QuestionBase , valueProperty: string, displayProperty: string): string {\n\n    let displayText = '';\n    const historicalValue = question.historicalDataValue;\n    if (_.isArray(historicalValue.value)) {\n      let valueConverted = 0;\n      _.each(historicalValue.value, (val) => {\n        _.each(question.options, (option) => {\n\n          if (option[valueProperty] === val) {\n            if (valueConverted === 0) {\n              displayText = displayText + option[displayProperty];\n            } else {\n              displayText = displayText + ', ' + option[displayProperty];\n            }\n            valueConverted++;\n          }\n        });\n      });\n\n    } else {\n      _.each(question.options, (option) => {\n        if (option[valueProperty] === historicalValue.value) {\n          displayText = option[displayProperty];\n        }\n      });\n    }\n    return displayText ;\n  }\n\n\n}\n","import { Directive, HostListener, Input, Output, EventEmitter } from '@angular/core';\n\nimport { HistoricalFieldHelperService } from '../helpers/historical-field-helper-service';\nimport * as _ from 'lodash';\nimport { NodeBase } from '../form-factory/form-node';\n\n@Directive({\n  selector: `[node]`\n})\n\nexport class HistoricalValueDirective {\n\n  @Input() _node: NodeBase;\n  @Output() _nodeChange = new EventEmitter<Object>();\n\n  historicalDisplay: string;\n\n  constructor(private historicalFieldHelper: HistoricalFieldHelperService) {\n  }\n\n  @HostListener('click', ['$event'])\n  setValue(e) {\n\n    if (e.target.name === 'historyValue') {\n\n      if (this._node && (!this.compareString(this._node.question.renderingType, 'page')\n        || !this.compareString(this._node.question.renderingType, 'section'))) {\n\n        this._node.control.setValue(this._node.question.historicalDataValue.value);\n\n        this._node.question['historicalValue'] = this._node.question.historicalDataValue;\n        e.stopPropagation();\n        this._nodeChange.emit(this._node);\n\n      }\n\n    }\n  }\n  private compareString(a, b) {\n    if (a === b) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  @Input()\n  set node(node: NodeBase) {\n\n    if (node) {\n      this._node = node;\n      if (this._node.question.enableHistoricalValue && !_.isUndefined(this._node.question.historicalDataValue)) {\n        const display: any = { text: '', _date: '' };\n        if ((this._node.question.renderingType === 'select'\n          || this._node.question.renderingType === 'multi-select')) {\n\n          display.text = this.historicalFieldHelper.getDisplayTextFromOptions(\n            this._node.question,\n            'value',\n            'label'\n          );\n          display._date = this._node.question.historicalDataValue.valueDate;\n\n          this._node.question['historicalDisplay'] = display;\n\n        } else if (!_.isUndefined(this._node.question.historicalDataValue)) {\n\n          display.text = this._node.question.historicalDataValue.value;\n          display._date = this._node.question.historicalDataValue.valueDate;\n\n          this._node.question['historicalDisplay'] = display;\n        }\n      }\n    }\n  }\n\n}\n","export const STYLE = `\nng-select {\n  display: inline-block;\n  margin: 0;\n  position: relative;\n  vertical-align: middle;\n  width: 100%;\n}\nng-select * {\n  box-sizing: border-box;\n  font-family: Sans-Serif;\n}\nng-select > div {\n  border: 1px solid #ddd;\n  box-sizing: border-box;\n  cursor: pointer;\n  user-select: none;\n  width: 100%;\n}\nng-select > div.disabled {\n  background-color: #eee;\n  color: #aaa;\n  cursor: default;\n  pointer-events: none;\n}\nng-select > div > div.single {\n  display: flex;\n  height: 30px;\n  width: 100%;\n}\nng-select > div > div.single > div.value,\nng-select > div > div.single > div.placeholder {\n  flex: 1;\n  line-height: 30px;\n  overflow: hidden;\n  padding: 0 10px;\n  white-space: nowrap;\n}\nng-select > div > div.single > div.placeholder {\n  color: #a9a9a9;\n}\nng-select > div > div.single > div.clear,\nng-select > div > div.single > div.toggle {\n  color: #aaa;\n  line-height: 30px;\n  text-align: center;\n  width: 30px;\n}\nng-select > div > div.single > div.clear:hover,\nng-select > div > div.single > div.toggle:hover {\n  background-color: #ececec;\n}\nng-select > div > div.single > div.clear {\n  font-size: 18px;\n}\nng-select > div > div.single > div.toggle {\n  font-size: 14px;\n}\nng-select > div > div.multiple {\n  display: flex;\n  flex-flow: row wrap;\n  height: 100%;\n  min-height: 30px;\n  padding: 0 10px;\n  width: 100%;\n}\nng-select > div > div.multiple > div.option {\n  background-color: #eee;\n  border: 1px solid #aaa;\n  border-radius: 4px;\n  color: #333;\n  cursor: default;\n  display: inline-block;\n  flex-shrink: 0;\n  font-size: 14px;\n  line-height: 22px;\n  margin: 3px 5px 3px 0;\n  padding: 0 4px;\n}\nng-select > div > div.multiple > div.option span.deselect-option {\n  color: #aaa;\n  cursor: pointer;\n  font-size: 14px;\n  height: 20px;\n  line-height: 20px;\n}\nng-select > div > div.multiple > div.option span.deselect-option:hover {\n  color: #555;\n}\nng-select > div > div.multiple input {\n  background-color: transparent;\n  border: none;\n  height: 30px;\n  line-height: 30px;\n  padding: 0;\n}\nng-select > div > div.multiple input:focus {\n  outline: none;\n}\n`;\n","export class Option {\n\n    value: string;\n    label: string;\n\n    disabled: boolean;\n    highlighted: boolean;\n    selected: boolean;\n    shown: boolean;\n\n    constructor(value: string, label: string) {\n        this.value = value;\n        this.label = label;\n\n        this.disabled = false;\n        this.highlighted = false;\n        this.selected = false;\n        this.shown = true;\n    }\n\n    show() {\n        this.shown = true;\n    }\n\n    hide() {\n        this.shown = false;\n    }\n\n    disable() {\n        this.disabled = true;\n    }\n\n    enable() {\n        this.disabled = false;\n    }\n\n    undecoratedCopy() {\n        return {\n            label: this.label,\n            value: this.value\n        };\n    }\n}\n","export class Diacritics {\n\n    static DIACRITICS = {\n        '\\u24B6': 'A',\n        '\\uFF21': 'A',\n        '\\u00C0': 'A',\n        '\\u00C1': 'A',\n        '\\u00C2': 'A',\n        '\\u1EA6': 'A',\n        '\\u1EA4': 'A',\n        '\\u1EAA': 'A',\n        '\\u1EA8': 'A',\n        '\\u00C3': 'A',\n        '\\u0100': 'A',\n        '\\u0102': 'A',\n        '\\u1EB0': 'A',\n        '\\u1EAE': 'A',\n        '\\u1EB4': 'A',\n        '\\u1EB2': 'A',\n        '\\u0226': 'A',\n        '\\u01E0': 'A',\n        '\\u00C4': 'A',\n        '\\u01DE': 'A',\n        '\\u1EA2': 'A',\n        '\\u00C5': 'A',\n        '\\u01FA': 'A',\n        '\\u01CD': 'A',\n        '\\u0200': 'A',\n        '\\u0202': 'A',\n        '\\u1EA0': 'A',\n        '\\u1EAC': 'A',\n        '\\u1EB6': 'A',\n        '\\u1E00': 'A',\n        '\\u0104': 'A',\n        '\\u023A': 'A',\n        '\\u2C6F': 'A',\n        '\\uA732': 'AA',\n        '\\u00C6': 'AE',\n        '\\u01FC': 'AE',\n        '\\u01E2': 'AE',\n        '\\uA734': 'AO',\n        '\\uA736': 'AU',\n        '\\uA738': 'AV',\n        '\\uA73A': 'AV',\n        '\\uA73C': 'AY',\n        '\\u24B7': 'B',\n        '\\uFF22': 'B',\n        '\\u1E02': 'B',\n        '\\u1E04': 'B',\n        '\\u1E06': 'B',\n        '\\u0243': 'B',\n        '\\u0182': 'B',\n        '\\u0181': 'B',\n        '\\u24B8': 'C',\n        '\\uFF23': 'C',\n        '\\u0106': 'C',\n        '\\u0108': 'C',\n        '\\u010A': 'C',\n        '\\u010C': 'C',\n        '\\u00C7': 'C',\n        '\\u1E08': 'C',\n        '\\u0187': 'C',\n        '\\u023B': 'C',\n        '\\uA73E': 'C',\n        '\\u24B9': 'D',\n        '\\uFF24': 'D',\n        '\\u1E0A': 'D',\n        '\\u010E': 'D',\n        '\\u1E0C': 'D',\n        '\\u1E10': 'D',\n        '\\u1E12': 'D',\n        '\\u1E0E': 'D',\n        '\\u0110': 'D',\n        '\\u018B': 'D',\n        '\\u018A': 'D',\n        '\\u0189': 'D',\n        '\\uA779': 'D',\n        '\\u01F1': 'DZ',\n        '\\u01C4': 'DZ',\n        '\\u01F2': 'Dz',\n        '\\u01C5': 'Dz',\n        '\\u24BA': 'E',\n        '\\uFF25': 'E',\n        '\\u00C8': 'E',\n        '\\u00C9': 'E',\n        '\\u00CA': 'E',\n        '\\u1EC0': 'E',\n        '\\u1EBE': 'E',\n        '\\u1EC4': 'E',\n        '\\u1EC2': 'E',\n        '\\u1EBC': 'E',\n        '\\u0112': 'E',\n        '\\u1E14': 'E',\n        '\\u1E16': 'E',\n        '\\u0114': 'E',\n        '\\u0116': 'E',\n        '\\u00CB': 'E',\n        '\\u1EBA': 'E',\n        '\\u011A': 'E',\n        '\\u0204': 'E',\n        '\\u0206': 'E',\n        '\\u1EB8': 'E',\n        '\\u1EC6': 'E',\n        '\\u0228': 'E',\n        '\\u1E1C': 'E',\n        '\\u0118': 'E',\n        '\\u1E18': 'E',\n        '\\u1E1A': 'E',\n        '\\u0190': 'E',\n        '\\u018E': 'E',\n        '\\u24BB': 'F',\n        '\\uFF26': 'F',\n        '\\u1E1E': 'F',\n        '\\u0191': 'F',\n        '\\uA77B': 'F',\n        '\\u24BC': 'G',\n        '\\uFF27': 'G',\n        '\\u01F4': 'G',\n        '\\u011C': 'G',\n        '\\u1E20': 'G',\n        '\\u011E': 'G',\n        '\\u0120': 'G',\n        '\\u01E6': 'G',\n        '\\u0122': 'G',\n        '\\u01E4': 'G',\n        '\\u0193': 'G',\n        '\\uA7A0': 'G',\n        '\\uA77D': 'G',\n        '\\uA77E': 'G',\n        '\\u24BD': 'H',\n        '\\uFF28': 'H',\n        '\\u0124': 'H',\n        '\\u1E22': 'H',\n        '\\u1E26': 'H',\n        '\\u021E': 'H',\n        '\\u1E24': 'H',\n        '\\u1E28': 'H',\n        '\\u1E2A': 'H',\n        '\\u0126': 'H',\n        '\\u2C67': 'H',\n        '\\u2C75': 'H',\n        '\\uA78D': 'H',\n        '\\u24BE': 'I',\n        '\\uFF29': 'I',\n        '\\u00CC': 'I',\n        '\\u00CD': 'I',\n        '\\u00CE': 'I',\n        '\\u0128': 'I',\n        '\\u012A': 'I',\n        '\\u012C': 'I',\n        '\\u0130': 'I',\n        '\\u00CF': 'I',\n        '\\u1E2E': 'I',\n        '\\u1EC8': 'I',\n        '\\u01CF': 'I',\n        '\\u0208': 'I',\n        '\\u020A': 'I',\n        '\\u1ECA': 'I',\n        '\\u012E': 'I',\n        '\\u1E2C': 'I',\n        '\\u0197': 'I',\n        '\\u24BF': 'J',\n        '\\uFF2A': 'J',\n        '\\u0134': 'J',\n        '\\u0248': 'J',\n        '\\u24C0': 'K',\n        '\\uFF2B': 'K',\n        '\\u1E30': 'K',\n        '\\u01E8': 'K',\n        '\\u1E32': 'K',\n        '\\u0136': 'K',\n        '\\u1E34': 'K',\n        '\\u0198': 'K',\n        '\\u2C69': 'K',\n        '\\uA740': 'K',\n        '\\uA742': 'K',\n        '\\uA744': 'K',\n        '\\uA7A2': 'K',\n        '\\u24C1': 'L',\n        '\\uFF2C': 'L',\n        '\\u013F': 'L',\n        '\\u0139': 'L',\n        '\\u013D': 'L',\n        '\\u1E36': 'L',\n        '\\u1E38': 'L',\n        '\\u013B': 'L',\n        '\\u1E3C': 'L',\n        '\\u1E3A': 'L',\n        '\\u0141': 'L',\n        '\\u023D': 'L',\n        '\\u2C62': 'L',\n        '\\u2C60': 'L',\n        '\\uA748': 'L',\n        '\\uA746': 'L',\n        '\\uA780': 'L',\n        '\\u01C7': 'LJ',\n        '\\u01C8': 'Lj',\n        '\\u24C2': 'M',\n        '\\uFF2D': 'M',\n        '\\u1E3E': 'M',\n        '\\u1E40': 'M',\n        '\\u1E42': 'M',\n        '\\u2C6E': 'M',\n        '\\u019C': 'M',\n        '\\u24C3': 'N',\n        '\\uFF2E': 'N',\n        '\\u01F8': 'N',\n        '\\u0143': 'N',\n        '\\u00D1': 'N',\n        '\\u1E44': 'N',\n        '\\u0147': 'N',\n        '\\u1E46': 'N',\n        '\\u0145': 'N',\n        '\\u1E4A': 'N',\n        '\\u1E48': 'N',\n        '\\u0220': 'N',\n        '\\u019D': 'N',\n        '\\uA790': 'N',\n        '\\uA7A4': 'N',\n        '\\u01CA': 'NJ',\n        '\\u01CB': 'Nj',\n        '\\u24C4': 'O',\n        '\\uFF2F': 'O',\n        '\\u00D2': 'O',\n        '\\u00D3': 'O',\n        '\\u00D4': 'O',\n        '\\u1ED2': 'O',\n        '\\u1ED0': 'O',\n        '\\u1ED6': 'O',\n        '\\u1ED4': 'O',\n        '\\u00D5': 'O',\n        '\\u1E4C': 'O',\n        '\\u022C': 'O',\n        '\\u1E4E': 'O',\n        '\\u014C': 'O',\n        '\\u1E50': 'O',\n        '\\u1E52': 'O',\n        '\\u014E': 'O',\n        '\\u022E': 'O',\n        '\\u0230': 'O',\n        '\\u00D6': 'O',\n        '\\u022A': 'O',\n        '\\u1ECE': 'O',\n        '\\u0150': 'O',\n        '\\u01D1': 'O',\n        '\\u020C': 'O',\n        '\\u020E': 'O',\n        '\\u01A0': 'O',\n        '\\u1EDC': 'O',\n        '\\u1EDA': 'O',\n        '\\u1EE0': 'O',\n        '\\u1EDE': 'O',\n        '\\u1EE2': 'O',\n        '\\u1ECC': 'O',\n        '\\u1ED8': 'O',\n        '\\u01EA': 'O',\n        '\\u01EC': 'O',\n        '\\u00D8': 'O',\n        '\\u01FE': 'O',\n        '\\u0186': 'O',\n        '\\u019F': 'O',\n        '\\uA74A': 'O',\n        '\\uA74C': 'O',\n        '\\u01A2': 'OI',\n        '\\uA74E': 'OO',\n        '\\u0222': 'OU',\n        '\\u24C5': 'P',\n        '\\uFF30': 'P',\n        '\\u1E54': 'P',\n        '\\u1E56': 'P',\n        '\\u01A4': 'P',\n        '\\u2C63': 'P',\n        '\\uA750': 'P',\n        '\\uA752': 'P',\n        '\\uA754': 'P',\n        '\\u24C6': 'Q',\n        '\\uFF31': 'Q',\n        '\\uA756': 'Q',\n        '\\uA758': 'Q',\n        '\\u024A': 'Q',\n        '\\u24C7': 'R',\n        '\\uFF32': 'R',\n        '\\u0154': 'R',\n        '\\u1E58': 'R',\n        '\\u0158': 'R',\n        '\\u0210': 'R',\n        '\\u0212': 'R',\n        '\\u1E5A': 'R',\n        '\\u1E5C': 'R',\n        '\\u0156': 'R',\n        '\\u1E5E': 'R',\n        '\\u024C': 'R',\n        '\\u2C64': 'R',\n        '\\uA75A': 'R',\n        '\\uA7A6': 'R',\n        '\\uA782': 'R',\n        '\\u24C8': 'S',\n        '\\uFF33': 'S',\n        '\\u1E9E': 'S',\n        '\\u015A': 'S',\n        '\\u1E64': 'S',\n        '\\u015C': 'S',\n        '\\u1E60': 'S',\n        '\\u0160': 'S',\n        '\\u1E66': 'S',\n        '\\u1E62': 'S',\n        '\\u1E68': 'S',\n        '\\u0218': 'S',\n        '\\u015E': 'S',\n        '\\u2C7E': 'S',\n        '\\uA7A8': 'S',\n        '\\uA784': 'S',\n        '\\u24C9': 'T',\n        '\\uFF34': 'T',\n        '\\u1E6A': 'T',\n        '\\u0164': 'T',\n        '\\u1E6C': 'T',\n        '\\u021A': 'T',\n        '\\u0162': 'T',\n        '\\u1E70': 'T',\n        '\\u1E6E': 'T',\n        '\\u0166': 'T',\n        '\\u01AC': 'T',\n        '\\u01AE': 'T',\n        '\\u023E': 'T',\n        '\\uA786': 'T',\n        '\\uA728': 'TZ',\n        '\\u24CA': 'U',\n        '\\uFF35': 'U',\n        '\\u00D9': 'U',\n        '\\u00DA': 'U',\n        '\\u00DB': 'U',\n        '\\u0168': 'U',\n        '\\u1E78': 'U',\n        '\\u016A': 'U',\n        '\\u1E7A': 'U',\n        '\\u016C': 'U',\n        '\\u00DC': 'U',\n        '\\u01DB': 'U',\n        '\\u01D7': 'U',\n        '\\u01D5': 'U',\n        '\\u01D9': 'U',\n        '\\u1EE6': 'U',\n        '\\u016E': 'U',\n        '\\u0170': 'U',\n        '\\u01D3': 'U',\n        '\\u0214': 'U',\n        '\\u0216': 'U',\n        '\\u01AF': 'U',\n        '\\u1EEA': 'U',\n        '\\u1EE8': 'U',\n        '\\u1EEE': 'U',\n        '\\u1EEC': 'U',\n        '\\u1EF0': 'U',\n        '\\u1EE4': 'U',\n        '\\u1E72': 'U',\n        '\\u0172': 'U',\n        '\\u1E76': 'U',\n        '\\u1E74': 'U',\n        '\\u0244': 'U',\n        '\\u24CB': 'V',\n        '\\uFF36': 'V',\n        '\\u1E7C': 'V',\n        '\\u1E7E': 'V',\n        '\\u01B2': 'V',\n        '\\uA75E': 'V',\n        '\\u0245': 'V',\n        '\\uA760': 'VY',\n        '\\u24CC': 'W',\n        '\\uFF37': 'W',\n        '\\u1E80': 'W',\n        '\\u1E82': 'W',\n        '\\u0174': 'W',\n        '\\u1E86': 'W',\n        '\\u1E84': 'W',\n        '\\u1E88': 'W',\n        '\\u2C72': 'W',\n        '\\u24CD': 'X',\n        '\\uFF38': 'X',\n        '\\u1E8A': 'X',\n        '\\u1E8C': 'X',\n        '\\u24CE': 'Y',\n        '\\uFF39': 'Y',\n        '\\u1EF2': 'Y',\n        '\\u00DD': 'Y',\n        '\\u0176': 'Y',\n        '\\u1EF8': 'Y',\n        '\\u0232': 'Y',\n        '\\u1E8E': 'Y',\n        '\\u0178': 'Y',\n        '\\u1EF6': 'Y',\n        '\\u1EF4': 'Y',\n        '\\u01B3': 'Y',\n        '\\u024E': 'Y',\n        '\\u1EFE': 'Y',\n        '\\u24CF': 'Z',\n        '\\uFF3A': 'Z',\n        '\\u0179': 'Z',\n        '\\u1E90': 'Z',\n        '\\u017B': 'Z',\n        '\\u017D': 'Z',\n        '\\u1E92': 'Z',\n        '\\u1E94': 'Z',\n        '\\u01B5': 'Z',\n        '\\u0224': 'Z',\n        '\\u2C7F': 'Z',\n        '\\u2C6B': 'Z',\n        '\\uA762': 'Z',\n        '\\u24D0': 'a',\n        '\\uFF41': 'a',\n        '\\u1E9A': 'a',\n        '\\u00E0': 'a',\n        '\\u00E1': 'a',\n        '\\u00E2': 'a',\n        '\\u1EA7': 'a',\n        '\\u1EA5': 'a',\n        '\\u1EAB': 'a',\n        '\\u1EA9': 'a',\n        '\\u00E3': 'a',\n        '\\u0101': 'a',\n        '\\u0103': 'a',\n        '\\u1EB1': 'a',\n        '\\u1EAF': 'a',\n        '\\u1EB5': 'a',\n        '\\u1EB3': 'a',\n        '\\u0227': 'a',\n        '\\u01E1': 'a',\n        '\\u00E4': 'a',\n        '\\u01DF': 'a',\n        '\\u1EA3': 'a',\n        '\\u00E5': 'a',\n        '\\u01FB': 'a',\n        '\\u01CE': 'a',\n        '\\u0201': 'a',\n        '\\u0203': 'a',\n        '\\u1EA1': 'a',\n        '\\u1EAD': 'a',\n        '\\u1EB7': 'a',\n        '\\u1E01': 'a',\n        '\\u0105': 'a',\n        '\\u2C65': 'a',\n        '\\u0250': 'a',\n        '\\uA733': 'aa',\n        '\\u00E6': 'ae',\n        '\\u01FD': 'ae',\n        '\\u01E3': 'ae',\n        '\\uA735': 'ao',\n        '\\uA737': 'au',\n        '\\uA739': 'av',\n        '\\uA73B': 'av',\n        '\\uA73D': 'ay',\n        '\\u24D1': 'b',\n        '\\uFF42': 'b',\n        '\\u1E03': 'b',\n        '\\u1E05': 'b',\n        '\\u1E07': 'b',\n        '\\u0180': 'b',\n        '\\u0183': 'b',\n        '\\u0253': 'b',\n        '\\u24D2': 'c',\n        '\\uFF43': 'c',\n        '\\u0107': 'c',\n        '\\u0109': 'c',\n        '\\u010B': 'c',\n        '\\u010D': 'c',\n        '\\u00E7': 'c',\n        '\\u1E09': 'c',\n        '\\u0188': 'c',\n        '\\u023C': 'c',\n        '\\uA73F': 'c',\n        '\\u2184': 'c',\n        '\\u24D3': 'd',\n        '\\uFF44': 'd',\n        '\\u1E0B': 'd',\n        '\\u010F': 'd',\n        '\\u1E0D': 'd',\n        '\\u1E11': 'd',\n        '\\u1E13': 'd',\n        '\\u1E0F': 'd',\n        '\\u0111': 'd',\n        '\\u018C': 'd',\n        '\\u0256': 'd',\n        '\\u0257': 'd',\n        '\\uA77A': 'd',\n        '\\u01F3': 'dz',\n        '\\u01C6': 'dz',\n        '\\u24D4': 'e',\n        '\\uFF45': 'e',\n        '\\u00E8': 'e',\n        '\\u00E9': 'e',\n        '\\u00EA': 'e',\n        '\\u1EC1': 'e',\n        '\\u1EBF': 'e',\n        '\\u1EC5': 'e',\n        '\\u1EC3': 'e',\n        '\\u1EBD': 'e',\n        '\\u0113': 'e',\n        '\\u1E15': 'e',\n        '\\u1E17': 'e',\n        '\\u0115': 'e',\n        '\\u0117': 'e',\n        '\\u00EB': 'e',\n        '\\u1EBB': 'e',\n        '\\u011B': 'e',\n        '\\u0205': 'e',\n        '\\u0207': 'e',\n        '\\u1EB9': 'e',\n        '\\u1EC7': 'e',\n        '\\u0229': 'e',\n        '\\u1E1D': 'e',\n        '\\u0119': 'e',\n        '\\u1E19': 'e',\n        '\\u1E1B': 'e',\n        '\\u0247': 'e',\n        '\\u025B': 'e',\n        '\\u01DD': 'e',\n        '\\u24D5': 'f',\n        '\\uFF46': 'f',\n        '\\u1E1F': 'f',\n        '\\u0192': 'f',\n        '\\uA77C': 'f',\n        '\\u24D6': 'g',\n        '\\uFF47': 'g',\n        '\\u01F5': 'g',\n        '\\u011D': 'g',\n        '\\u1E21': 'g',\n        '\\u011F': 'g',\n        '\\u0121': 'g',\n        '\\u01E7': 'g',\n        '\\u0123': 'g',\n        '\\u01E5': 'g',\n        '\\u0260': 'g',\n        '\\uA7A1': 'g',\n        '\\u1D79': 'g',\n        '\\uA77F': 'g',\n        '\\u24D7': 'h',\n        '\\uFF48': 'h',\n        '\\u0125': 'h',\n        '\\u1E23': 'h',\n        '\\u1E27': 'h',\n        '\\u021F': 'h',\n        '\\u1E25': 'h',\n        '\\u1E29': 'h',\n        '\\u1E2B': 'h',\n        '\\u1E96': 'h',\n        '\\u0127': 'h',\n        '\\u2C68': 'h',\n        '\\u2C76': 'h',\n        '\\u0265': 'h',\n        '\\u0195': 'hv',\n        '\\u24D8': 'i',\n        '\\uFF49': 'i',\n        '\\u00EC': 'i',\n        '\\u00ED': 'i',\n        '\\u00EE': 'i',\n        '\\u0129': 'i',\n        '\\u012B': 'i',\n        '\\u012D': 'i',\n        '\\u00EF': 'i',\n        '\\u1E2F': 'i',\n        '\\u1EC9': 'i',\n        '\\u01D0': 'i',\n        '\\u0209': 'i',\n        '\\u020B': 'i',\n        '\\u1ECB': 'i',\n        '\\u012F': 'i',\n        '\\u1E2D': 'i',\n        '\\u0268': 'i',\n        '\\u0131': 'i',\n        '\\u24D9': 'j',\n        '\\uFF4A': 'j',\n        '\\u0135': 'j',\n        '\\u01F0': 'j',\n        '\\u0249': 'j',\n        '\\u24DA': 'k',\n        '\\uFF4B': 'k',\n        '\\u1E31': 'k',\n        '\\u01E9': 'k',\n        '\\u1E33': 'k',\n        '\\u0137': 'k',\n        '\\u1E35': 'k',\n        '\\u0199': 'k',\n        '\\u2C6A': 'k',\n        '\\uA741': 'k',\n        '\\uA743': 'k',\n        '\\uA745': 'k',\n        '\\uA7A3': 'k',\n        '\\u24DB': 'l',\n        '\\uFF4C': 'l',\n        '\\u0140': 'l',\n        '\\u013A': 'l',\n        '\\u013E': 'l',\n        '\\u1E37': 'l',\n        '\\u1E39': 'l',\n        '\\u013C': 'l',\n        '\\u1E3D': 'l',\n        '\\u1E3B': 'l',\n        '\\u017F': 'l',\n        '\\u0142': 'l',\n        '\\u019A': 'l',\n        '\\u026B': 'l',\n        '\\u2C61': 'l',\n        '\\uA749': 'l',\n        '\\uA781': 'l',\n        '\\uA747': 'l',\n        '\\u01C9': 'lj',\n        '\\u24DC': 'm',\n        '\\uFF4D': 'm',\n        '\\u1E3F': 'm',\n        '\\u1E41': 'm',\n        '\\u1E43': 'm',\n        '\\u0271': 'm',\n        '\\u026F': 'm',\n        '\\u24DD': 'n',\n        '\\uFF4E': 'n',\n        '\\u01F9': 'n',\n        '\\u0144': 'n',\n        '\\u00F1': 'n',\n        '\\u1E45': 'n',\n        '\\u0148': 'n',\n        '\\u1E47': 'n',\n        '\\u0146': 'n',\n        '\\u1E4B': 'n',\n        '\\u1E49': 'n',\n        '\\u019E': 'n',\n        '\\u0272': 'n',\n        '\\u0149': 'n',\n        '\\uA791': 'n',\n        '\\uA7A5': 'n',\n        '\\u01CC': 'nj',\n        '\\u24DE': 'o',\n        '\\uFF4F': 'o',\n        '\\u00F2': 'o',\n        '\\u00F3': 'o',\n        '\\u00F4': 'o',\n        '\\u1ED3': 'o',\n        '\\u1ED1': 'o',\n        '\\u1ED7': 'o',\n        '\\u1ED5': 'o',\n        '\\u00F5': 'o',\n        '\\u1E4D': 'o',\n        '\\u022D': 'o',\n        '\\u1E4F': 'o',\n        '\\u014D': 'o',\n        '\\u1E51': 'o',\n        '\\u1E53': 'o',\n        '\\u014F': 'o',\n        '\\u022F': 'o',\n        '\\u0231': 'o',\n        '\\u00F6': 'o',\n        '\\u022B': 'o',\n        '\\u1ECF': 'o',\n        '\\u0151': 'o',\n        '\\u01D2': 'o',\n        '\\u020D': 'o',\n        '\\u020F': 'o',\n        '\\u01A1': 'o',\n        '\\u1EDD': 'o',\n        '\\u1EDB': 'o',\n        '\\u1EE1': 'o',\n        '\\u1EDF': 'o',\n        '\\u1EE3': 'o',\n        '\\u1ECD': 'o',\n        '\\u1ED9': 'o',\n        '\\u01EB': 'o',\n        '\\u01ED': 'o',\n        '\\u00F8': 'o',\n        '\\u01FF': 'o',\n        '\\u0254': 'o',\n        '\\uA74B': 'o',\n        '\\uA74D': 'o',\n        '\\u0275': 'o',\n        '\\u01A3': 'oi',\n        '\\u0223': 'ou',\n        '\\uA74F': 'oo',\n        '\\u24DF': 'p',\n        '\\uFF50': 'p',\n        '\\u1E55': 'p',\n        '\\u1E57': 'p',\n        '\\u01A5': 'p',\n        '\\u1D7D': 'p',\n        '\\uA751': 'p',\n        '\\uA753': 'p',\n        '\\uA755': 'p',\n        '\\u24E0': 'q',\n        '\\uFF51': 'q',\n        '\\u024B': 'q',\n        '\\uA757': 'q',\n        '\\uA759': 'q',\n        '\\u24E1': 'r',\n        '\\uFF52': 'r',\n        '\\u0155': 'r',\n        '\\u1E59': 'r',\n        '\\u0159': 'r',\n        '\\u0211': 'r',\n        '\\u0213': 'r',\n        '\\u1E5B': 'r',\n        '\\u1E5D': 'r',\n        '\\u0157': 'r',\n        '\\u1E5F': 'r',\n        '\\u024D': 'r',\n        '\\u027D': 'r',\n        '\\uA75B': 'r',\n        '\\uA7A7': 'r',\n        '\\uA783': 'r',\n        '\\u24E2': 's',\n        '\\uFF53': 's',\n        '\\u00DF': 's',\n        '\\u015B': 's',\n        '\\u1E65': 's',\n        '\\u015D': 's',\n        '\\u1E61': 's',\n        '\\u0161': 's',\n        '\\u1E67': 's',\n        '\\u1E63': 's',\n        '\\u1E69': 's',\n        '\\u0219': 's',\n        '\\u015F': 's',\n        '\\u023F': 's',\n        '\\uA7A9': 's',\n        '\\uA785': 's',\n        '\\u1E9B': 's',\n        '\\u24E3': 't',\n        '\\uFF54': 't',\n        '\\u1E6B': 't',\n        '\\u1E97': 't',\n        '\\u0165': 't',\n        '\\u1E6D': 't',\n        '\\u021B': 't',\n        '\\u0163': 't',\n        '\\u1E71': 't',\n        '\\u1E6F': 't',\n        '\\u0167': 't',\n        '\\u01AD': 't',\n        '\\u0288': 't',\n        '\\u2C66': 't',\n        '\\uA787': 't',\n        '\\uA729': 'tz',\n        '\\u24E4': 'u',\n        '\\uFF55': 'u',\n        '\\u00F9': 'u',\n        '\\u00FA': 'u',\n        '\\u00FB': 'u',\n        '\\u0169': 'u',\n        '\\u1E79': 'u',\n        '\\u016B': 'u',\n        '\\u1E7B': 'u',\n        '\\u016D': 'u',\n        '\\u00FC': 'u',\n        '\\u01DC': 'u',\n        '\\u01D8': 'u',\n        '\\u01D6': 'u',\n        '\\u01DA': 'u',\n        '\\u1EE7': 'u',\n        '\\u016F': 'u',\n        '\\u0171': 'u',\n        '\\u01D4': 'u',\n        '\\u0215': 'u',\n        '\\u0217': 'u',\n        '\\u01B0': 'u',\n        '\\u1EEB': 'u',\n        '\\u1EE9': 'u',\n        '\\u1EEF': 'u',\n        '\\u1EED': 'u',\n        '\\u1EF1': 'u',\n        '\\u1EE5': 'u',\n        '\\u1E73': 'u',\n        '\\u0173': 'u',\n        '\\u1E77': 'u',\n        '\\u1E75': 'u',\n        '\\u0289': 'u',\n        '\\u24E5': 'v',\n        '\\uFF56': 'v',\n        '\\u1E7D': 'v',\n        '\\u1E7F': 'v',\n        '\\u028B': 'v',\n        '\\uA75F': 'v',\n        '\\u028C': 'v',\n        '\\uA761': 'vy',\n        '\\u24E6': 'w',\n        '\\uFF57': 'w',\n        '\\u1E81': 'w',\n        '\\u1E83': 'w',\n        '\\u0175': 'w',\n        '\\u1E87': 'w',\n        '\\u1E85': 'w',\n        '\\u1E98': 'w',\n        '\\u1E89': 'w',\n        '\\u2C73': 'w',\n        '\\u24E7': 'x',\n        '\\uFF58': 'x',\n        '\\u1E8B': 'x',\n        '\\u1E8D': 'x',\n        '\\u24E8': 'y',\n        '\\uFF59': 'y',\n        '\\u1EF3': 'y',\n        '\\u00FD': 'y',\n        '\\u0177': 'y',\n        '\\u1EF9': 'y',\n        '\\u0233': 'y',\n        '\\u1E8F': 'y',\n        '\\u00FF': 'y',\n        '\\u1EF7': 'y',\n        '\\u1E99': 'y',\n        '\\u1EF5': 'y',\n        '\\u01B4': 'y',\n        '\\u024F': 'y',\n        '\\u1EFF': 'y',\n        '\\u24E9': 'z',\n        '\\uFF5A': 'z',\n        '\\u017A': 'z',\n        '\\u1E91': 'z',\n        '\\u017C': 'z',\n        '\\u017E': 'z',\n        '\\u1E93': 'z',\n        '\\u1E95': 'z',\n        '\\u01B6': 'z',\n        '\\u0225': 'z',\n        '\\u0240': 'z',\n        '\\u2C6C': 'z',\n        '\\uA763': 'z',\n        '\\u0386': '\\u0391',\n        '\\u0388': '\\u0395',\n        '\\u0389': '\\u0397',\n        '\\u038A': '\\u0399',\n        '\\u03AA': '\\u0399',\n        '\\u038C': '\\u039F',\n        '\\u038E': '\\u03A5',\n        '\\u03AB': '\\u03A5',\n        '\\u038F': '\\u03A9',\n        '\\u03AC': '\\u03B1',\n        '\\u03AD': '\\u03B5',\n        '\\u03AE': '\\u03B7',\n        '\\u03AF': '\\u03B9',\n        '\\u03CA': '\\u03B9',\n        '\\u0390': '\\u03B9',\n        '\\u03CC': '\\u03BF',\n        '\\u03CD': '\\u03C5',\n        '\\u03CB': '\\u03C5',\n        '\\u03B0': '\\u03C5',\n        '\\u03C9': '\\u03C9',\n        '\\u03C2': '\\u03C3'\n    };\n\n    static strip(text: string): string {\n\n        const match = (a: string): string => {\n            return this.DIACRITICS[a] || a;\n        };\n        if (text) {\n            return text.replace(/[^\\u0000-\\u007E]/g, match);\n        } else {\n            return '';\n        }\n\n    }\n}\n\n","import { Option } from './option';\nimport { Diacritics } from './diacritics';\n\nexport class OptionList {\n    private _options: Array<Option>;\n\n    /* Consider using these for performance improvement. */\n    // private _selection: Array<Option>;\n    // private _filtered: Array<Option>;\n    // private _value: Array<string>;\n\n    private _highlightedOption: Option = null;\n    // v0 and v1 are assumed not to be undefined or null.\n    static equalValues(v0: Array<string>, v1: Array<string>): boolean {\n\n        if (v0.length !== v1.length) {\n            return false;\n        }\n\n        const a: Array<string> = v0.slice().sort();\n        const b: Array<string> = v1.slice().sort();\n\n        return a.every((v, i) => {\n            return v === b[i];\n        });\n    }\n\n\n    constructor(options: Array<any>) {\n\n        if (typeof options === 'undefined' || options === null) {\n            options = [];\n        }\n\n        this._options = options.map((option) => {\n            const o: Option = new Option(option.value, option.label);\n            if (option.disabled) {\n                o.disable();\n            }\n            return o;\n        });\n\n        this.highlight();\n    }\n\n    /** Options. **/\n\n    get options(): Array<Option> {\n        return this._options;\n    }\n\n    getOptionsByValue(value: string): Array<Option> {\n        return this.options.filter((option) => {\n            return option.value === value;\n        });\n    }\n\n    /** Value. **/\n\n    get value(): Array<string> {\n        return this.selection.map((selectedOption) => {\n            return selectedOption.value;\n        });\n    }\n\n    set value(v: Array<string>) {\n        v = typeof v === 'undefined' || v === null ? [] : v;\n\n        this.options.forEach((option) => {\n            option.selected = v.indexOf(option.value) > -1;\n        });\n    }\n\n    /** Selection. **/\n\n    get selection(): Array<Option> {\n        return this.options.filter((option) => {\n            return option.selected;\n        });\n    }\n\n    select(option: Option, multiple: boolean) {\n        if (!multiple) {\n            this.clearSelection();\n        }\n        option.selected = true;\n    }\n\n    deselect(option: Option) {\n        option.selected = false;\n    }\n\n    clearSelection() {\n        this.options.forEach((option) => {\n            option.selected = false;\n        });\n    }\n\n    /** Filter. **/\n\n    get filtered(): Array<Option> {\n        return this.options.filter((option) => {\n            return option.shown;\n        });\n    }\n\n    filter(term: string) {\n\n        if (term.trim() === '') {\n            this.resetFilter();\n        } else {\n            this.options.forEach((option) => {\n                const l: string = Diacritics.strip(option.label).toUpperCase();\n                const t: string = Diacritics.strip(term).toUpperCase();\n                option.shown = l.indexOf(t) > -1;\n            });\n        }\n\n        this.highlight();\n    }\n\n    resetFilter() {\n        this.options.forEach((option) => {\n            option.shown = true;\n        });\n    }\n\n    /** Highlight. **/\n\n    get highlightedOption(): Option {\n        return this._highlightedOption;\n    }\n\n    highlight() {\n        const option: Option = this.hasShownSelected() ?\n            this.getFirstShownSelected() : this.getFirstShown();\n        this.highlightOption(option);\n    }\n\n    highlightOption(option: Option) {\n        this.clearHighlightedOption();\n\n        if (option !== null) {\n            option.highlighted = true;\n            this._highlightedOption = option;\n        }\n    }\n\n    highlightNextOption() {\n        const shownOptions = this.filtered;\n        const index = this.getHighlightedIndexFromList(shownOptions);\n\n        if (index > -1 && index < shownOptions.length - 1) {\n            this.highlightOption(shownOptions[index + 1]);\n        }\n    }\n\n    highlightPreviousOption() {\n        const shownOptions = this.filtered;\n        const index = this.getHighlightedIndexFromList(shownOptions);\n\n        if (index > 0) {\n            this.highlightOption(shownOptions[index - 1]);\n        }\n    }\n\n    private clearHighlightedOption() {\n        if (this.highlightedOption !== null) {\n            this.highlightedOption.highlighted = false;\n            this._highlightedOption = null;\n        }\n    }\n\n    private getHighlightedIndexFromList(options: Array<Option>) {\n        for (let i = 0; i < options.length; i++) {\n            if (options[i].highlighted) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    getHighlightedIndex() {\n        return this.getHighlightedIndexFromList(this.filtered);\n    }\n\n    /** Util. **/\n\n    hasShown() {\n        return this.options.some((option) => {\n            return option.shown;\n        });\n    }\n\n    hasSelected() {\n        return this.options.some((option) => {\n            return option.selected;\n        });\n    }\n\n    hasShownSelected() {\n        return this.options.some((option) => {\n            return option.shown && option.selected;\n        });\n    }\n\n    private getFirstShown(): Option {\n        for (const option of this.options) {\n            if (option.shown) {\n                return option;\n            }\n        }\n        return null;\n    }\n\n    private getFirstShownSelected(): Option {\n        for (const option of this.options) {\n            if (option.shown && option.selected) {\n                return option;\n            }\n        }\n        return null;\n    }\n\n\n}\n","import {\r\n    AfterViewInit,\r\n    Component,\r\n    Input,\r\n    OnChanges,\r\n    OnInit,\r\n    Output,\r\n    EventEmitter,\r\n    ExistingProvider,\r\n    ViewChild,\r\n    ViewEncapsulation,\r\n    forwardRef\r\n} from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\nimport { STYLE } from './select.component.style';\r\nimport { SelectDropdownComponent } from './select-dropdown.component';\r\nimport { Option } from './option';\r\nimport { OptionList } from './option-list';\r\n\r\nexport const SELECT_VALUE_ACCESSOR: ExistingProvider = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => SelectComponent),\r\n    multi: true\r\n};\r\n\r\n@Component({\r\n    selector: 'ng-select',\r\n    template: `<div\n    #selection\n    [attr.tabindex]=\"disabled ? null : 0\"\n    [ngClass]=\"{'open': isOpen, 'focus': hasFocus, 'below': isBelow, 'disabled': disabled}\"\n    (click)=\"onSelectContainerClick($event)\"\n    (focus)=\"onSelectContainerFocus()\"\n    (keydown)=\"onSelectContainerKeydown($event)\"\n    (window:click)=\"onWindowClick()\"\n    (window:resize)=\"onWindowResize()\">\n\n    <div class=\"single\"\n        *ngIf=\"!multiple\">\n        <div class=\"value\"\n            *ngIf=\"optionList.hasSelected()\">\n            {{optionList.selection[0].label}}\n        </div>\n        <div class=\"placeholder\"\n            *ngIf=\"!optionList.hasSelected()\">\n            {{placeholderView}}\n        </div>\n        <div class=\"clear\"\n            *ngIf=\"allowClear\"\n            (click)=\"onClearSelectionClick($event)\">\n            &#x2715;\n        </div>\n        <div class=\"toggle\"\n            *ngIf=\"isOpen\">\n            &#x25B2;\n        </div>\n        <div class=\"toggle\"\n            *ngIf=\"!isOpen\">\n            &#x25BC;\n        </div>\n    </div>\n\n    <div class=\"multiple\"\n        *ngIf=\"multiple\">\n        <div class=\"option\"\n            *ngFor=\"let option of optionList.selection\">\n            <span class=\"deselect-option\"\n                (click)=onDeselectOptionClick(option)>\n                &#x2715;\n            </span>\n            {{option.label}}\n        </div>\n        <input\n            *ngIf=\"filterEnabled\"\n            #filterInput\n            tabindex=\"-1\"\n            [placeholder]=\"placeholderView\"\n            [ngStyle]=\"{'width.px': filterInputWidth}\"\n            (input)=\"onMultipleFilterInput($event)\"\n            (keydown)=\"onMultipleFilterKeydown($event)\"/>\n    </div>\n\n</div>\n<select-dropdown\n    *ngIf=\"isOpen\"\n    #dropdown\n    [multiple]=\"multiple\"\n    [optionList]=\"optionList\"\n    [notFoundMsg]=\"notFoundMsg\"\n    [highlightColor]=\"highlightColor\"\n    [highlightTextColor]=\"highlightTextColor\"\n    [filterEnabled]=\"filterEnabled\"\n    [width]=\"width\"\n    [top]=\"top\"\n    [left]=\"left\"\n    (close)=\"onDropdownClose($event)\"\n    (optionClicked)=\"onDropdownOptionClicked($event)\"\n    (singleFilterClick)=\"onSingleFilterClick()\"\n    (singleFilterInput)=\"onSingleFilterInput($event)\"\n    (singleFilterKeydown)=\"onSingleFilterKeydown($event)\">\n</select-dropdown>\n`,\r\n    styles: [STYLE],\r\n    providers: [SELECT_VALUE_ACCESSOR],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class SelectComponent\r\n    implements AfterViewInit, ControlValueAccessor, OnChanges, OnInit {\r\n    /** Keys. **/\r\n\r\n    private KEYS: any = {\r\n        BACKSPACE: 8,\r\n        TAB: 9,\r\n        ENTER: 13,\r\n        ESC: 27,\r\n        SPACE: 32,\r\n        UP: 38,\r\n        DOWN: 40\r\n    };\r\n\r\n    @Input() options: Array<any>;\r\n\r\n    @Input() allowClear = false;\r\n    @Input() disabled = false;\r\n    @Input() highlightColor = '#2196f3';\r\n    @Input() highlightTextColor = '#fff';\r\n    @Input() multiple = false;\r\n    @Input() noFilter = 0;\r\n    @Input() notFoundMsg = 'No results found';\r\n    @Input() placeholder = '';\r\n\r\n    @Output() opened: EventEmitter<null> = new EventEmitter<null>();\r\n    @Output() closed: EventEmitter<null> = new EventEmitter<null>();\r\n    @Output() selected: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() deselected: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() typed: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n\r\n    @ViewChild('selection') selectionSpan: any;\r\n    @ViewChild('dropdown') dropdown: SelectDropdownComponent;\r\n    @ViewChild('filterInput') filterInput: any;\r\n\r\n    private _value: Array<any> = [];\r\n    optionList: OptionList;\r\n\r\n    // Selection state variables.\r\n    hasSelected = false;\r\n\r\n    // View state variables.\r\n    filterEnabled = true;\r\n    filterInputWidth = 1;\r\n    hasFocus = false;\r\n    isBelow = true;\r\n    isDisabled = false;\r\n    isOpen = false;\r\n    placeholderView = '';\r\n\r\n    clearClicked = false;\r\n    selectContainerClicked = false;\r\n\r\n    // Width and position for the dropdown container.\r\n    width: number;\r\n    top: number;\r\n    left: number;\r\n\r\n    private onChange = (_: any) => { };\r\n    private onTouched = () => { };\r\n\r\n    /** Event handlers. **/\r\n\r\n    // Angular lifecycle hooks.\r\n\r\n    ngOnInit() {\r\n        this.placeholderView = this.placeholder;\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.updateFilterWidth();\r\n    }\r\n\r\n    ngOnChanges(changes: any) {\r\n        if (changes.hasOwnProperty('options')) {\r\n            this.updateOptionsList(changes['options'].isFirstChange());\r\n        }\r\n        if (changes.hasOwnProperty('noFilter')) {\r\n            const numOptions: number = this.optionList.options.length;\r\n            const minNumOptions: number = changes['noFilter'].currentValue;\r\n            this.filterEnabled = numOptions >= minNumOptions;\r\n        }\r\n    }\r\n\r\n    // Window.\r\n\r\n    onWindowClick() {\r\n        if (!this.selectContainerClicked) {\r\n            this.closeDropdown();\r\n        }\r\n        this.clearClicked = false;\r\n        this.selectContainerClicked = false;\r\n    }\r\n\r\n    onWindowResize() {\r\n        this.updateWidth();\r\n    }\r\n\r\n    // Select container.\r\n\r\n    onSelectContainerClick(event: any) {\r\n        this.selectContainerClicked = true;\r\n        if (!this.clearClicked) {\r\n            this.toggleDropdown();\r\n        }\r\n    }\r\n\r\n    onSelectContainerFocus() {\r\n        this.onTouched();\r\n    }\r\n\r\n    onSelectContainerKeydown(event: any) {\r\n        this.handleSelectContainerKeydown(event);\r\n    }\r\n\r\n    // Dropdown container.\r\n\r\n    onDropdownOptionClicked(option: Option) {\r\n        this.multiple ?\r\n            this.toggleSelectOption(option) : this.selectOption(option);\r\n    }\r\n\r\n    onDropdownClose(focus: any) {\r\n        this.closeDropdown(focus);\r\n    }\r\n\r\n    // Single filter input.\r\n\r\n    onSingleFilterClick() {\r\n        this.selectContainerClicked = true;\r\n    }\r\n\r\n    onSingleFilterInput(term: string) {\r\n        setTimeout(() => {\r\n            if (term.length > 2) {\r\n                this.typed.emit(term);\r\n            }\r\n        }, 500);\r\n        this.optionList.filter(term);\r\n    }\r\n\r\n    onSingleFilterKeydown(event: any) {\r\n        this.handleSingleFilterKeydown(event);\r\n    }\r\n\r\n    // Multiple filter input.\r\n\r\n    onMultipleFilterInput(event: any) {\r\n        if (!this.isOpen) {\r\n            this.openDropdown();\r\n        }\r\n        this.updateFilterWidth();\r\n        setTimeout(() => {\r\n            this.optionList.filter(event.target.value);\r\n        });\r\n    }\r\n\r\n    onMultipleFilterKeydown(event: any) {\r\n        this.handleMultipleFilterKeydown(event);\r\n    }\r\n\r\n    // Single clear select.\r\n\r\n    onClearSelectionClick(event: any) {\r\n        this.clearClicked = true;\r\n        this.clearSelection();\r\n        this.closeDropdown(true);\r\n    }\r\n\r\n    // Multiple deselect option.\r\n\r\n    onDeselectOptionClick(option: Option) {\r\n        this.clearClicked = true;\r\n        this.deselectOption(option);\r\n    }\r\n\r\n    /** API. **/\r\n\r\n    // TODO fix issues with global click/key handler that closes the dropdown.\r\n    open() {\r\n        this.openDropdown();\r\n    }\r\n\r\n    close() {\r\n        this.closeDropdown();\r\n    }\r\n\r\n    clear() {\r\n        this.clearSelection();\r\n    }\r\n\r\n    select(value: string) {\r\n        this.optionList.getOptionsByValue(value).forEach((option) => {\r\n            this.selectOption(option);\r\n        });\r\n        this.valueChanged();\r\n    }\r\n\r\n    /** ControlValueAccessor interface methods. **/\r\n\r\n    writeValue(value: any) {\r\n        this.value = value;\r\n    }\r\n\r\n    registerOnChange(fn: (_: any) => void) {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: () => void) {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean) {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    /** Value. **/\r\n\r\n    get value(): any {\r\n        if (this._value.length === 0) {\r\n            return '';\r\n        } else {\r\n            return this.multiple ? this._value : this._value[0];\r\n        }\r\n    }\r\n\r\n    set value(v: any) {\r\n        if (typeof v === 'undefined' || v === null || v === '') {\r\n            v = [];\r\n        } else if (typeof v === 'string') {\r\n            v = [v];\r\n        } else if (!Array.isArray(v)) {\r\n            throw new TypeError('Value must be a string or an array.');\r\n        }\r\n\r\n        if (!OptionList.equalValues(v, this._value)) {\r\n            this.optionList.value = v;\r\n            this.valueChanged();\r\n        }\r\n    }\r\n\r\n    private valueChanged() {\r\n        this._value = this.optionList.value;\r\n\r\n        this.hasSelected = this._value.length > 0;\r\n        this.placeholderView = this.hasSelected ? '' : this.placeholder;\r\n        this.updateFilterWidth();\r\n\r\n        this.onChange(this.value);\r\n    }\r\n\r\n    /** Initialization. **/\r\n\r\n    private updateOptionsList(firstTime: boolean) {\r\n        let v: Array<string>;\r\n\r\n        if (!firstTime) {\r\n            v = this.optionList.value;\r\n        }\r\n\r\n        this.optionList = new OptionList(this.options);\r\n\r\n        if (!firstTime) {\r\n            this.optionList.value = v;\r\n            this.valueChanged();\r\n        }\r\n    }\r\n\r\n    /** Dropdown. **/\r\n\r\n    private toggleDropdown() {\r\n        if (!this.isDisabled) {\r\n            this.isOpen ? this.closeDropdown(true) : this.openDropdown();\r\n        }\r\n    }\r\n\r\n    private openDropdown() {\r\n        if (!this.isOpen) {\r\n            this.updateWidth();\r\n            this.updatePosition();\r\n            this.isOpen = true;\r\n            if (this.multiple && this.filterEnabled) {\r\n                this.filterInput.nativeElement.focus();\r\n            }\r\n            this.opened.emit(null);\r\n        }\r\n    }\r\n    /* tslint:disable */\r\n    private closeDropdown(focus: boolean = false) {\r\n        if (this.isOpen) {\r\n            this.clearFilterInput();\r\n            this.isOpen = false;\r\n            if (focus) {\r\n                this.focus();\r\n            }\r\n            this.closed.emit(null);\r\n        }\r\n    }\r\n    /* tslint:enable */\r\n    /** Select. **/\r\n\r\n    private selectOption(option: Option) {\r\n        if (!option.selected) {\r\n            this.optionList.select(option, this.multiple);\r\n            this.valueChanged();\r\n            this.selected.emit(option.undecoratedCopy());\r\n            // Is this not allready done when setting the value??\r\n            /*setTimeout(() => {\r\n                if (this.multiple) {\r\n                    this.updateFilterWidth();\r\n                }\r\n            });*/\r\n        }\r\n    }\r\n\r\n    private deselectOption(option: Option) {\r\n        if (option.selected) {\r\n            this.optionList.deselect(option);\r\n            this.valueChanged();\r\n            this.deselected.emit(option.undecoratedCopy());\r\n            setTimeout(() => {\r\n                if (this.multiple) {\r\n                    // this.updateFilterWidth();\r\n                    this.updatePosition();\r\n                    this.optionList.highlight();\r\n                    if (this.isOpen) {\r\n                        this.dropdown.moveHighlightedIntoView();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private clearSelection() {\r\n        const selection: Array<Option> = this.optionList.selection;\r\n        if (selection.length > 0) {\r\n            this.optionList.clearSelection();\r\n            this.valueChanged();\r\n\r\n            if (selection.length === 1) {\r\n                this.deselected.emit(selection[0].undecoratedCopy());\r\n            } else {\r\n                this.deselected.emit(selection.map((option) => {\r\n                    return option.undecoratedCopy();\r\n                }));\r\n            }\r\n        }\r\n    }\r\n\r\n    private toggleSelectOption(option: Option) {\r\n        option.selected ?\r\n            this.deselectOption(option) : this.selectOption(option);\r\n    }\r\n\r\n    private selectHighlightedOption() {\r\n        const option: Option = this.optionList.highlightedOption;\r\n        if (option !== null) {\r\n            this.selectOption(option);\r\n            this.closeDropdown(true);\r\n        }\r\n    }\r\n\r\n    private deselectLast() {\r\n        const sel: Array<Option> = this.optionList.selection;\r\n\r\n        if (sel.length > 0) {\r\n            const option: Option = sel[sel.length - 1];\r\n            this.deselectOption(option);\r\n            this.setMultipleFilterInput(option.label + ' ');\r\n        }\r\n    }\r\n\r\n    /** Filter. **/\r\n\r\n    private clearFilterInput() {\r\n        if (this.multiple && this.filterEnabled) {\r\n            this.filterInput.nativeElement.value = '';\r\n        } else {\r\n            this.dropdown.clearFilterInput();\r\n        }\r\n    }\r\n\r\n    private setMultipleFilterInput(value: string) {\r\n        if (this.filterEnabled) {\r\n            this.filterInput.nativeElement.value = value;\r\n        }\r\n    }\r\n\r\n\r\n    private handleSelectContainerKeydown(event: any) {\r\n        const key = event.which;\r\n\r\n        if (this.isOpen) {\r\n            if (key === this.KEYS.ESC ||\r\n                (key === this.KEYS.UP && event.altKey)) {\r\n                this.closeDropdown(true);\r\n            } else if (key === this.KEYS.TAB) {\r\n                this.closeDropdown();\r\n            } else if (key === this.KEYS.ENTER) {\r\n                this.selectHighlightedOption();\r\n            } else if (key === this.KEYS.UP) {\r\n                this.optionList.highlightPreviousOption();\r\n                this.dropdown.moveHighlightedIntoView();\r\n                if (!this.filterEnabled) {\r\n                    event.preventDefault();\r\n                }\r\n            } else if (key === this.KEYS.DOWN) {\r\n                this.optionList.highlightNextOption();\r\n                this.dropdown.moveHighlightedIntoView();\r\n                if (!this.filterEnabled) {\r\n                    event.preventDefault();\r\n                }\r\n            }\r\n        } else {\r\n            if (key === this.KEYS.ENTER || key === this.KEYS.SPACE ||\r\n                (key === this.KEYS.DOWN && event.altKey)) {\r\n\r\n                /* FIREFOX HACK:\r\n                 *\r\n                 * The setTimeout is added to prevent the enter keydown event\r\n                 * to be triggered for the filter input field, which causes\r\n                 * the dropdown to be closed again.\r\n                 */\r\n                setTimeout(() => { this.openDropdown(); });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private handleMultipleFilterKeydown(event: any) {\r\n        const key = event.which;\r\n\r\n        if (key === this.KEYS.BACKSPACE) {\r\n            if (this.hasSelected && this.filterEnabled &&\r\n                this.filterInput.nativeElement.value === '') {\r\n                this.deselectLast();\r\n            }\r\n        }\r\n    }\r\n\r\n    private handleSingleFilterKeydown(event: any) {\r\n        const key = event.which;\r\n\r\n        if (key === this.KEYS.ESC || key === this.KEYS.TAB\r\n            || key === this.KEYS.UP || key === this.KEYS.DOWN\r\n            || key === this.KEYS.ENTER) {\r\n            this.handleSelectContainerKeydown(event);\r\n        }\r\n    }\r\n\r\n    /** View. **/\r\n\r\n    focus() {\r\n        this.hasFocus = true;\r\n        if (this.multiple && this.filterEnabled) {\r\n            this.filterInput.nativeElement.focus();\r\n        } else {\r\n            this.selectionSpan.nativeElement.focus();\r\n        }\r\n    }\r\n\r\n    blur() {\r\n        this.hasFocus = false;\r\n        this.selectionSpan.nativeElement.blur();\r\n    }\r\n\r\n    updateWidth() {\r\n        this.width = this.selectionSpan.nativeElement.offsetWidth;\r\n    }\r\n\r\n    updatePosition() {\r\n        const e = this.selectionSpan.nativeElement;\r\n        this.left = e.offsetLeft;\r\n        this.top = e.offsetTop + e.offsetHeight;\r\n    }\r\n\r\n    updateFilterWidth() {\r\n        if (typeof this.filterInput !== 'undefined') {\r\n            const value: string = this.filterInput.nativeElement.value;\r\n            this.filterInputWidth = value.length === 0 ?\r\n                1 + this.placeholderView.length * 10 : 1 + value.length * 10;\r\n        }\r\n    }\r\n}\r\n","export const STYLE = `select-dropdown {\n  box-sizing: border-box;\n  font-family: Sans-Serif;\n}\nselect-dropdown * {\n  box-sizing: border-box;\n  font-family: Sans-Serif;\n}\nselect-dropdown > div {\n  background-color: #fff;\n  border: 1px solid #ccc;\n  border-top: none;\n  box-sizing: border-box;\n  position: absolute;\n  z-index: 1;\n}\nselect-dropdown > div .filter {\n  padding: 3px;\n  width: 100%;\n}\nselect-dropdown > div .filter input {\n  border: 1px solid #eee;\n  box-sizing: border-box;\n  padding: 4px;\n  width: 100%;\n}\nselect-dropdown > div .options {\n  max-height: 200px;\n  overflow-y: auto;\n}\nselect-dropdown > div .options ul {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\nselect-dropdown > div .options ul li {\n  padding: 4px 8px;\n  cursor: pointer;\n  user-select: none;\n}\nselect-dropdown .selected {\n  background-color: #e0e0e0;\n}\nselect-dropdown .selected.highlighted {\n  background-color: #2196F3;\n  color: #fff;\n}\nselect-dropdown .highlighted {\n  background-color: #2196F3;\n  color: #fff;\n}\nselect-dropdown .disabled {\n  background-color: #fff;\n  color: #9e9e9e;\n  cursor: default;\n  pointer-events: none;\n}`;\n","import {\r\n    AfterViewInit,\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnChanges,\r\n    OnInit,\r\n    Output,\r\n    ViewChild,\r\n    ViewEncapsulation\r\n} from '@angular/core';\r\n\r\nimport { STYLE } from './select-dropdown.component.style';\r\nimport { Option } from './option';\r\nimport { OptionList } from './option-list';\r\n\r\n@Component({\r\n    selector: 'select-dropdown',\r\n    template: `<div\n    [ngStyle]=\"{'top.px': top, 'left.px': left, 'width.px': width}\">\n\n    <div class=\"filter\"\n        *ngIf=\"!multiple\">\n        <input\n            *ngIf=\"filterEnabled\"\n            #filterInput\n            (click)=\"onSingleFilterClick($event)\"\n            (input)=\"onSingleFilterInput($event)\"\n            (keydown)=\"onSingleFilterKeydown($event)\">\n    </div>\n\n    <div class=\"options\"\n        #optionsList>\n        <ul\n            (wheel)=\"onOptionsWheel($event)\">\n            <li *ngFor=\"let option of optionList.filtered\"\n                [ngClass]=\"{'highlighted': option.highlighted, 'selected': option.selected, 'disabled': option.disabled}\"\n                [ngStyle]=\"getOptionStyle(option)\"\n                (click)=\"onOptionClick(option)\"\n                (mouseover)=\"onOptionMouseover(option)\">\n                {{option.label}}\n            </li>\n            <li\n                *ngIf=\"!optionList.hasShown()\"\n                class=\"message\">\n                {{notFoundMsg}}\n            </li>\n        </ul>\n    </div>\n</div>\n`,\r\n    styles: [STYLE],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class SelectDropdownComponent\r\n    implements AfterViewInit, OnChanges, OnInit {\r\n\r\n    @Input() filterEnabled: boolean;\r\n    @Input() highlightColor: string;\r\n    @Input() highlightTextColor: string;\r\n    @Input() left: number;\r\n    @Input() multiple: boolean;\r\n    @Input() notFoundMsg: string;\r\n    @Input() optionList: OptionList;\r\n    @Input() top: number;\r\n    @Input() width: number;\r\n\r\n    @Output() close = new EventEmitter<boolean>();\r\n    @Output() optionClicked = new EventEmitter<Option>();\r\n    @Output() singleFilterClick = new EventEmitter<null>();\r\n    @Output() singleFilterInput = new EventEmitter<string>();\r\n    @Output() singleFilterKeydown = new EventEmitter<any>();\r\n\r\n    @ViewChild('filterInput') filterInput: any;\r\n    @ViewChild('optionsList') optionsList: any;\r\n\r\n    disabledColor = '#fff';\r\n    disabledTextColor = '9e9e9e';\r\n\r\n    /** Event handlers. **/\r\n\r\n    // Angular life cycle hooks.\r\n\r\n    ngOnInit() {\r\n        this.optionsReset();\r\n    }\r\n\r\n    ngOnChanges(changes: any) {\r\n        if (changes.hasOwnProperty('optionList')) {\r\n            this.optionsReset();\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.moveHighlightedIntoView();\r\n        if (!this.multiple && this.filterEnabled) {\r\n            this.filterInput.nativeElement.focus();\r\n        }\r\n    }\r\n\r\n    // Filter input (single select).\r\n\r\n    onSingleFilterClick(event: any) {\r\n        this.singleFilterClick.emit(null);\r\n    }\r\n\r\n    onSingleFilterInput(event: any) {\r\n        this.singleFilterInput.emit(event.target.value);\r\n    }\r\n\r\n    onSingleFilterKeydown(event: any) {\r\n        this.singleFilterKeydown.emit(event);\r\n    }\r\n\r\n    // Options list.\r\n\r\n    onOptionsWheel(event: any) {\r\n        this.handleOptionsWheel(event);\r\n    }\r\n\r\n    onOptionMouseover(option: Option) {\r\n        this.optionList.highlightOption(option);\r\n    }\r\n\r\n    onOptionClick(option: Option) {\r\n        this.optionClicked.emit(option);\r\n    }\r\n\r\n    /** Initialization. **/\r\n\r\n    private optionsReset() {\r\n        this.optionList.resetFilter();\r\n        this.optionList.highlight();\r\n    }\r\n\r\n    /** View. **/\r\n\r\n    getOptionStyle(option: Option): any {\r\n        if (option.highlighted) {\r\n            return {\r\n                'background-color': this.highlightColor,\r\n                'color': this.highlightTextColor\r\n            };\r\n        } else {\r\n            return {};\r\n        }\r\n    }\r\n\r\n    clearFilterInput() {\r\n        if (this.filterEnabled) {\r\n            this.filterInput.nativeElement.value = '';\r\n        }\r\n    }\r\n\r\n    moveHighlightedIntoView() {\r\n\r\n        const list = this.optionsList.nativeElement;\r\n        const listHeight = list.offsetHeight;\r\n\r\n        const itemIndex = this.optionList.getHighlightedIndex();\r\n\r\n        if (itemIndex > -1) {\r\n            const item = list.children[0].children[itemIndex];\r\n            const itemHeight = item.offsetHeight;\r\n\r\n            const itemTop = itemIndex * itemHeight;\r\n            const itemBottom = itemTop + itemHeight;\r\n\r\n            const viewTop = list.scrollTop;\r\n            const viewBottom = viewTop + listHeight;\r\n\r\n            if (itemBottom > viewBottom) {\r\n                list.scrollTop = itemBottom - listHeight;\r\n            } else if (itemTop < viewTop) {\r\n                list.scrollTop = itemTop;\r\n            }\r\n        }\r\n    }\r\n\r\n    private handleOptionsWheel(e: any) {\r\n        const div = this.optionsList.nativeElement;\r\n        const atTop = div.scrollTop === 0;\r\n        const atBottom = div.offsetHeight + div.scrollTop === div.scrollHeight;\r\n\r\n        if (atTop && e.deltaY < 0) {\r\n            e.preventDefault();\r\n        } else if (atBottom && e.deltaY > 0) {\r\n            e.preventDefault();\r\n        }\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {SelectComponent} from './select.component';\nimport {SelectDropdownComponent} from './select-dropdown.component';\n\n@NgModule({\n    declarations: [\n        SelectComponent,\n        SelectDropdownComponent\n    ],\n    exports: [\n        SelectComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule\n    ]\n})\nexport class SelectModule {}\n","\nimport {\n    Pipe,\n    PipeTransform,\n    OnDestroy,\n    WrappedValue,\n    ChangeDetectorRef\n} from '@angular/core';\nimport { of } from 'rxjs';\n\nimport { Subscription } from 'rxjs';\nimport { Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs';\n\n\nimport { DomSanitizer} from '@angular/platform-browser';\n// import { FileUploadResourceService } from '../../etl-api/file-upload-resource.service';\n\n// Using similarity from AsyncPipe to avoid having to pipe |secure|async in HTML.\n// tslint:disable-next-line:use-pipe-transform-interface\n@Pipe({\n    name: 'secure',\n    pure: false\n})\nexport class SecurePipe implements PipeTransform, OnDestroy {\n    private _latestValue: any = null;\n    private _latestReturnedValue: any = null;\n    private _subscription: Subscription = null;\n    private _obj: Observable<any> = null;\n    private getfile;\n    private previousUrl: string;\n    private _result: BehaviorSubject<any> = new BehaviorSubject(null);\n    private result: Observable<any> = this._result.asObservable();\n    private _internalSubscription: Subscription = null;\n\n    constructor(\n        private _ref: ChangeDetectorRef,\n        private sanitizer: DomSanitizer\n    ) { }\n\n    ngOnDestroy(): void {\n        if (this._subscription) {\n            this._dispose();\n        }\n    }\n\n    transform(url: string, getfile): any {\n        this.getfile = getfile;\n        const obj = this.internalTransform(url);\n        return this.asyncTrasnform(obj);\n    }\n\n    private internalTransform(url: string): Observable<any> {\n        if (!url) {\n            return this.result;\n        }\n\n        if (this.previousUrl !== url) {\n            this.previousUrl = url;\n            this._internalSubscription = this.getfile(url)\n                .subscribe(m => {\n                    const sanitized = this.sanitizer.bypassSecurityTrustUrl(m);\n                    this._result.next(sanitized);\n                });\n        }\n\n        return this.result;\n    }\n\n    private asyncTrasnform(obj: Observable<any>): any {\n        if (!this._obj) {\n            if (obj) {\n                this._subscribe(obj);\n            }\n            this._latestReturnedValue = this._latestValue;\n            return this._latestValue;\n        }\n        if (obj !== this._obj) {\n            this._dispose();\n            return this.asyncTrasnform(obj);\n        }\n        if (this._latestValue === this._latestReturnedValue) {\n            return this._latestReturnedValue;\n        }\n        this._latestReturnedValue = this._latestValue;\n        return WrappedValue.wrap(this._latestValue);\n    }\n\n    private _subscribe(obj: Observable<any>) {\n        const _this = this;\n        this._obj = obj;\n\n        this._subscription = obj.subscribe({\n            next: function (value) {\n                return _this._updateLatestValue(obj, value);\n            }, error: (e: any) => { throw e; }\n        });\n    }\n\n    private _dispose() {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n        if (this._internalSubscription) {\n            this._internalSubscription.unsubscribe();\n        }\n\n        this._internalSubscription = null;\n        this._latestValue = null;\n        this._latestReturnedValue = null;\n        this._subscription = null;\n        this._obj = null;\n    }\n\n    private _updateLatestValue(async: any, value: Object) {\n        if (async === this._obj) {\n            this._latestValue = value;\n            this._ref.markForCheck();\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SecurePipe } from './components/file-upload/secure.pipe';\nimport { DataSources } from './form-entry/data-sources/data-sources';\n@NgModule({\n    declarations: [\n        SecurePipe\n    ],\n    imports: [ CommonModule ],\n    exports: [\n        SecurePipe\n    ],\n    providers: [\n        DataSources\n    ],\n})\nexport class SharedModule {}\n","import { Component, OnInit, Input, forwardRef, Renderer2 } from '@angular/core';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\n@Component({\n    selector: 'remote-file-upload',\n    template: `<div>\n    <file-uploader [(ngModel)]=\"innerValue\" (onClear)=\"clearValue()\" (fileChanged)=\"upload($event)\">\n    </file-uploader>\n    <img *ngIf=\"innerValue\" class=\"img-responsive\" [src]=\"innerValue | secure:this.dataSource.fetchFile\" alt=\"\" />\n</div>`,\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => RemoteFileUploadComponent),\n            multi: true,\n        }],\n    styles: [`img {\n        margin-left: auto;margin-right: auto;display: block;\n    }`\n    ]\n})\nexport class RemoteFileUploadComponent implements OnInit, ControlValueAccessor {\n    uploading = false;\n    innerValue = null;\n    private _dataSource: DataSource;\n    @Input()\n    public get dataSource(): DataSource {\n        return this._dataSource;\n    }\n    public set dataSource(v: DataSource) {\n        this._dataSource = v;\n    }\n\n\n    constructor(private renderer: Renderer2) { }\n\n    ngOnInit() {\n\n    }\n    upload(data) {\n        if (this.dataSource) {\n            this.uploading = true;\n            this.dataSource.fileUpload(data).subscribe((result) => {\n                console.log('Result', result);\n                this.innerValue = result.image;\n                this.propagateChange(this.innerValue);\n                this.uploading = false;\n            }, (error) => {\n                this.uploading = false;\n            });\n        }\n    }\n\n    // this is the initial value set to the component\n    public writeValue(value: any) {\n        if (value !== this.innerValue) {\n            this.innerValue = value;\n        }\n    }\n    // registers 'fn' that will be fired when changes are made\n    // this is how we emit the changes back to the form\n    public registerOnChange(fn: any) {\n        this.propagateChange = fn;\n    }\n\n    // not used, used for touch input\n    public registerOnTouched() { }\n    // change events from the textarea\n    onChange(event) {\n        this.propagateChange(event.id);\n        // .....\n        // update the form\n        // this.propagateChange(this.data);\n    }\n\n\n    // the method set in registerOnChange, it is just\n    // a placeholder for a method that takes one parameter,\n    // we use it to emit changes back to the form\n    private propagateChange = (_: any) => { };\n\n    public clearValue() {\n        this.innerValue = null;\n        this.propagateChange(this.innerValue);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule } from '@angular/forms';\nimport { FileUploaderModule } from 'ngx-file-uploader';\nimport { SharedModule } from '../../shared.module';\n// import { SelectModule } from 'ng2-select/ng2-select';\nimport { SelectModule } from '../../components/select/select.module';\nimport { RemoteFileUploadComponent } from './file-upload.component';\n\n@NgModule({\n    imports: [CommonModule, SelectModule, FormsModule, FileUploaderModule, SharedModule],\n    exports: [RemoteFileUploadComponent],\n    declarations: [RemoteFileUploadComponent],\n    providers: [],\n})\nexport class RemoteFileUploadModule { }\n","/**\n * modal.component\n */\n\nimport {\n    Component, Output, OnInit, EventEmitter,\n    ChangeDetectionStrategy\n} from '@angular/core';\n\n// webpack1_\ndeclare let require: any;\n// const myDpStyles: string = require('./modal.component.css');\n// const myDpTpl: string = require('./modal.component.html');\n// webpack2_\n\n@Component({\n    selector: 'picker-modal',\n    template: `<section class=\"x-modal\">\n    <section class=\"modal-overlay\" (click)=\"closeModal()\"></section>\n    <section class=\"modal-main\" id=\"section-modal-main\">\n        <ng-content></ng-content>\n    </section>\n</section>\n`,\n    styles: [`:host{z-index:9999999999}*,::after,::before{box-sizing:border-box}.modal-main{position:absolute;left:19.6%;right:auto;top:auto;z-index:111;background-color:#fff;border:1px solid #d7dad7;border-radius:6px;-webkit-transform:translate(-50%,0);transform:translate(-50%,0);box-shadow:0 5px 15px rgba(0,0,0,.3)}`],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [\n    ],\n})\n\nexport class ModalComponent implements OnInit {\n\n    @Output() onOverlayClick = new EventEmitter<boolean>();\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n    closeModal() {\n        this.onOverlayClick.emit(false);\n    }\n}\n","/**\n * moment.pipe\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { Moment } from 'moment/moment';\n\n@Pipe({name: 'moment'})\n\nexport class MomentPipe implements PipeTransform {\n    transform(moment: Moment, format?: string): string {\n        return format ? moment.format(format) : moment.format('MMM DD, YYYY');\n    }\n}\n","/**\n * date-picker.component\n */\n\nimport { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\nimport * as _ from 'lodash';\nimport { Moment } from 'moment/moment';\n\n// webpack1_\ndeclare let require: any;\n// const myDpStyles: string = require('./date-picker.component.css');\n// const myDpTpl: string = require('./date-picker.component.html');\n// webpack2_\n\n@Component({\n  selector: 'date-picker',\n  template: `<picker-modal (onOverlayClick)=\"cancelDatePicker()\">\n  <div class=\"picker-wrap\">\n    <div class=\"picker-box\">\n      <div class=\"picker-header\">\n        <div class=\"picker-header-nav\">\n          <span class=\"nav-prev\" (click)=\"prev()\"></span>\n        </div>\n        <div class=\"picker-header-content\">\n          <div class=\"content\">\n            <span (click)=\"showMonthSelection()\" class=\"month\">{{calendarDate | moment: \"MMMM\"}}</span>\n            <span class=\"seperator\">|</span>\n            <span (click)=\"showYearSelection()\" class=\"year\">{{calendarDate | moment: \"YYYY\"}}</span>\n          </div>\n        </div>\n        <div class=\"picker-header-nav\">\n          <span class=\"nav-next\" (click)=\"next()\"></span>\n        </div>\n      </div>\n      <div class=\"picker-calendar\">\n        <div class=\"picker-calendar-row\" *ngIf=\"!onDisplayMonths && !onDisplayYears\">\n          <span class=\"picker-weekday\" *ngFor=\"let day of dayNames\">{{ day }}</span>\n        </div>\n        <div class=\"picker-calendar-row\" *ngIf=\"!onDisplayMonths && !onDisplayYears\">\n                    <span class=\"picker-day\" (click)=\"selectDay(day)\" [ngClass]=\"{\n                       'out-focus': day.month() != calendarDate.month(),\n                       'today': day.isSame(today),\n                       'selected': day.isSame(selectedDate)\n                      }\" *ngFor=\"let day of calendarDays\">\n                    {{ day | moment: 'D'}}\n                </span>\n        </div>\n        <div class=\"picker-calendar-row\" *ngIf=\"onDisplayMonths\">\n                    <span class=\"picker-month\" *ngFor=\"let month of monthsShort\"\n                          (click)=\"selectMonth(month)\"\n                          [ngClass]=\"{\n                       'selected': month === currentMonth\n                      }\">\n                    {{ month }}\n                </span>\n        </div>\n        <div class=\"picker-calendar-row\" *ngIf=\"onDisplayYears\">\n                    <span class=\"picker-year\" *ngFor=\"let year of displayYearRange\"\n                          (click)=\"selectYear(year)\"\n                          [ngClass]=\"{\n                       'selected': year === currentYear\n                      }\">\n                    {{ year }}\n                </span>\n        </div>\n      </div>\n      <div class=\"picker-footer\">\n        <div class=\"picker-action action-today\" (click)=\"selectToday()\"><span class=\"text\">Today</span></div>\n        <div class=\"picker-action action-clear\" (click)=\"clearPickDate()\"><span class=\"text\">Clear</span></div>\n        <div class=\"picker-action action-close\" (click)=\"cancelDatePicker()\"><span class=\"text\">Close</span></div>\n      </div>\n    </div>\n  </div>\n</picker-modal>\n`,\n  styles: [`*,::after,::before{box-sizing:border-box}.picker-wrap{width:95vw;max-width:666px}.picker-box{font-family:'Open Sans';min-width:400px!important;padding:.625rem 1rem;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.picker-footer,.picker-header{font-size:1.333rem;line-height:2.5rem;display:flex;height:2.5rem;width:100%}.picker-header-nav{position:relative;cursor:pointer;width:calc(100% / 8)}.picker-header-nav>*{position:absolute;top:50%;right:auto;bottom:auto;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.picker-header-nav .nav-next::before,.picker-header-nav .nav-prev::before{content:\" \";border-top:.5em solid transparent;border-bottom:.5em solid transparent;border-right:.75em solid #000;width:0;height:0;display:block;margin:0 auto}.picker-header-nav .nav-next::before{border-right:0;border-left:.75em solid #000}.picker-header-content{width:calc(100% * 6 / 8);text-align:center}.picker-header-content .month{font-size:1.778rem;line-height:2.5rem;margin-right:.5rem;font-weight:700}.picker-header-content .year{font-style:italic;color:#999}.picker-calendar{width:100%}.picker-calendar .picker-calendar-row{display:flex;flex-wrap:wrap;width:100%;margin-bottom:.625rem}.picker-calendar .picker-weekday{font-weight:700;text-align:left;color:#999;width:calc(100% / 7)}.picker-calendar .picker-day,.picker-calendar .picker-month,.picker-calendar .picker-year{font-size:1.333rem;line-height:2.5rem;position:relative;height:2.5rem;text-align:center;cursor:pointer;width:calc(100% / 7)}.picker-calendar .picker-day:hover,.picker-calendar .picker-month:hover,.picker-calendar .picker-year:hover{background:#b1dcfb}.picker-calendar .out-focus{color:#ddd}.picker-calendar .out-focus:hover{color:#000}.picker-calendar .selected{background:#0089ec;color:#fff}.picker-calendar .selected:hover{background:#0089ec}.picker-calendar .today::before{content:\" \";position:absolute;top:2px;right:2px;width:0;height:0;border-top:.5em solid #0059bc;border-left:.5em solid transparent}.picker-footer{cursor:pointer}.picker-footer .picker-action{text-align:center;width:calc(100% / 3)}.picker-footer .picker-action:hover{background-color:#b1dcfb}.picker-footer .picker-action .text{padding-left:.8rem}.picker-footer .action-clear::before,.picker-footer .action-close::before,.picker-footer .action-today::before{content:\" \";position:relative;display:inline-block;height:0;width:0}.picker-footer .action-today::before{border-top:.66em solid #0059bc;border-left:.66em solid transparent}.picker-footer .action-clear::before{top:-.5rem;width:1rem;border-top:3px solid #e20}.picker-footer .action-close::before{width:1rem;height:1rem;background:linear-gradient(to bottom,transparent 35%,#777 35%,#777 65%,transparent 65%),linear-gradient(to right,transparent 35%,#777 35%,#777 65%,transparent 65%);-webkit-transform:rotate(45deg);transform:rotate(45deg)}`],\n})\n\nexport class DatePickerComponent implements OnInit {\n\n  public dayNames: Array<string>;\n\n  @Input() public initDate: any;\n  @Input() public locale = 'en';\n  @Input() public viewFormat = 'll';\n  @Input() public returnObject = 'js';\n  @Output() public onDatePickerCancel = new EventEmitter<boolean>();\n  @Output() public onSelectDate = new EventEmitter<any>();\n\n  public calendarDate: Moment;\n  public selectedDate: Moment;\n  public currentMonth: any ;\n  public today: Moment;\n  public currentYear: number;\n  public onDisplayMonths = false;\n  public onDisplayYears = false;\n  public displayYearsIndex = 0;\n  public displayYearRange: Array<number>;\n  public fullYearRange: Array<any>;\n  public monthsShort: Array<string> = moment.monthsShort();\n  public calendarDays: Array<Moment>;\n\n  constructor() {\n  }\n\n  public ngOnInit(): void {\n    this.initValue();\n    // default to current year range\n    _.each(this.fullYearRange, (v, i) => {\n      this.currentYear = this.calendarDate.clone().startOf('year').year();\n      if (v.indexOf(this.currentYear) !== -1) {\n        this.displayYearsIndex = i;\n      }\n    });\n    this.displayYearRange = this.fullYearRange[this.displayYearsIndex];\n    this.generateCalendar();\n  }\n\n  public prev(): void {\n    if (this.onDisplayYears) {\n      this.displayYearsIndex--;\n      if (this.displayYearsIndex < 0) {\n        this.displayYearsIndex = 0;\n      }\n      this.displayYearRange = this.fullYearRange[this.displayYearsIndex];\n    } else {\n      this.calendarDate = this.calendarDate.clone().subtract(1, 'M');\n    }\n    this.generateCalendar();\n  }\n\n  public showMonthSelection(): void {\n    this.onDisplayMonths = true;\n    this.onDisplayYears = false;\n  }\n\n  public showYearSelection(): void {\n    this.onDisplayYears = true;\n    this.onDisplayMonths = false;\n  }\n\n  public next(): void {\n    if (this.onDisplayYears) {\n      this.displayYearsIndex++;\n      if (this.displayYearsIndex >= this.fullYearRange.length) {\n        this.displayYearsIndex = this.fullYearRange.length - 1;\n      }\n      this.displayYearRange = this.fullYearRange[this.displayYearsIndex++];\n    } else {\n      this.calendarDate = this.calendarDate.clone().add(1, 'M');\n    }\n    this.generateCalendar();\n  }\n\n  public selectDay(day: Moment): void {\n    const daysDifference = day.diff(this.calendarDate.clone().startOf('date'), 'days');\n    day = this.calendarDate.clone().add(daysDifference, 'd');\n    const selectedDay = this.parseToReturnObjectType(day);\n    this.onSelectDate.emit(selectedDay);\n    this.cancelDatePicker();\n    return;\n  }\n\n  public selectMonth(month: string) {\n    this.calendarDate = this.calendarDate.clone().month(month);\n    this.onDisplayMonths = false;\n    this.generateCalendar();\n  }\n\n  public selectYear(year: number) {\n    this.calendarDate = this.calendarDate.clone().year(year);\n    this.onDisplayYears = false;\n    this.generateCalendar();\n  }\n\n  public selectToday(): void {\n    const today = this.parseToReturnObjectType(moment());\n    this.onSelectDate.emit(today);\n    this.cancelDatePicker();\n    return;\n  }\n\n  public clearPickDate(): void {\n    this.onSelectDate.emit(null);\n    this.cancelDatePicker();\n    return;\n  }\n\n  public cancelDatePicker(): void {\n    this.onDatePickerCancel.emit(false);\n    return;\n  }\n\n  protected generateYears(): void {\n    const currentYear = moment().year();\n    const startYr = this.calendarDate.clone().subtract(100, 'y').year();\n    // const endYr = this.calendarDate.clone().add(10, 'y').year();\n    const years = [];\n    for (let year = startYr; year <= currentYear; year++) {\n      years.push(year);\n    }\n\n    this.fullYearRange = _.chunk(years, 14);\n  }\n\n  protected initValue() {\n\n    // set moment locale (default is en)\n    moment.locale(this.locale);\n    // set today value\n    this.today = moment().startOf('date');\n    this.currentMonth = this.monthsShort[moment().month()];\n    this.currentYear = moment().year();\n\n    // set week days name array\n    this.dayNames = moment.weekdaysShort(true);\n\n    // check if the input initDate has value\n    if (this.initDate) {\n      this.calendarDate = this.returnObject === 'string' ? moment(this.initDate, this.viewFormat) :\n        moment(this.initDate);\n      this.selectedDate = this.calendarDate.clone().startOf('date');\n    } else {\n      this.calendarDate = moment();\n    }\n    this.generateYears();\n  }\n\n  protected generateCalendar(): void {\n    this.calendarDays = [];\n    const start = 0 - (this.calendarDate.clone().startOf('month').day() +\n     (7 - moment.localeData().firstDayOfWeek())) % 7;\n    const end = 41 + start; // iterator ending point\n\n    for (let i = start; i <= end; i += 1) {\n      const day = this.calendarDate.clone().startOf('month').add(i, 'days');\n      this.calendarDays.push(day);\n    }\n  }\n\n  protected parseToReturnObjectType(day: Moment): any {\n    switch (this.returnObject) {\n      case 'js':\n        return day.toDate();\n\n      case 'string':\n        return day.format(this.viewFormat);\n\n      case 'moment':\n        return day;\n\n      case 'json':\n        return day.toJSON();\n\n      case 'array':\n        return day.toArray();\n\n      case 'iso':\n        return day.toISOString();\n\n      case 'object':\n        return day.toObject();\n\n      default:\n        return day;\n    }\n  }\n}\n","/**\n * time-picker.component\n */\n\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\nimport { Moment } from 'moment/moment';\n\n// webpack1_\ndeclare let require: any;\n// const myDpStyles: string = require('./time-picker.component.css');\n// const myDpTpl: string = require('./time-picker.component.html');\n// webpack2_\n\n@Component({\n    selector: 'time-picker',\n    template: `<picker-modal (onOverlayClick)=\"cancelTimePicker()\">\n    <div class=\"picker-wrap\">\n        <div class=\"picker-box\">\n            <div class=\"picker-header\">Time Picker</div>\n            <div class=\"picker-table\">\n                <ul class=\"picker-table-time\">\n                    <li class=\"picker-table-number hour\">\n                        <span class=\"arrow up\" (click)=\"increaseHour()\"></span>\n                        {{time | moment: hourFormat}}\n                        <span class=\"arrow down\" (click)=\"decreaseHour()\"></span>\n                    </li>\n                    <li class=\"picker-table-separator\">:</li>\n                    <li class=\"picker-table-number minute\">\n                        <span class=\"arrow up\" (click)=\"increaseMinute()\"></span>\n                        {{time | moment: 'mm'}}\n                        <span class=\"arrow down\" (click)=\"decreaseMinute()\"></span>\n                    </li>\n                    <li *ngIf=\"showSecond\" class=\"picker-table-separator\">:</li>\n                    <li *ngIf=\"showSecond\" class=\"picker-table-number second\">\n                        <span class=\"arrow up\" (click)=\"increaseSecond()\"></span>\n                        {{time | moment: 'ss'}}\n                        <span class=\"arrow down\" (click)=\"decreaseSecond()\"></span>\n                    </li>\n                    <li *ngIf=\"use12Hour\" class=\"picker-table-meridiem meridiem\">\n                        {{time | moment: 'A'}}\n                    </li>\n                </ul>\n            </div>\n            <div class=\"picker-footer\">\n                <div class=\"picker-action action-now\" (click)=\"selectNow()\"><span class=\"text\">Now</span></div>\n                <div class=\"picker-action action-confirm\" (click)=\"selectTime()\"><span class=\"text\">Confirm</span></div>\n                <div class=\"picker-action action-clear\" (click)=\"clearTime()\"><span class=\"text\">Clear</span></div>\n                <div class=\"picker-action action-close\" (click)=\"cancelTimePicker()\"><span class=\"text\">Close</span></div>\n            </div>\n        </div>\n    </div>\n</picker-modal>\n`,\n    styles: [`*,::after,::before{box-sizing:border-box}.picker-wrap{width:95vw;max-width:40rem;font-family:'Open Sans'}.picker-box{width:100%;padding:.625rem 1rem;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.picker-footer,.picker-header{font-size:1.333rem;line-height:2.5rem;height:2.5rem;width:100%}.picker-header{text-align:center}.picker-table{width:100%;margin:2.5rem 0}.picker-table-time{font-size:2.37rem;line-height:2.5rem;list-style:none;margin:0;padding:0;display:flex;justify-content:center;width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.picker-table-meridiem,.picker-table-number,.picker-table-separator{text-align:center}.picker-table-meridiem,.picker-table-number{position:relative;width:20%}.arrow{position:absolute;left:50%;border:solid #777;border-width:0 .2rem .2rem 0;display:inline-block;padding:.25rem;cursor:pointer}.arrow.up{top:-1rem;-webkit-transform:translateX(-50%) rotate(-135deg);transform:translateX(-50%) rotate(-135deg)}.arrow.down{bottom:-1rem;-webkit-transform:translateX(-50%) rotate(45deg);transform:translateX(-50%) rotate(45deg)}.arrow:hover{border-color:#1975d2}.picker-table-separator{width:calc(20% / 3)}.picker-footer{display:flex;justify-content:center;width:100%;cursor:pointer}.picker-footer .picker-action{width:25%;text-align:center}.picker-footer .picker-action:hover{background-color:#b1dcfb}.picker-footer .picker-action .text{padding-left:.8rem}.picker-footer .action-clear::before,.picker-footer .action-close::before,.picker-footer .action-confirm::before,.picker-footer .action-now::before{content:\" \";position:relative;display:inline-block;height:0;width:0}.picker-footer .action-now::before{border-top:.66em solid #0059bc;border-left:.66em solid transparent}.picker-footer .action-confirm::before{width:1rem;height:1rem;border-radius:100%;background-color:#00b5ad}.picker-footer .action-clear::before{top:-.5rem;width:1rem;border-top:3px solid #e20}.picker-footer .action-close::before{width:1rem;height:1rem;background:linear-gradient(to bottom,transparent 35%,#777 35%,#777 65%,transparent 65%),linear-gradient(to right,transparent 35%,#777 35%,#777 65%,transparent 65%);-webkit-transform:rotate(45deg);transform:rotate(45deg)}`],\n})\n\nexport class TimePickerComponent implements OnInit {\n\n    @Input() initTime: any;\n    @Input() showSecond = true;\n    @Input() viewFormat = 'hh:mm A';\n    @Input() use12Hour = false;\n    @Input() returnObject = 'js';\n    @Output() onSelectTime = new EventEmitter<any>();\n    @Output() onTimePickerCancel = new EventEmitter<boolean>();\n    hourFormat = 'HH';\n    public time: Moment;\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n        if (this.use12Hour) {\n            this.hourFormat = 'hh';\n        }\n        this.time = this.initTime ? moment(this.initTime, this.viewFormat) : moment();\n\n        // check if the input initDate has value\n        if (this.initTime) {\n            this.time = this.returnObject === 'string' ? moment(this.initTime, this.viewFormat) :\n                moment(this.initTime);\n        } else {\n            this.time = moment();\n        }\n    }\n\n    increaseHour(): void {\n        this.time = this.time.clone().add(1, 'h');\n    }\n\n    decreaseHour(): void {\n        this.time = this.time.clone().subtract(1, 'h');\n    }\n\n    increaseMinute() {\n        this.time = this.time.clone().add(1, 'm');\n    }\n\n    decreaseMinute() {\n        this.time = this.time.clone().subtract(1, 'm');\n    }\n\n    increaseSecond(): void {\n        this.time = this.time.clone().add(1, 's');\n    }\n\n    decreaseSecond(): void {\n        this.time = this.time.clone().subtract(1, 's');\n    }\n\n    selectTime(): void {\n        const selectTime = this.parseToReturnObjectType(this.time);\n        this.onSelectTime.emit(selectTime);\n        this.cancelTimePicker();\n        return;\n    }\n\n    selectNow(): void {\n        const selectTime = this.parseToReturnObjectType(moment());\n        this.onSelectTime.emit(selectTime);\n        this.cancelTimePicker();\n        return;\n    }\n\n    clearTime(): void {\n        this.onSelectTime.emit(null);\n        this.cancelTimePicker();\n        return;\n    }\n\n    cancelTimePicker(): void {\n        this.onTimePickerCancel.emit(false);\n        return;\n    }\n\n    protected parseToReturnObjectType(time: Moment): any {\n        switch (this.returnObject) {\n            case 'js':\n                return time.toDate();\n\n            case 'string':\n                return time.format(this.viewFormat);\n\n            case 'moment':\n                return time;\n\n            case 'json':\n                return time.toJSON();\n\n            case 'array':\n                return time.toArray();\n\n            case 'iso':\n                return time.toISOString();\n\n            case 'object':\n                return time.toObject();\n\n            default:\n                return time;\n        }\n    }\n\n}\n","import { Component, OnInit, Input, forwardRef, EventEmitter, Output } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as moment_ from 'moment';\n\nconst Moment = moment_;\n\n@Component({\n    selector: 'date-time-picker',\n    template: `<div class='row'>\n    <div *ngIf=\"!showTime\" class='col-xs-12 col-md-12'>\n        <input *ngIf=\"!showWeeks\" type=\"text\" class=\"form-control\" [value]=\"value | date: 'mediumDate'\" (focus)=\"toggleDatePicker(true)\"\n            readonly placeholder=\"Select Date\" />\n        <div *ngIf=\"showWeeks\" class=\"input-group\">\n            <input type=\"text\" class=\"form-control\" class=\"form-control\" [value]=\"value | date: 'mediumDate'\" (focus)=\"toggleDatePicker(true)\"\n                readonly placeholder=\"Select Date\">\n            <div class=\"input-group-btn\">\n                <button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Weeks <span class=\"caret\"></span></button>\n                <ul class=\"dropdown-menu up\">\n                    <li (click)=\"weeksSelected(count)\" *ngFor=\"let count of weeks\"><span> {{count}} Weeks</span></li>\n                </ul>\n            </div>\n        </div>\n    </div>\n    <div *ngIf=\"showTime\" class='col-xs-8 col-md-8'>\n        <input *ngIf=\"!showWeeks\" type=\"text\" class=\"form-control\" [value]=\"value | date: 'mediumDate'\" (focus)=\"toggleDatePicker(true)\"\n            readonly placeholder=\"Select Date\" />\n        <div *ngIf=\"showWeeks\" class=\"input-group\">\n            <input type=\"text\" class=\"form-control\" class=\"form-control\" [value]=\"value | date: 'mediumDate'\" (focus)=\"toggleDatePicker(true)\"\n                readonly placeholder=\"Select Date\">\n            <div class=\"input-group-btn\">\n                <button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Weeks <span class=\"caret\"></span></button>\n                <ul class=\"dropdown-menu up\">\n                    <li (click)=\"weeksSelected(count)\" *ngFor=\"let count of weeks\"><span> {{count}} Weeks</span></li>\n                </ul>\n            </div>\n        </div>\n    </div>\n    <div *ngIf=\"showTime\" class='col-xs-4 col-md-4'>\n        <input type=\"text\" class=\"form-control\" [value]=\"value | date: 'shortTime'\" (focus)=\"toggleTimePicker(true)\" readonly placeholder=\"Select Time\"\n        />\n    </div>\n</div>\n<date-picker *ngIf=\"showDatePicker\" [initDate]=\"value\" (onSelectDate)=\"setDate($event)\" (onDatePickerCancel)=\"toggleDatePicker($event)\"></date-picker>\n\n<time-picker *ngIf=\"showTimePicker\" [initTime]=\"value\" [use12Hour]=\"true\" (onSelectTime)=\"setTime($event)\" (onTimePickerCancel)=\"toggleTimePicker($event)\"></time-picker>`,\n    styles: [`input[readonly]{background-color:#fff}.up{bottom:100%!important;top:auto!important}.glyphicon{top:1px}`],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateTimePickerComponent),\n            multi: true\n        }\n    ]\n})\nexport class DateTimePickerComponent implements OnInit, ControlValueAccessor {\n    @Input() modelValue: any;\n    @Input() showDate = true;\n    @Input() showTime = false;\n    @Input() showWeeks = false;\n    @Input() weeks: number[] = [2, 4, 6, 8, 12, 16, 24];\n    @Output() onDateChange = new EventEmitter<any>();\n    public showDatePicker = false;\n    public showTimePicker = false;\n    onChange: any = () => { };\n    onTouched: any = () => { };\n\n    constructor() {\n    }\n\n    ngOnInit() { }\n\n    weeksSelected(count) {\n        const now = new Date();\n        const nextDate = now.setDate(now.getDate() + count * 7);\n        this.value = Moment(nextDate).format();\n    }\n    setDate(date: any): void {\n        if (date && date !== '') {\n            this.value = Moment(date).format();\n        } else {\n            this.value = date;\n        }\n\n    }\n\n    setTime(time: any): void {\n        if (time && time !== '') {\n            this.value = Moment(time).format();\n        } else {\n            this.value = time;\n        }\n        return;\n    }\n\n    toggleDatePicker(status: boolean): void {\n      this.showDatePicker = status;\n      /*setTimeout(function() {\n        let _body = document.getElementById('content-wrapper').getBoundingClientRect(),\n          elem = document.getElementById('section-modal-main');\n        if (elem) {\n          let elemBox = elem.getBoundingClientRect();\n          if (elemBox.bottom > _body.bottom) {\n            elem.style.bottom = '36px';\n          }\n        }\n      }, 0);*/\n      return;\n    }\n\n    toggleTimePicker(status: boolean): void {\n        this.showTimePicker = status;\n        return;\n    }\n    get value() {\n        return this.modelValue;\n    }\n\n    set value(val) {\n        this.modelValue = val;\n        this.onDateChange.emit(val);\n        this.onChange(val);\n        this.onTouched();\n    }\n\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n\n    writeValue(value) {\n        if (value instanceof Date) {\n            this.value = Moment(value).format();\n        } else {\n            this.value = value;\n        }\n    }\n}\n","/**\n * date-time-picker.module\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { DatePickerComponent } from './date-picker/date-picker.component';\nimport { TimePickerComponent } from './time-picker/time-picker.component';\nimport { ModalComponent } from './picker-modal/modal.component';\nimport { MomentPipe } from './pipes/moment.pipe';\nimport { DateTimePickerComponent } from './date-time-picker.component';\n\n@NgModule({\n    imports: [CommonModule, FormsModule],\n    declarations: [\n        DatePickerComponent,\n        TimePickerComponent,\n        ModalComponent,\n        MomentPipe,\n        DateTimePickerComponent\n    ],\n    exports: [\n        DatePickerComponent,\n        TimePickerComponent,\n        ModalComponent,\n        MomentPipe,\n        DateTimePickerComponent\n    ],\n    providers: []\n})\nexport class DateTimePickerModule {\n}\n","\nimport { Component, OnInit, Input, forwardRef, EventEmitter, Output } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR , FormControl } from '@angular/forms';\nimport * as moment_ from 'moment';\nimport { DateAdapter , MAT_DATE_FORMATS } from '@angular/material/core';\nimport { MomentDateAdapter} from '@angular/material-moment-adapter';\nconst moment = moment_;\n\nexport const MY_FORMATS = {\n    parse: {\n      dateInput: 'LL',\n    },\n    display: {\n      dateInput: 'LL',\n      monthYearLabel: 'MMM YYYY',\n      dateA11yLabel: 'LL',\n      monthYearA11yLabel: 'MMMM YYYY',\n    },\n  };\n\n@Component({\n    selector: 'ngx-date-time-picker',\n    template: `<div class=\"row\">\n  <div class=\"col-sm-8 col-md-8 col-lg-8 col-xs-12\">\n    <div class=\"row\">\n        <div class=\"col-sm-9 col-md-9 col-lg-9 col-xs-12\">\n            <div class=\"input-group\">\n                   \n                    <input matInput [matDatepicker]=\"picker\" class=\"form-control\" [(ngModel)]=\"selectedDate\" placeholder=\"Choose a date\" \n                    (ngModelChange)=\"onDateSelect($event)\">\n                    <mat-datepicker #picker touchUi=\"true\" disabled=\"false\"></mat-datepicker>\n                    <div class=\"input-group-btn\">\n                        <button class=\"btn btn-default\" (click)=\"picker.open()\">\n                            <i class=\"glyphicon glyphicon-calendar\"></i>\n                          </button>\n                        <button class=\"btn btn-default\" (click)=\"setCurrentDate()\">\n                          Set Current Date\n                        </button>\n                    </div>\n            </div>\n          </div>\n          <div class=\"col-sm-3 col-md-3 col-lg-3 col-xs-12\" *ngIf=\"showWeeks\">\n          \n              <div class=\"form-group\">\n                  <mat-select placeholder=\"Weeks\" class=\"form-control\" [(ngModel)]=\"modelValue\" name=\"weeks\" (ngModelChange)=\"weekSelect($event)\">\n                    <mat-option *ngFor=\"let count of weeks\" [value]=\"count\">\n                      {{count}} Weeks\n                    </mat-option>\n                  </mat-select>\n              </div>\n          </div>\n    </div>\n    \n  </div>\n  <div class=\"col-sm-4 col-md-4 col-lg-4 col-xs-12\" id=\"time-section\">\n   \n        <div class=\"input-group\">\n            <input type=\"time\" class=\"form-control\" atp-time-picker [(ngModel)] = \"selectedTime\" (ngModelChange)=\"onTimeSelect($event)\" id=\"ngx-atp-time-picker\"/>\n            <div class=\"input-group-btn\">\n              <button class=\"btn btn-default\" (click)=\"setCurrentTime()\">\n                  Set Current Time\n              </button>\n            </div>\n         </div>\n    \n      \n  </div>\n\n</div>`,\n    styles: [`#time-section{display:inline-block}#ngx-atp-time-picker,#ngx-mat-form-field{width:100%}.up{bottom:100%!important;top:auto!important}.time-btn{margin-top:-20px}`],\n    providers: [\n        { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\n        { provide: DateAdapter, useClass: MomentDateAdapter },\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => NgxDateTimePickerComponent),\n            multi: true\n        }\n    ]\n})\nexport class NgxDateTimePickerComponent implements OnInit, ControlValueAccessor {\n\n    // public date = new FormControl(moment());\n    public selectedTime = moment().format('HH:mm');\n    public selectedDate = moment().format();\n    public loadInitial = false;\n    @Input() weeks: number[] = [0 , 2 , 4, 6, 8, 12, 16, 24];\n    @Input() modelValue: any;\n    @Input() showTime = false;\n    @Input() showWeeks = true;\n    @Output() onDateChange = new EventEmitter<any>();\n    public onChange: any = () => { };\n    public onTouched: any = () => { };\n    public ngOnInit() {\n\n    }\n\n    public get value() {\n        return this.modelValue;\n    }\n\n    public set value(val) {\n        setTimeout(() => {\n            this.onDateChange.emit(val);\n        }, 100);\n        this.onChange(val);\n        this.onTouched();\n    }\n\n    public writeValue(value) {\n        if (!this.loadInitial) {\n            this.setFormValues(value);\n        }\n    }\n\n    public setFormValues(val) {\n\n        this.loadInitial = true;\n\n        this.selectedDate = moment(val).format();\n        this.selectedTime = moment(val).format('HH:mm');\n        if (val instanceof Date) {\n            this.value = moment(val).format();\n        } else {\n            this.value = val;\n        }\n        this.modelValue = this.value;\n\n    }\n\n    public registerOnChange(fn) {\n        this.onChange = fn;\n    }\n\n    public registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n\n    public onDateSelect($event) {\n        const setDate = moment($event);\n        const setTime = this.selectedTime;\n        this.setDateTime(setDate, setTime);\n\n    }\n    public onTimeSelect($event) {\n        const setDate = moment(this.selectedDate);\n        const setTime = $event;\n        this.setDateTime(setDate, setTime);\n    }\n\n    public setCurrentTime() {\n        const setDate = moment(this.selectedDate);\n        const currentTime = moment().format('HH:mm');\n        this.setDateTime(setDate, currentTime);\n    }\n\n    public weekSelect($event) {\n        const nextWeekDate = moment(this.selectedDate).add($event , 'weeks');\n        const nextWeekTime = this.selectedTime;\n        this.setDateTime(nextWeekDate, nextWeekTime);\n    }\n\n    public setCurrentDate() {\n        const currentDay = moment();\n        const currentTime = moment().format('HH:mm');\n        this.setDateTime(currentDay, currentTime);\n\n\n    }\n\n    public setDateTime(setDate, setTime) {\n        const newDate = moment(setDate).format('DD-MM-YYYY');\n        const newTime = setTime;\n        const newDateTime = moment(newDate + '' + newTime , 'DD-MM-YYYY HH:mm');\n        const dateTimeString = moment(newDateTime).format();\n        this.selectedDate = dateTimeString;\n        this.selectedTime = newTime;\n        this.modelValue = dateTimeString;\n        this.value = dateTimeString;\n\n\n    }\n}\n","/**\n * date-time-picker.module\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule , ReactiveFormsModule } from '@angular/forms';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatNativeDateModule , MatInputModule } from '@angular/material';\nimport { NgxDateTimePickerComponent } from './ngx-date-time-picker.component';\nimport { AmazingTimePickerModule } from 'amazing-time-picker';\nimport { MatSelectModule } from '@angular/material/select';\n\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatDatepickerModule,\n        MatFormFieldModule,\n        MatNativeDateModule,\n        MatInputModule,\n        AmazingTimePickerModule,\n        MatSelectModule\n    ],\n    declarations: [\n        NgxDateTimePickerComponent\n    ],\n    exports: [\n        MatDatepickerModule,\n        MatFormFieldModule,\n        MatNativeDateModule,\n        MatInputModule,\n        NgxDateTimePickerComponent\n    ],\n    providers: [\n    ]\n})\nexport class NgxDateTimePickerModule {\n}\n","\nimport { SelectOption } from './interfaces/select-option';\nexport class Option {\n    label: string;\n    value: any;\n    constructor(options: SelectOption) {\n        this.label = options.label;\n        this.value = options.value;\n    }\n}\n","import {\n  Component, Input, forwardRef, OnInit, OnChanges\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Option } from '../form-entry/question-models/select-option';\n\nimport { DataSource } from '../form-entry/question-models/interfaces/data-source';\n\n\n@Component({\n  selector: 'afe-ng-select',\n  template: `<ng-select\n                   (searchInputText)=\"getChangingText($event)\"\n                    (ngModelChange)=\"onValueChange($event)\"\n                    [options]=\"question_options\"\n                    [multiple]=\"multiple\" >\n            </ng-select>\n  `,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AfeNgSelectComponent),\n      multi: true\n    }]\n})\nexport class AfeNgSelectComponent implements ControlValueAccessor, OnInit, OnChanges {\n  subject: BehaviorSubject<Option[]>;\n  subjectOption: BehaviorSubject<Option>;\n  @Input() dataSource: DataSource;\n  @Input() multiple: boolean;\n  @Input() extras: any;\n  question_options: any = [];\n  selected_question_option: any;\n  errors: any = [];\n  propagateChange = (_: any) => { };\n\n  getChangingText(event) {\n    // console.log(event);\n    this.getData(event).subscribe((options) => {\n      this.question_options = options;\n    });\n  }\n\n  writeValue(obj: any): void {\n\n  }\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n\n  }\n\n  registerOnTouched(fn: any): void { }\n\n  ngOnChanges(changes: any) { }\n\n  ngOnInit() {\n    if (this.extras) {\n      if (this.extras.originalValue) {\n        this.resolveSelectedOption(this.extras.originalValue).subscribe((option) => {\n          this.selected_question_option = option;\n        });\n      }\n\n    }\n\n  }\n\n  getData(searchText: string): Observable<Option[]> {\n\n    this.subject = new BehaviorSubject<Option[]>([]);\n\n    const OptionsObservable = this.dataSource.searchOptions(searchText);\n\n    OptionsObservable.subscribe(\n      (options) => {\n        console.log('options', options);\n        const mappedOptions: Option[] = new Array<Option>();\n\n        for (let i = 0; i < options.length; i++) {\n          mappedOptions.push(new Option(options[i]));\n        }\n        this.subject.next(mappedOptions);\n      },\n      (error) => {\n        this.subject.error(error);\n      }\n    );\n\n    return this.subject.asObservable();\n  }\n\n  onValueChange(event) { }\n  resolveSelectedOption(value: any): Observable<Option> {\n\n    this.subjectOption = new BehaviorSubject<Option>(null);\n    const OptionObservable = this.dataSource.resolveSelectedValue(value);\n\n    OptionObservable.subscribe(\n      (option) => {\n        console.log('option', option);\n        this.subjectOption.next(option);\n      },\n      (error) => {\n        this.subjectOption.error(error);\n      }\n    );\n\n    return this.subjectOption.asObservable();\n  }\n\n  resetOptions() {\n    this.subject.next(new Array<Option>());\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport * as _ from 'lodash';\n\n@Injectable()\nexport class FormSchemaCompiler {\n  constructor() {\n\n  }\n\n  public compileFormSchema(formSchema: Object, referencedComponents: Array<any>): Object {\n    // get all referenced forms\n    const refForms: Object = this.getReferencedForms(formSchema, referencedComponents);\n    if (_.isEmpty(refForms)) { return formSchema; }\n\n    // get all place-holders from the form schema\n    const placeHolders = this.getAllPlaceholderObjects(formSchema);\n    if (_.isEmpty(placeHolders)) { return formSchema; }\n\n    // replace all placeHolders\n    this.replaceAllPlaceholdersWithActualObjects(refForms, placeHolders);\n    return formSchema;\n  }\n\n\n  private findSchemaByName(schemaArray: Array<any>, nameOfSchema: string): Object {\n    if (_.isEmpty(schemaArray) || _.isEmpty(nameOfSchema)) { return; }\n    let foundSchema: any = {};\n    _.each(schemaArray, (schema: any) => {\n      if (schema.name === nameOfSchema) {\n        foundSchema = schema;\n      }\n    });\n    return foundSchema;\n  }\n\n  private getPageInSchemaByLabel(schema: any, pageLabel: string): Object {\n    if (_.isEmpty(schema) || _.isEmpty(pageLabel)) { return; }\n    let foundPage: Object = {};\n    _.each(schema.pages, (page) => {\n      if (page.label === pageLabel) {\n        foundPage = page;\n      }\n    }\n    );\n    return foundPage;\n  }\n\n  private getSectionInSchemaByPageLabelBySectionLabel\n    (schema: Object, pageLabel: string, sectionLabel: string): Object {\n    if (_.isEmpty(schema) || _.isEmpty(pageLabel) || _.isEmpty(sectionLabel)) { return; }\n    const foundPage: any = this.getPageInSchemaByLabel(schema, pageLabel);\n    if (_.isEmpty(foundPage)) { return; }\n    let foundSection: Object = {};\n    _.each(foundPage.sections, (section) => {\n      if (section.label === sectionLabel) {\n        foundSection = section;\n      }\n    }\n    );\n    return foundSection;\n  }\n\n  private getQuestionByIdInSchema(schema: any, questionId: string): Array<any> {\n    if (_.isEmpty(schema) || _.isEmpty(questionId)) { return; }\n    if (Array.isArray(schema)) {\n      let question: Array<any>;\n      for (let i = 0; i < schema.length; i++) {\n        if (!_.isEmpty(schema[i])) {\n          question = this.getQuestionByIdInSchema(schema[i], questionId);\n        }\n        if (!_.isEmpty(question)) {\n          break;\n        }\n      }\n      return question;\n    } else if (typeof schema === 'object') {\n      if (this.isQuestionObjectWithId(schema, questionId)) {\n        return schema;\n      } else if (this.isSchemaSubObjectExpandable(schema)) {\n        const toExpand = (schema.pages || schema.sections || schema.questions);\n        return this.getQuestionByIdInSchema(toExpand, questionId);\n      } else {\n        return;\n      }\n    } else {\n      return;\n    }\n  }\n\n  private getQuestionsArrayByQuestionIdInSchema(schema: any, questionId: string): Array<any> {\n    if (_.isEmpty(schema) || _.isEmpty(questionId)) { return; }\n    return this.getQuestionsArrayByQuestionId(schema, schema, questionId);\n  }\n\n\n  private getQuestionsArrayByQuestionId(parent: any, object: any, questionId: string): Array<any> {\n    if (Array.isArray(object)) {\n      let returnedValue: Array<any>;\n      for (let i = 0; i < object.length; i++) {\n        if (!_.isEmpty(object[i])) {\n          returnedValue = this.getQuestionsArrayByQuestionId(object, object[i], questionId);\n        }\n        if (!_.isEmpty(returnedValue)) {\n          break;\n        }\n      }\n\n      return returnedValue;\n    } else if (typeof object === 'object') {\n      if (this.isQuestionObjectWithId(object, questionId)) {\n        return parent;\n      } else if (this.isSchemaSubObjectExpandable(object)) {\n        const toExpand = (object.pages || object.sections || object.questions);\n        return this.getQuestionsArrayByQuestionId(toExpand, toExpand, questionId);\n      } else {\n        return;\n      }\n    } else {\n      return;\n    }\n  }\n\n  // object is page or section or question\n  private isSchemaSubObjectExpandable(object: Object): Boolean {\n    if (typeof object === 'object') {\n      const objectKeys = Object.keys(object);\n      if (_.includes(objectKeys, 'pages') ||\n        _.includes(objectKeys, 'sections') ||\n        _.includes(objectKeys, 'questions')) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private isQuestionObjectWithId(object: Object, id: any): Boolean {\n    return object['id'] === id;\n\n  }\n\n  private getAllPlaceholderObjects(schema: Object): Array<any> {\n    const referencedObjects: Array<any> = [];\n    this.extractPlaceholderObjects(schema, referencedObjects);\n    return referencedObjects;\n  }\n\n  private extractPlaceholderObjects(subSchema: any, objectsArray: Array<Object>): void {\n    if (_.isEmpty(subSchema)) { return; }\n    if (Array.isArray(subSchema)) {\n      for (let i = 0; i < subSchema.length; i++) {\n        if (!_.isEmpty(subSchema[i])) {\n          this.extractPlaceholderObjects(subSchema[i], objectsArray);\n        }\n      }\n    } else if (typeof subSchema === 'object') {\n      if (!_.isEmpty(subSchema.reference)) {\n        objectsArray.push(subSchema);\n      } else if (this.isSchemaSubObjectExpandable(subSchema)) {\n        const toExpand = (subSchema.pages || subSchema.sections || subSchema.questions);\n        this.extractPlaceholderObjects(toExpand, objectsArray);\n      }\n    }\n  }\n\n  private fillPlaceholderObject(placeHolderObject: Object, referenceObject: Object): Object {\n    for (const member in referenceObject) {\n      if (_.isEmpty(placeHolderObject[member])) {\n        placeHolderObject[member] = referenceObject[member];\n      }\n    }\n    return placeHolderObject;\n  }\n\n  private replaceAllPlaceholdersWithActualObjects\n    (keyValReferencedForms: Object, placeHoldersArray: Array<any>): Array<any> {\n    _.each(placeHoldersArray, (placeHolder) => {\n      const referencedObject: Object =\n        this.getReferencedObject(placeHolder.reference, keyValReferencedForms);\n\n      if (_.isEmpty(referencedObject)) {\n        console.error('Form compile: Error finding referenced object', placeHolder.reference);\n      } else {\n        placeHolder = this.fillPlaceholderObject(placeHolder, referencedObject);\n        placeHolder = this.removeExcludedQuestionsFromPlaceholder(placeHolder);\n        delete placeHolder['reference'];\n      }\n    });\n    return placeHoldersArray;\n  }\n\n  private removeObjectFromArray(array: Array<any>, object: Object): void {\n    const indexOfObject = array.indexOf(object);\n    if (indexOfObject === -1) { return; }\n\n    array.splice(indexOfObject, 1);\n  }\n\n  private removeExcludedQuestionsFromPlaceholder(placeHolder: any): Object {\n    if (Array.isArray(placeHolder.reference.excludeQuestions)) {\n      _.each(placeHolder.reference.excludeQuestions, (excludedQuestionId) => {\n        const questionsArray: Array<any> = this.getQuestionsArrayByQuestionIdInSchema(\n          placeHolder, excludedQuestionId);\n\n        if (!Array.isArray(questionsArray)) { return; }\n        const question = this.getQuestionByIdInSchema(questionsArray, excludedQuestionId);\n\n        this.removeObjectFromArray(questionsArray, question);\n      });\n    }\n    return placeHolder;\n  }\n\n  private getReferencedObject(referenceData: any, keyValReferencedForms: Object): Object {\n    if (_.isEmpty(referenceData.form)) {\n      console.error('Form compile: reference missing form attribute', referenceData);\n      return;\n    }\n    if (_.isEmpty(keyValReferencedForms[referenceData.form])) {\n      console.error('Form compile: referenced form alias not found', referenceData);\n      return;\n    }\n    if (!_.isEmpty(referenceData.questionId)) {\n      return this.getQuestionByIdInSchema(\n        keyValReferencedForms[referenceData.form],\n        referenceData.questionId);\n    }\n\n    if (!_.isEmpty(referenceData.page) && !_.isEmpty(referenceData.section)) {\n      return this.getSectionInSchemaByPageLabelBySectionLabel(\n        keyValReferencedForms[referenceData.form],\n        referenceData.page,\n        referenceData.section\n      );\n    }\n    if (!_.isEmpty(referenceData.page)) {\n      return this.getPageInSchemaByLabel(\n        keyValReferencedForms[referenceData.form],\n        referenceData.page\n      );\n    }\n    console.error('Form compile: Unsupported reference type', referenceData.reference);\n  }\n\n  private getReferencedForms(formSchema: any, formSchemasLookupArray: Array<any>): Object {\n    const referencedForms: Array<any> = formSchema.referencedForms;\n\n    if (_.isEmpty(referencedForms)) { return; }\n\n    const keyValReferencedForms: Object = {};\n\n    _.each(referencedForms, (reference: any) => {\n      keyValReferencedForms[reference.alias] =\n        this.findSchemaByName(formSchemasLookupArray, reference.formName);\n    });\n    return keyValReferencedForms;\n  }\n}\n","import { QuestionBase } from './question-base';\nimport { TextQuestionOptions } from './interfaces/text-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class TextInputQuestion extends QuestionBase {\n\n    placeholder: string;\n    constructor(options: TextQuestionOptions) {\n\n        super(options);\n        this.placeholder = options.placeholder || '';\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n}\n","import { TextInputQuestion } from './text-input-question';\nimport { TextAreaQuestionOptions } from './interfaces/text-area-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class TextAreaInputQuestion extends TextInputQuestion {\n    isExpanded: boolean;\n    rows: number;\n\n    constructor(options: TextAreaQuestionOptions) {\n\n        super(options);\n        this.placeholder = options.placeholder || '';\n        this.isExpanded = options.isExpanded || false;\n        this.rows = options.rows || 18;\n        this.renderingType = 'textarea';\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n}\n","import { QuestionBase } from './question-base';\nimport { SelectQuestionOptions } from './interfaces/select-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class SelectQuestion extends QuestionBase {\n\n    options: { key: string, value: string }[];\n    dataSource?: any;\n\n    constructor(options: SelectQuestionOptions) {\n        super(options);\n        this.renderingType = 'select';\n        this.options = options.options || [];\n        this.controlType = AfeControlType.AfeFormControl;\n        this.dataSource = options.dataSource || '';\n    }\n\n}\n","import { QuestionBase } from './question-base';\nimport { UiSelectQuestionOptions } from './interfaces/ui-select-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class UiSelectQuestion extends QuestionBase {\n\n    options: { key: string, value: string }[];\n    searchFunction: Function;\n    resolveFunction: Function;\n    constructor(options: UiSelectQuestionOptions) {\n        super(options);\n        this.renderingType = 'ui-select';\n        this.options = options.options || [];\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n\n}\n","import { QuestionBase } from './question-base';\nimport { DateQuestionOptions } from './interfaces/date-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class DateQuestion extends QuestionBase {\n    showTime = true;\n    showWeeksAdder = false;\n    constructor(options: DateQuestionOptions) {\n        super(options);\n        this.renderingType = 'date';\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n}\n","import { SelectQuestion } from './select-question';\nimport { MultiSelectQuestionOptions } from './interfaces/multi-select-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class MultiSelectQuestion extends SelectQuestion {\n\n    options: { key: string, value: string }[];\n\n    constructor(options: MultiSelectQuestionOptions) {\n        super(options);\n        this.renderingType = 'multi-select';\n        this.options = options.options || [];\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n\n}\n","import { QuestionBase } from '../question-base';\nimport { BaseOptions } from './base-options';\n\nexport abstract class NestedQuestion extends QuestionBase {\n    abstract questions: QuestionBase[];\n    constructor(options: BaseOptions) {\n        super(options);\n    }\n}\n","import { QuestionBase } from './question-base';\nimport { GroupQuestionOptions } from './interfaces/group-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nimport { NestedQuestion } from './interfaces/nested-questions';\n\nexport class QuestionGroup extends NestedQuestion {\n    questions: QuestionBase[];\n    isExpanded = true;\n\n    constructor(options: GroupQuestionOptions) {\n        super(options);\n        this.renderingType = 'group';\n        this.questions = options.questions || [];\n        this.controlType = AfeControlType.AfeFormGroup;\n    }\n}\n","import { QuestionBase } from './question-base';\nimport { RepeatingQuestionOptions } from './interfaces/repeating-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nimport { NestedQuestion } from './interfaces/nested-questions';\n\nexport class RepeatingQuestion extends NestedQuestion {\n    questions: QuestionBase[];\n\n    constructor(options: RepeatingQuestionOptions) {\n        super(options);\n        this.renderingType = 'repeating';\n        this.questions = options.questions || [];\n        this.controlType = AfeControlType.AfeFormArray;\n    }\n}\n","import { QuestionBase } from './question-base';\nimport { CheckboxOptions } from './interfaces/checkbox-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class CheckBoxQuestion extends QuestionBase {\n\n    options: { key: string, value: string }[];\n\n    constructor(options: CheckboxOptions) {\n        super(options);\n        this.renderingType = 'checkbox' || 'radio';\n        this.options = options.options || [];\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n\n}\n","import { QuestionBase } from './question-base';\nimport { FileUploadQuestionOptions } from './interfaces/file-upload-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class FileUploadQuestion extends QuestionBase {\n    showTime = true;\n    showWeeksAdder = false;\n    dataSource?: any;\n    constructor(options: FileUploadQuestionOptions) {\n        super(options);\n        this.renderingType = 'file';\n        this.dataSource = options.dataSource;\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n}\n","import { QuestionBase } from './question-base';\nimport { TestOrderQuestionOptions } from './interfaces/test-order-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class TestOrderQuestion extends QuestionBase {\n    orderType: string;\n    selectableOrders: { concept: string, label: string }[];\n    orderSettingUuid: string;\n    rendering: string;\n    options: any[];\n    constructor(options: TestOrderQuestionOptions) {\n        super(options);\n        this.renderingType = 'select';\n        this.orderType = options.orderType;\n        this.selectableOrders = options.selectableOrders;\n        this.options = options.options;\n        this.orderSettingUuid = options.orderSettingUuid;\n        this.rendering = options.orderSettingUuid;\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n}\n","import { ValidationModel } from './validation.model';\n\nexport class DateValidationModel extends ValidationModel {\n\n  allowFutureDates = false;\n\n  constructor(validations: any) {\n    super(validations);\n\n    this.allowFutureDates = validations.allowFutureDates === 'true' ? true : false;\n  }\n}\n","import { ValidationModel } from './validation.model';\n\nexport class MaxValidationModel extends ValidationModel {\n\n  max: number;\n\n  constructor(validations: any) {\n    super(validations);\n    const max: any = validations.max;\n    this.max = +max;\n  }\n}\n","import { ValidationModel } from './validation.model';\n\nexport class MinValidationModel extends ValidationModel {\n\n  min: number;\n\n  constructor(validations: any) {\n    super(validations);\n    const min: any = validations.min;\n    this.min = +min;\n  }\n}\n","import { Option } from '../question-models/select-option';\nimport { DataSource } from '../question-models/interfaces/data-source';\nimport { Observable, BehaviorSubject, of } from 'rxjs';\n\n\nexport class DummyDataSource implements DataSource {\n  options: Observable<Option[]>;\n  option: Observable<Option>;\n  returnErrorOnNext = false;\n\n  constructor() { }\n\n  resolveSelectedValue(value): Observable<Option> {\n    let selectOptions = this.sampleData();\n\n    selectOptions = selectOptions.map(function (obj) {\n      const option = new Option({\n        label: obj.label,\n        value: obj.concept\n      });\n      return option;\n    });\n\n\n    selectOptions = selectOptions.filter(\n      option => option.value === value\n    );\n\n    const test: BehaviorSubject<any> = new BehaviorSubject<any>([]);\n    if (!this.returnErrorOnNext) {\n      test.next(selectOptions[0]);\n    } else {\n      test.error(new Error('Error loading Options'));\n    }\n\n    return test.asObservable();\n  }\n  fileUpload(url) {\n    return of({ image: '' });\n  }\n  fetchFile(url) {\n    return of({ image: '' });\n  }\n  searchOptions(searchText): Observable<Option[]> {\n    let selectOptions = this.sampleData();\n\n    selectOptions = selectOptions.map(function (obj) {\n      const option = new Option({\n        label: obj.label,\n        value: obj.concept\n      });\n      return option;\n    });\n\n\n    selectOptions = selectOptions.filter(\n      option => option.label.indexOf(searchText) !== -1\n    );\n\n    const test: BehaviorSubject<any> = new BehaviorSubject<any>([]);\n    if (!this.returnErrorOnNext) {\n      test.next(selectOptions);\n    } else {\n      test.error(new Error('Error loading Options'));\n    }\n\n    return test.asObservable();\n  }\n\n  sampleData(): any {\n    return [\n      {\n        concept: 'a899e0ac-1350-11df-a1f1-0026b9348838',\n        label: 'None'\n      },\n      {\n        concept: 'a8ad1276-1350-11df-a1f1-0026b9348838',\n        label: 'Breathlessness'\n      },\n      {\n        concept: 'a892e4b4-1350-11df-a1f1-0026b9348838',\n        label: 'Chest pain'\n      },\n      {\n        concept: 'a8afc8b8-1350-11df-a1f1-0026b9348838',\n        label: 'Cough = 2 weeks'\n      },\n      {\n        concept: 'd7adae14-c386-49cc-8f7c-765d8ceec566',\n        label: 'Fever for = 2 weeks'\n      },\n      {\n        concept: '3f57aafc-7162-41da-a51b-6a804cb6f5e8',\n        label: 'New exposure to household contact with TB'\n      },\n      {\n        concept: 'a89807f0-1350-11df-a1f1-0026b9348838',\n        label: 'Noticeable Weight loss'\n      },\n      {\n        concept: 'e1862fef-68ed-4df4-90dd-a00152f719aa',\n        label: 'Night sweats = 2 weeks'\n      },\n      {\n        concept: 'a8ad462e-1350-11df-a1f1-0026b9348838',\n        label: 'Abdomen'\n      },\n      {\n        concept: 'f218c60e-4b54-475a-a4fa-facab9216da8',\n        label: 'Groin'\n      },\n      {\n        concept: 'a8a774b0-1350-11df-a1f1-0026b9348838',\n        label: 'Joints'\n      },\n      {\n        concept: '4639388c-ee31-4dcf-abb4-ad71253493bb',\n        label: 'Neck Kw'\n      }\n\n    ];\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport * as _ from 'lodash';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\n@Injectable()\nexport class HistoricalEncounterDataService {\n\n  dataSources: any = {};\n  constructor() {\n  }\n\n  registerEncounters(name: string, encounters: any) {\n    const encStore: any = {\n      data: [],\n      getValue: (key: string, index = 0): any => {\n        const pathArray = key.split('.');\n        if (pathArray.length > 0) {\n          return this.getFirstValue(pathArray, encStore.data[index]);\n        }\n        return encStore.data[index][key];\n      },\n      getAllObjects: () => {\n        return encStore.data;\n      },\n      getSingleObject: (index = 0) => {\n        return encStore.data[index];\n      }\n    };\n\n    if (_.isArray(encounters)) {\n      const group: Array<any> = [];\n      _.each(encounters, (encounter) => {\n        group.push(this._transformEncounter(encounter));\n      });\n\n      // Sort them in reverse chronological order\n      encStore.data = _.sortBy(group, 'encounterDatetime').reverse();\n    } else {\n      // Assume a single openmrs rest encounter object.\n      encStore.data.push(this._transformEncounter(encounters));\n    }\n\n    this.putObject(name, encStore);\n\n  }\n\n  putObject(name, object): void {\n    this.dataSources[name] = object;\n  }\n\n  getObject(name: string): any {\n    return this.dataSources[name] || null;\n  }\n\n  getFirstValue(path: Array<string>, object: any): any {\n\n    const answers = [];\n\n    this.getAllValues(path, object, answers);\n\n    if (answers.length > 0) {\n      return {\n        value: answers[0],\n        valueDate: moment(object.encounterDatetime).format('ll')\n      };\n    }\n\n  }\n\n  getAllValues(path, object, answers) {\n    if (_.isNil(object)) {\n      return;\n    }\n\n    if (path.length <= 1) {\n      if (!_.isNil(object[path[0]])) {\n        answers.push(object[path[0]]);\n      }\n      return;\n    }\n\n    const newpath = path.splice(1);\n    const key = path[0];\n\n    if (_.isArray(object[key]) && object[key].length > 0) {\n      _.each(object[key], (childObject) => {\n        this.getAllValues(newpath.slice(0), childObject, answers);\n      });\n    } else {\n      this.getAllValues(newpath.slice(0), object[key], answers);\n    }\n  }\n\n  private _transformEncounter(encounter: any) {\n    if (_.isNil(encounter)) {\n      return;\n    }\n    // Transform encounter Level details to key value pairs.\n    const prevEncounter: any = {\n      encounterDatetime: encounter.encounterDatetime\n    };\n\n    if (encounter.location && encounter.location.uuid) {\n      prevEncounter.location = encounter.location.uuid;\n    }\n\n    if (encounter.patient && encounter.patient.uuid) {\n      prevEncounter.patient = encounter.patient.uuid;\n    }\n\n    if (encounter.form && encounter.form.uuid) {\n      prevEncounter.form = encounter.form.uuid;\n    }\n\n    if (encounter.encounterType && encounter.encounterType.uuid) {\n      prevEncounter.encounterType = encounter.encounterType.uuid;\n    }\n\n    if (encounter.provider) {\n      const provider = encounter.provider;\n      prevEncounter.provider = provider.uuid;\n    }\n\n    // Deal with obs.\n    if (encounter.obs) {\n      const processedObs: any = this._transformObs(encounter.obs);\n\n      // add in individual processed obs to prevEncounter\n      _.extend(prevEncounter, processedObs);\n    }\n\n    return prevEncounter;\n  }\n\n  private _transformObs(obs: any): any {\n\n    if (!obs) {\n      return null;\n    }\n\n    const obsRep: any = {};\n    if (_.isArray(obs)) {\n      _.each(obs, (singleObs) => {\n        this._augumentObs(obsRep, this._transformObs(singleObs));\n      });\n      return obsRep;\n    } else if (obs.groupMembers) {\n      const group: any = {};\n      _.each(obs.groupMembers, (member) => {\n        this._augumentObs(group, this._transformObs(member));\n      });\n\n      // Handle already existing data\n      if (obsRep[obs.concept.uuid] && _.isArray(obsRep[obs.concept.uuid])) {\n        obsRep[obs.concept.uuid].push(group);\n      } else {\n        obsRep[obs.concept.uuid] = [group];\n      }\n      return obsRep;\n    } else {\n      if (obs.value instanceof Object) {\n        obsRep[obs.concept.uuid] = obs.value.uuid;\n      } else {\n        obsRep[obs.concept.uuid] = obs.value;\n      }\n      return obsRep;\n    }\n\n  }\n\n  private _augumentObs(existing: any, toAdd: any): any {\n    for (const key in toAdd) {\n      if (_.has(existing, key)) {\n        // check if not an array yet\n        if (!_.isArray(existing[key])) {\n          const temp = existing[key];\n          existing[key] = [temp];\n        }\n\n        // Check whether the incoming is array (for group members)\n        if (_.isArray(toAdd[key])) {\n          Array.prototype.push.apply(existing[key], toAdd[key]);\n        } else {\n          existing[key].push(toAdd[key]);\n        }\n      } else {\n        existing[key] = toAdd[key];\n      }\n    }\n    return existing;\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HistoricalEncounterDataService } from '../services/historical-encounter-data.service';\nimport { JsExpressionHelper } from './js-expression-helper';\nimport { Runnable, ExpressionRunner } from '../expression-runner/expression-runner';\nimport { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\n\n@Injectable()\nexport class HistoricalHelperService {\n\n  constructor() {\n  }\n\n  public evaluate(expr: string, dataSources: any): any {\n    const HD = new HistoricalEncounterDataService();\n    HD.registerEncounters('prevEnc', dataSources['rawPrevEnc']);\n    const deps: any = {\n      HD: HD\n    };\n\n    const helper = new JsExpressionHelper();\n    const control: AfeFormControl = new AfeFormControl();\n    const runner: ExpressionRunner = new ExpressionRunner();\n    const runnable: Runnable = runner.getRunnable(expr, control, helper.helperFunctions, deps);\n\n    return runnable.run();\n  }\n\n}\n","import * as _ from 'lodash';\n\nimport { TextInputQuestion } from '../question-models/text-input-question';\nimport { TextAreaInputQuestion } from '../question-models/text-area-input-question';\nimport { SelectQuestion } from '../question-models/select-question';\nimport { UiSelectQuestion } from '../question-models/ui-select-question';\nimport { DateQuestion } from '../question-models/date-question';\nimport { MultiSelectQuestion } from '../question-models/multi-select-question';\nimport { QuestionGroup } from '../question-models/group-question';\nimport { RepeatingQuestion } from '../question-models/repeating-question';\nimport { QuestionBase } from '../question-models/question-base';\nimport { FileUploadQuestion } from '../question-models/file-upload-question';\nimport { TestOrderQuestion } from '../question-models/test-order-question';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nimport { ValidationModel } from '../question-models/validation.model';\nimport { DateValidationModel } from '../question-models/date-validation.model';\nimport { MaxValidationModel } from '../question-models/max-validation.model';\nimport { MinValidationModel } from '../question-models/min-validation.model';\nimport { JsExpressionValidationModel } from '../question-models/js-expression-validation.model';\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\nimport { DummyDataSource } from '../data-sources/dummy-data-source';\nimport { HistoricalHelperService } from '../helpers/historical-expression-helper-service';\nimport { Form } from './form';\nimport { CheckBoxQuestion } from '../question-models/models';\n\nexport class QuestionFactory {\n  dataSources: any = {};\n  historicalHelperService: HistoricalHelperService = new HistoricalHelperService();\n  constructor() {\n  }\n\n  createQuestionModel(formSchema: any, form?: Form): QuestionBase {\n    if (form) {\n      const dataSources = form.dataSourcesContainer.dataSources;\n      this.dataSources = dataSources;\n    }\n    return this.toFormQuestionModel(formSchema);\n  }\n\n  toSelectQuestion(schemaQuestion: any): SelectQuestion {\n    const question = new SelectQuestion({ options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.options = schemaQuestion.questionOptions.answers.map(function (obj) {\n      return {\n        label: obj.label,\n        value: obj.concept\n      };\n    });\n\n    const options: any = question.options;\n    options.splice(0, 0, {\n      label: '',\n      value: ''\n    });\n\n    question.renderingType = schemaQuestion.questionOptions.rendering;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toNumericQuestion(schemaQuestion: any): TextInputQuestion {\n    const question = new TextInputQuestion({ placeholder: '', type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'number';\n    question.placeholder = schemaQuestion.questionOptions.placeholder;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.placeholder = schemaQuestion.questionOptions.placeholder || '';\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toNumberQuestion(schemaQuestion: any): TextInputQuestion {\n    const question = new TextInputQuestion({ placeholder: '', type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'number';\n    question.placeholder = schemaQuestion.questionOptions.placeholder || '';\n    question.extras = schemaQuestion;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    question.validators = this.addValidators(schemaQuestion);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toDateQuestion(schemaQuestion: any): DateQuestion {\n    if (schemaQuestion.type === 'encounterDatetime') {\n      return this.toEncounterDatetimeQuestion(schemaQuestion);\n    }\n    const question = new DateQuestion({ type: '', key: '' });\n    question.renderingType = 'date';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.showTime = schemaQuestion.questionOptions.showTime as boolean;\n    question.showWeeksAdder = schemaQuestion.questionOptions.weeksList ? true : false;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toEncounterDatetimeQuestion(schemaQuestion: any): DateQuestion {\n    const question = new DateQuestion({ type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.renderingType = 'date';\n    question.key = schemaQuestion.id;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.showWeeksAdder = schemaQuestion.questionOptions.weeksList ? true : false;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n    question.showTime = true;\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toCheckBoxQuestion(schemaQuestion: any): CheckBoxQuestion {\n    const question = new CheckBoxQuestion({ options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.extras = schemaQuestion;\n    question.options = schemaQuestion.questionOptions.answers.map((obj) => {\n      return {\n        label: obj.label,\n        value: obj.concept\n      };\n    });\n    question.options.splice(0, 0);\n\n    question.renderingType = schemaQuestion.questionOptions.rendering;\n    const mappings: any = {\n      label: 'label',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n\n  }\n\n  toMultiCheckboxQuestion(schemaQuestion: any): MultiSelectQuestion {\n    const question = new MultiSelectQuestion({ renderType: '', options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.options = schemaQuestion.questionOptions.answers.map(function (obj) {\n      return {\n        label: obj.label,\n        value: obj.concept\n      };\n    });\n    question.validators = this.addValidators(schemaQuestion);\n    question.dataSource = new DummyDataSource();\n    question.extras = schemaQuestion;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toTextAreaQuestion(schemaQuestion: any): TextAreaInputQuestion {\n    const question = new TextAreaInputQuestion({\n      isExpanded: false, rows: 18,\n      placeholder: '', type: '', key: ''\n    });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.placeholder = schemaQuestion.questionOptions.placeholder;\n    question.isExpanded = schemaQuestion.isExpanded;\n    question.rows = schemaQuestion.questionOptions.rows;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.placeholder = schemaQuestion.questionOptions.placeholder || '';\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toTextQuestion(schemaQuestion: any): TextInputQuestion {\n    const question = new TextInputQuestion({ placeholder: '', type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'text';\n    question.placeholder = schemaQuestion.questionOptions.placeholder;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.placeholder = schemaQuestion.questionOptions.placeholder || '';\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toFileUploadQuestion(schemaQuestion: any): FileUploadQuestion {\n    const question = new FileUploadQuestion({ type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'file';\n    question.dataSource = 'file';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toDrugQuestion(schemaQuestion: any): SelectQuestion {\n    const question = new SelectQuestion({ options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = 'drug';\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toProblemQuestion(schemaQuestion: any): SelectQuestion {\n    const question = new SelectQuestion({ options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = 'problem';\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toConceptAnswerSelect(schemaQuestion: any): SelectQuestion {\n    const question = new SelectQuestion({ options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = schemaQuestion.questionOptions.dataSource || 'conceptAnswers';\n    question.dataSourceOptions = {\n      concept: schemaQuestion.questionOptions.concept\n    };\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toRepeatingQuestion(schemaQuestion: any): RepeatingQuestion {\n    const question = new RepeatingQuestion({ questions: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.questions = this.getChildrenQuestionModels(schemaQuestion.questions);\n    question.key = schemaQuestion.id;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n\n    if (schemaQuestion.type === 'testOrder') {\n      const testOrder = this.toTestOrderQuestion(schemaQuestion);\n      const orders = []; orders.push(testOrder);\n      question.questions = orders;\n    }\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toGroupQuestion(schemaQuestion: any): QuestionGroup {\n    const question = new QuestionGroup({ questions: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.questions = this.getChildrenQuestionModels(schemaQuestion.questions);\n    question.key = schemaQuestion.id;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toPageQuestion(schemaQuestion: any): QuestionGroup {\n    const question = new QuestionGroup({ questions: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.label;\n    question.renderingType = 'page';\n    question.controlType = AfeControlType.None;\n    question.questions = [];\n    schemaQuestion.sections.forEach(element => {\n      question.questions.push(this.toSectionQuestion(element));\n    });\n    return question;\n  }\n\n  toFormQuestionModel(schemaQuestion: any): QuestionGroup {\n    const question = new QuestionGroup({ questions: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.label;\n    question.renderingType = 'form';\n    question.controlType = AfeControlType.AfeFormGroup;\n    question.extras = schemaQuestion;\n    question.questions = [];\n    schemaQuestion.pages.forEach(element => {\n      question.questions.push(this.toPageQuestion(element));\n    });\n\n    return question;\n  }\n\n  toSectionQuestion(schemaQuestion: any): QuestionGroup {\n    const question = new QuestionGroup({ questions: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.label;\n    question.renderingType = 'section';\n    question.controlType = AfeControlType.None;\n    question.isExpanded = schemaQuestion.isExpanded === 'true' ? true : false;\n    question.questions = this.getSchemaQuestions(schemaQuestion.questions);\n    return question;\n  }\n\n  toPersonAttributeQuestion(schemaQuestion: any): UiSelectQuestion {\n    const question = new UiSelectQuestion({\n      options: [], type: '', key: '', searchFunction: function () { },\n      resolveFunction: function () {\n\n      }\n    });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = 'personAttribute';\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toEncounterProviderQuestion(schemaQuestion: any): UiSelectQuestion {\n    const question = new UiSelectQuestion({\n      options: [], type: '', key: '', searchFunction: function () { },\n      resolveFunction: function () {\n\n      }\n    });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = 'provider';\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toFieldSetQuestion(schemaQuestion: any): QuestionGroup {\n    const toReturn = this.toGroupQuestion(schemaQuestion);\n    toReturn.renderingType = 'field-set';\n    return toReturn;\n  }\n\n  toEncounterLocationQuestion(schemaQuestion: any): UiSelectQuestion {\n    const question = new UiSelectQuestion({\n      options: [], type: '', key: '', searchFunction: function () { },\n      resolveFunction: function () {\n\n      }\n    });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = schemaQuestion.type;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = 'location';\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toTestOrderQuestion(schemaQuestion: any): TestOrderQuestion {\n\n    const question = new TestOrderQuestion({\n      type: '', key: '', orderType: '', selectableOrders: [],\n      orderSettingUuid: '', label: '', rendering: ''\n    });\n\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.options = schemaQuestion.questionOptions.selectableOrders.map(function (obj) {\n      return {\n        label: obj.label,\n        value: obj.concept\n      };\n    });\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n    this.copyProperties(mappings, schemaQuestion, question);\n    return question;\n  }\n\n  getSchemaQuestions(schema: any): any {\n    const listQuestions = new Array();\n    this.getQuestions(schema, listQuestions);\n    return listQuestions;\n  }\n\n  getQuestions(schema: any, foundArray: any): any {\n    if (!Array.isArray(foundArray)) {\n      foundArray = [];\n    }\n    if (Array.isArray(schema)) {\n\n      for (const property in schema) {\n        if (schema.hasOwnProperty(property)) {\n          this.getQuestions(schema[property], foundArray);\n        }\n      }\n    }\n\n    if (schema && !Array.isArray(schema) && typeof schema === 'object') {\n      if (schema.questionOptions) {\n        if (schema.questionOptions.rendering === 'group' ||\n          schema.questionOptions.rendering === 'repeating') {\n          // schema.questions = this.getGroupMembers(schema.questions);\n          foundArray.push(this.toModel(schema, schema.questionOptions.rendering));\n        } else if (schema.questionOptions.rendering === 'field-set') {\n        } else {\n          foundArray.push(this.toModel(schema, schema.questionOptions.rendering));\n        }\n      } else {\n        for (const o in schema) {\n          if (schema.hasOwnProperty(o)) {\n            this.getQuestions(schema[o], foundArray);\n          }\n        }\n      }\n    }\n\n  }\n\n  getChildrenQuestionModels(schema: any): any {\n    const children = [];\n    this.getQuestions(schema, children);\n    return children;\n\n  }\n\n  toModel(schema: any, renderType: string): any {\n    if (renderType === 'ui-select-extended') {\n      renderType = schema.type;\n    }\n    if (!schema.id) {\n      schema['id'] = this.generateId(10);\n    }\n\n    if (schema.questionOptions &&\n      (schema.questionOptions.showDate === true ||\n        schema.questionOptions.showDate === 'true')) {\n      schema = this.convertOldVersionComplexObsQuestionToNewVersion(schema);\n      renderType = 'field-set';\n    }\n\n    switch (renderType) {\n      case 'select':\n        return this.toSelectQuestion(schema);\n      case 'numeric':\n        return this.toNumericQuestion(schema);\n      case 'number':\n        return this.toNumberQuestion(schema);\n      case 'encounterDatetime':\n        return this.toEncounterDatetimeQuestion(schema);\n      case 'date':\n        return this.toDateQuestion(schema);\n      case 'multiCheckbox':\n        return this.toMultiCheckboxQuestion(schema);\n      case 'drug':\n        return this.toDrugQuestion(schema);\n      case 'problem':\n        return this.toProblemQuestion(schema);\n      case 'group':\n        return this.toGroupQuestion(schema);\n      case 'field-set':\n        return this.toFieldSetQuestion(schema);\n      case 'repeating':\n        return this.toRepeatingQuestion(schema);\n      case 'personAttribute':\n        return this.toPersonAttributeQuestion(schema);\n      case 'text':\n        return this.toTextQuestion(schema);\n      case 'textarea':\n        return this.toTextAreaQuestion(schema);\n      case 'textarea':\n        return this.toTextAreaQuestion(schema);\n      case 'select-concept-answers':\n        return this.toConceptAnswerSelect(schema);\n      case 'encounterLocation':\n        return this.toEncounterLocationQuestion(schema);\n      case 'encounterDatetime':\n        return this.toEncounterDatetimeQuestion(schema);\n      case 'encounterProvider':\n        return this.toEncounterProviderQuestion(schema);\n      case 'radio':\n        return this.toCheckBoxQuestion(schema);\n      case 'checkbox':\n        return this.toCheckBoxQuestion(schema);\n        case 'encounterProvider':\n        return this.toEncounterProviderQuestion(schema);\n      default:\n        console.warn('New Schema Question Type found.........' + renderType);\n        return this.toTextQuestion(schema);\n    }\n\n  }\n\n  convertOldVersionComplexObsQuestionToNewVersion(schemaQuestion: any) {\n    const converted: any = {};\n    converted.type = 'complex-obs';\n    converted.label = schemaQuestion.label;\n    converted.id = 'complex_' + schemaQuestion.id;\n    converted.questionOptions = {};\n    converted.questionOptions.concept = schemaQuestion.questionOptions.concept;\n    converted.questionOptions.rendering = 'field-set';\n    converted.questions = [];\n    converted.validators = [];\n\n    const mainField: any = JSON.parse(JSON.stringify(schemaQuestion));\n    mainField.type = 'complex-obs-child';\n    delete mainField.questionOptions.showDate;\n    delete mainField.questionOptions.shownDateOptions;\n    mainField.questionOptions.obsField = 'value';\n\n    const dateField: any = {};\n    dateField.type = 'complex-obs-child';\n    dateField.label = 'Date of ' + mainField.label;\n    dateField.id = 'date_' + mainField.id;\n    dateField.questionOptions = {};\n    dateField.questionOptions.concept = schemaQuestion.questionOptions.concept;\n    dateField.questionOptions.rendering = 'date';\n    dateField.questionOptions.obsField = 'obsDatetime';\n    const dateOptions: any = (Object as any).assign({},\n    schemaQuestion.questionOptions.shownDateOptions);\n    dateField.validators = dateOptions.validators;\n    dateField.hide = dateOptions.hide;\n\n\n    converted.questions.push(mainField);\n    converted.questions.push(dateField);\n\n    return converted;\n  }\n\n  copyProperties(mappings: any, source: any, destination: QuestionBase) {\n\n    for (const property in source) {\n      if (mappings.hasOwnProperty(property) && destination.hasOwnProperty(mappings[property])) {\n        destination[mappings[property]] = source[property];\n      }\n    }\n  }\n\n  addValidators(schemaQuestion: any): Array<ValidationModel> {\n\n    const validators: Array<ValidationModel> = [];\n\n    if (schemaQuestion.validators) {\n\n      // TODO - add more validator types\n      _.forEach(schemaQuestion.validators, (validator: any) => {\n        switch (validator.type) {\n          case 'date':\n            validators.push(new DateValidationModel(validator));\n            break;\n          case 'js_expression':\n            validators.push(new JsExpressionValidationModel(validator));\n            break;\n          case 'conditionalAnswered':\n            validators.push(new ConditionalValidationModel(validator));\n            break;\n          default:\n            validators.push(new ValidationModel(validator));\n            break;\n        }\n      });\n    }\n\n    const questionOptions = schemaQuestion.questionOptions;\n    const renderingType = questionOptions ? questionOptions.rendering : '';\n    switch (renderingType) {\n      case 'number':\n\n        if (questionOptions.max && questionOptions.min) {\n          validators.push(new MaxValidationModel({\n            type: 'max',\n            max: questionOptions.max\n          }));\n          validators.push(new MinValidationModel({\n            type: 'min',\n            min: questionOptions.min\n          }));\n        }\n\n        break;\n      default:\n        break;\n    }\n\n    // add conditional required validators\n    if (typeof schemaQuestion.required === 'object') {\n\n      const required: any = schemaQuestion.required;\n\n      if (required.type === 'conditionalRequired') {\n\n        validators.push(new ConditionalValidationModel({\n          referenceQuestionId: required.referenceQuestionId,\n          referenceQuestionAnswers: required.referenceQuestionAnswers,\n          type: required.type,\n          message: required.message,\n        }));\n      }\n    }\n\n    return validators;\n  }\n\n  addHistoricalExpressions(schemaQuestion: any, question: QuestionBase): any {\n    if (schemaQuestion.historicalExpression && schemaQuestion.historicalExpression.length > 0) {\n      question.setHistoricalValue(true);\n      if (schemaQuestion.showHistoricalEncounterDate !== undefined) {\n        question.showHistoricalEncounterDate(\n          (schemaQuestion.showHistoricalEncounterDate === 'true'));\n      } else {\n        question.showHistoricalEncounterDate();\n      }\n      const origValue = this.historicalHelperService.evaluate(schemaQuestion.historicalExpression,\n        this.dataSources);\n      question.historicalDataValue = origValue;\n      if (schemaQuestion.historicalPrepopulate) {\n        question.defaultValue = origValue;\n      }\n    }\n  }\n\n  addCalculatorProperty(schemaQuestion: any, question: QuestionBase): any {\n\n    if (schemaQuestion.questionOptions &&\n      typeof schemaQuestion.questionOptions.calculate === 'object') {\n      question.calculateExpression = schemaQuestion.questionOptions.calculate.calculateExpression;\n    }\n\n  }\n\n  addAlertProperty(schemaQuestion: any, question: QuestionBase): any {\n    if (schemaQuestion.alert) {\n      question.alert = schemaQuestion.alert;\n    }\n    // if (typeof schemaQuestion.message === 'object') {\n    //   if (schemaQuestion.message.alertWhenExpression) {\n    //     question.message = schemaQuestion.message.alertWhenExpression;\n    //   }\n    // }\n  }\n\n  addDisableOrHideProperty(schemaQuestion: any, question: QuestionBase): any {\n\n    if (!!schemaQuestion.disable) {\n      question.disable = schemaQuestion.disable;\n    }\n\n    if (typeof schemaQuestion.disable === 'object') {\n      question.disable = schemaQuestion.disable.disableWhenExpression;\n    }\n\n    if (!!schemaQuestion.hide) {\n      question.hide = schemaQuestion.hide;\n    }\n    if (typeof schemaQuestion.hide === 'object') {\n\n      if (schemaQuestion.hide.hideWhenExpression) {\n        question.hide = schemaQuestion.hide.hideWhenExpression;\n      }\n    }\n  }\n  private generateId(x) {\n    let s = '_';\n    while (s.length < x && x > 0) {\n      const r = Math.random();\n      s += (r < 0.1 ? Math.floor(r * 100) :\n        String.fromCharCode(Math.floor(r * 26) + (r > 0.5 ? 97 : 65)));\n    }\n    return '_' + s;\n  }\n}\n","import * as _ from 'lodash';\n\nimport { FormFactory } from './form.factory';\nimport { QuestionFactory } from './question.factory';\nimport { DataSources } from '../data-sources/data-sources';\nimport { NodeBase, GroupNode, LeafNode, ArrayNode } from './form-node';\nimport { QuestionBase } from '../question-models/question-base';\nimport { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { AfeFormArray } from '../../abstract-controls-extension/afe-form-array';\n\nexport class Form {\n  public rootNode: GroupNode;\n  public valueProcessingInfo: any = {};\n    public existingOrders: any = {};\n  private _dataSourcesContainer: DataSources;\n  private _showErrors = false;\n  constructor(public schema: any, public formFactory: FormFactory, public questionFactory: QuestionFactory) {\n    this._dataSourcesContainer = new DataSources();\n  }\n\n  get dataSourcesContainer(): DataSources {\n    return this._dataSourcesContainer;\n  }\n\n  searchNodeByPath(node: GroupNode, path, found: Array<NodeBase>) {\n\n    const children: NodeBase = node.children;\n\n    for (const key in children) {\n\n      if (children.hasOwnProperty(key)) {\n\n        const child: NodeBase = children[key];\n\n        if (child instanceof GroupNode) {\n\n          if (path === child.path) {\n            found.push(child);\n            return found;\n          }\n\n          this.searchNodeByPath(child, path, found);\n        } else if (child instanceof LeafNode) {\n\n          if (path === child.path) {\n            found.push(child);\n            return found;\n          }\n        } else if (child instanceof ArrayNode) {\n\n          if (path === child.path) {\n            found.push(child);\n            return found;\n          }\n\n          const aChild: ArrayNode = child as ArrayNode;\n\n          aChild.children.forEach(aChildNode => {\n            this.searchNodeByPath(aChildNode, path, found);\n          });\n        }\n      }\n    }\n\n    return found;\n  }\n\n  searchNodeByQuestionId(questionId: string, questionType?: string): Array<NodeBase> {\n    const found = [];\n    if (questionType) {\n      this.searchNodeByQuestionType(this.rootNode, questionType, found);\n    } else {\n      this.findNodesByQuestionId(this.rootNode, questionId, found);\n    }\n    return found;\n  }\n\n  searchNodeByQuestionType(rootNode: any, questionType: string , found: Array<NodeBase>) {\n\n    if (rootNode instanceof GroupNode) {\n      const nodeAsGroup = rootNode as GroupNode;\n      // tslint:disable-next-line:forin\n      for (const o in nodeAsGroup.children) {\n        this.searchNodeByQuestionType(nodeAsGroup.children[o], questionType, found);\n      }\n    }\n\n    if (rootNode instanceof ArrayNode) {\n      const nodeAsArray = rootNode as ArrayNode;\n\n      nodeAsArray.children.forEach(node => {\n        this.searchNodeByQuestionType(node, questionType, found);\n      });\n    }\n\n    if (rootNode instanceof LeafNode) {\n      const questionBase: QuestionBase = rootNode.question;\n\n      if (questionBase.extras && questionBase.extras.type && questionBase.extras.type === questionType) {\n        found.push(rootNode);\n      }\n    }\n  }\n\n  private findNodesByQuestionId(rootNode: NodeBase, questionId: string,\n    results: Array<NodeBase>) {\n    if (rootNode.question.key === questionId) {\n      results.push(rootNode);\n    }\n\n    if (rootNode instanceof GroupNode) {\n      const nodeAsGroup = rootNode as GroupNode;\n      // tslint:disable-next-line:forin\n      for (const o in nodeAsGroup.children) {\n        this.findNodesByQuestionId(nodeAsGroup.children[o], questionId, results);\n      }\n    }\n\n    if (rootNode instanceof ArrayNode) {\n      const nodeAsArray = rootNode as ArrayNode;\n\n      nodeAsArray.children.forEach(node => {\n        this.findNodesByQuestionId(node, questionId, results);\n      });\n    }\n  }\n\n\n\n  get valid() {\n\n    return this.rootNode.control.valid;\n  }\n\n  set showErrors(show: boolean) {\n    this._showErrors = show;\n  }\n\n  get showErrors() {\n    return this._showErrors;\n  }\n\n  markInvalidControls(node: GroupNode, invalidControlNodes?: any) {\n\n\n    const children: NodeBase = node.children;\n\n    for (const key in children) {\n\n      if (children.hasOwnProperty(key)) {\n\n        const child: NodeBase = children[key];\n\n        if (child instanceof GroupNode) {\n\n          this.markInvalidControls(child, invalidControlNodes);\n        } else if (child instanceof LeafNode) {\n\n          const questionBase: QuestionBase = (child as LeafNode).question;\n\n          if (questionBase.key && questionBase.key.length > 0) {\n\n            const c: AfeFormControl | AfeFormArray = child.control as AfeFormControl | AfeFormArray;\n\n            if (!c.valid && !c.disabled) {\n              if (invalidControlNodes) {\n                invalidControlNodes.push(child);\n              }\n\n              c.markAsTouched();\n            }\n          }\n        } else if (child instanceof ArrayNode) {\n          const arrayNode: ArrayNode = child as ArrayNode;\n\n          if (arrayNode && arrayNode.children && arrayNode.children.length > 0) {\n\n            _.forEach(arrayNode.children, (groupNode: any) => {\n              this.markInvalidControls(groupNode, invalidControlNodes);\n            });\n          }\n        }\n      }\n    }\n\n    return invalidControlNodes;\n  }\n\n  updateHiddenDisabledStateForAllControls() {\n    this._updateHiddenDisabledStateForAllControls(this.rootNode);\n  }\n\n\n  updateAlertsForAllControls() {\n    this._updateAlertsForAllControls(this.rootNode);\n  }\n\n  private _updateAlertsForAllControls(rootNode: NodeBase) {\n    if (rootNode.control) {\n      if ((rootNode.control as any).updateAlert) {\n        (rootNode.control as any).updateAlert();\n      }\n    }\n\n    if (rootNode instanceof GroupNode) {\n      const nodeAsGroup = rootNode as GroupNode;\n      // tslint:disable-next-line:forin\n      for (const o in nodeAsGroup.children) {\n        this._updateAlertsForAllControls(nodeAsGroup.children[o]);\n      }\n    }\n\n    if (rootNode instanceof ArrayNode) {\n      const nodeAsArray = rootNode as ArrayNode;\n\n      nodeAsArray.children.forEach(node => {\n        this._updateAlertsForAllControls(node);\n      });\n    }\n\n  }\n  private _updateHiddenDisabledStateForAllControls(rootNode: NodeBase) {\n    if (rootNode.control) {\n      if ((rootNode.control as any).updateDisabledState) {\n        (rootNode.control as any).updateDisabledState();\n      }\n\n      if ((rootNode.control as any).updateHiddenState) {\n        (rootNode.control as any).updateHiddenState();\n      }\n    }\n\n    if (rootNode instanceof GroupNode) {\n      const nodeAsGroup = rootNode as GroupNode;\n      // tslint:disable-next-line:forin\n      for (const o in nodeAsGroup.children) {\n        this._updateHiddenDisabledStateForAllControls(nodeAsGroup.children[o]);\n      }\n    }\n\n    if (rootNode instanceof ArrayNode) {\n      const nodeAsArray = rootNode as ArrayNode;\n\n      nodeAsArray.children.forEach(node => {\n        this._updateHiddenDisabledStateForAllControls(node);\n      });\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n// import { AbstractControl } from '@angular/forms';\n\nimport { LeafNode, GroupNode, ArrayNode, NodeBase } from './form-node';\nimport { QuestionBase, NestedQuestion, RepeatingQuestion, QuestionGroup\n} from '../question-models/models';\nimport { FormControlService } from './form-control.service';\nimport { QuestionFactory } from './question.factory';\nimport { AfeFormGroup, AfeControlType, AfeFormArray\n} from '../../abstract-controls-extension';\nimport { ControlRelationsFactory } from './control-relations.factory';\nimport { Validations } from '../validators/validations';\n\nimport { Form } from './form';\n\n@Injectable()\nexport class FormFactory {\n    public hd: any = {\n        getValue: () => {\n            return 20;\n        }\n    };\n\n    constructor(public controlService: FormControlService,\n        public questionFactroy: QuestionFactory, public controlRelationsFactory: ControlRelationsFactory) {\n    }\n\n    createForm(schema: any, dataSource?: any): Form {\n        const form: Form = new Form(schema, this, this.questionFactroy);\n        if (dataSource) {\n            for (const key in dataSource) {\n                if (dataSource.hasOwnProperty(key)) {\n                    form.dataSourcesContainer.registerDataSource(key, dataSource[key], false);\n                }\n            }\n        }\n        const question = this.questionFactroy.createQuestionModel(schema, form);\n        form.rootNode = this.createNode(question, null, null, form) as GroupNode;\n\n        this.buildRelations(form.rootNode);\n        form.updateHiddenDisabledStateForAllControls();\n        form.updateAlertsForAllControls();\n        return form;\n    }\n\n    buildRelations(rootNode: GroupNode) {\n\n        Validations.JSExpressionValidatorsEnabled = false;\n        this.controlRelationsFactory.buildRelations(rootNode);\n\n        // enable js expression validations\n        Validations.JSExpressionValidatorsEnabled = true;\n    }\n\n    createNode(question: QuestionBase | NestedQuestion,\n        parentNode?: GroupNode, parentControl?: AfeFormGroup, form?: Form): NodeBase {\n        let node: NodeBase = null;\n        if (question instanceof NestedQuestion) {\n            if (question instanceof RepeatingQuestion) {\n                node = this.createArrayNode(question, parentNode, parentControl, form);\n            } else {\n                node = this.createGroupNode(question, parentNode, parentControl, form);\n            }\n        } else {\n            node = this.createLeafNode(question, parentNode, parentControl, form);\n        }\n        return node;\n    }\n\n    createLeafNode(question: QuestionBase,\n        parentNode: GroupNode, parentControl?: AfeFormGroup, form?: Form): LeafNode {\n        const controlModel = this.controlService.generateControlModel(question, parentControl, false, form);\n        return new LeafNode(question, controlModel, null, form,\n            parentNode ? parentNode.path : undefined);\n    }\n\n    createGroupNode(question: NestedQuestion, parentNode?: GroupNode,\n        parentControl?: AfeFormGroup, form?: Form): GroupNode {\n        const controlModel = this.controlService.generateControlModel(question, parentControl, false, form) as AfeFormGroup;\n        const groupNode = new GroupNode(question, controlModel, null,\n            form, parentNode ? parentNode.path : undefined);\n        this.createNodeChildren(question, groupNode, (controlModel || parentControl), form);\n        return groupNode;\n    }\n\n    createArrayNode(question: NestedQuestion, parentNode?: GroupNode,\n        parentControl?: AfeFormGroup, form?: Form): ArrayNode {\n        const controlModel = this.controlService.generateControlModel(question, parentControl, false, form) as AfeFormGroup;\n        const arrayNode = new ArrayNode(question, controlModel, parentControl,\n            this, form, parentNode ? parentNode.path : undefined);\n        arrayNode.createChildFunc = this.createArrayNodeChild;\n        arrayNode.removeChildFunc = this.removeArrayNodeChild;\n\n        arrayNode.addChildNodeCreatedListener((node: GroupNode) => {\n\n            Validations.JSExpressionValidatorsEnabled = false;\n            this.controlRelationsFactory.buildArrayNodeRelations(node);\n            Validations.JSExpressionValidatorsEnabled = true;\n        });\n        return arrayNode;\n    }\n\n    createNodeChildren(question: NestedQuestion, node: GroupNode,\n        parentControl?: AfeFormGroup, form?: Form): any {\n        question.questions.forEach(element => {\n            const child = this.createNode(element, node, parentControl, form);\n            node.setChild(element.key, child);\n        });\n        return node.children;\n    }\n\n\n    createArrayNodeChild(question: RepeatingQuestion,\n        node: ArrayNode, factory?: FormFactory): GroupNode {\n\n        if (factory === null || factory === undefined) {\n            factory = this;\n        }\n        const groupQuestion: QuestionGroup =\n            new QuestionGroup({\n                key: node.path + '.' + node.children.length + '',\n                type: 'group', extras: question.extras, label: '', questions: question.questions\n            });\n\n        if (question.controlType === AfeControlType.None) {\n            groupQuestion.controlType = question.controlType;\n        }\n\n        const group = factory.createGroupNode(groupQuestion, null, null, node.form);\n        node.children.push(group);\n\n        if (node.control instanceof AfeFormArray) {\n            const nodeControl = node.control as AfeFormArray;\n            nodeControl.setControl(nodeControl.controls.length, group.control);\n        }\n\n        return group;\n    }\n\n    removeArrayNodeChild(index: number, node: ArrayNode) {\n        const nodeToRemove = node.children[index];\n\n        node.children.splice(index, 1);\n        if (node.control !== null || node.control !== undefined) {\n            if (node.control instanceof AfeFormArray) {\n                const control = node.control as AfeFormArray;\n                const controlIndexToRemove = control.controls.indexOf(nodeToRemove.control);\n                if (controlIndexToRemove >= 0) {\n                    control.removeAt(controlIndexToRemove);\n                }\n            }\n        }\n    }\n}\n","import * as _ from 'lodash';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\nimport { NodeBase, ArrayNode, GroupNode, LeafNode } from '../form-factory/form-node';\n\nexport class ObsAdapterHelper {\n    constructor() {\n\n    }\n\n    findObsAnswerToQuestion(node: NodeBase, obsArray: Array<any>): Array<any> {\n        const found = [];\n\n        if (!this.isObsNode(node)) {\n            return found;\n        }\n\n        if (node instanceof LeafNode ||\n            (node instanceof GroupNode &&\n                node.question.extras.type === 'complex-obs')) {\n            _.each(obsArray, (item) => {\n                if (item.concept &&\n                    item.concept.uuid === node.question.extras.questionOptions.concept) {\n                    found.push(item);\n                }\n            });\n\n            return found;\n        }\n\n        // At this point the node is either a group or a repeating node\n\n        const childQuestionsUuids = this.getChildQuestionsConceptUuids(node);\n        if (childQuestionsUuids.length > 0) {\n            _.each(obsArray, (obs) => {\n                if (obs.concept &&\n                    obs.concept.uuid === node.question.extras.questionOptions.concept &&\n                    Array.isArray(obs.groupMembers) &&\n                    this.isSubsetOf(childQuestionsUuids,\n                        this.getGroupMembersConceptUuids(obs))) {\n                    found.push(obs);\n                }\n            });\n        }\n\n        return found;\n    }\n\n    getChildQuestionsConceptUuids(node: NodeBase): Array<string> {\n        const found = [];\n\n        if (node.question.extras && node.question.extras.questions) {\n            _.each(node.question.extras.questions, (question) => {\n                if (question.questionOptions &&\n                    question.questionOptions.concept) {\n                    found.push(question.questionOptions.concept);\n                }\n            });\n        }\n\n        return found;\n    }\n\n    getGroupMembersConceptUuids(obsWithGroupMembers): Array<string> {\n        const found = [];\n\n        if (Array.isArray(obsWithGroupMembers.groupMembers)) {\n            _.each(obsWithGroupMembers.groupMembers,\n                (member) => {\n                    found.push(member.concept.uuid);\n                });\n        }\n\n        return found;\n    }\n\n    isObsNode(node: NodeBase): boolean {\n        return node.question.extras &&\n            (node.question.extras.type === 'obs' ||\n                node.question.extras.type === 'obsGroup' ||\n                node.question.extras.type === 'complex-obs' ||\n                node.question.extras.type === 'complex-obs-child');\n    }\n\n    isSubsetOf(supersetArray: Array<any>, subsetArray: Array<any>): boolean {\n        if (subsetArray.length === 0 && supersetArray.length === 0) {\n            return true;\n        }\n        return subsetArray.every((element): boolean => {\n            return supersetArray.indexOf(element) >= 0;\n        });\n    }\n\n    setSimpleObsNodeValue(node: NodeBase, obs: Array<any>) {\n        if (node && obs.length > 0) {\n            const obsToUse = obs[0];\n\n            // set initial value\n            node.initialValue = obsToUse;\n\n            if (!this.isEmpty(obsToUse.value) && obsToUse.value.uuid) {\n                // answer to the obs is a concept, use uuid value\n                this.setNodeFormControlValue(node, obsToUse.value.uuid);\n            } else if (!this.isEmpty(obsToUse.value)) {\n                this.setNodeFormControlValue(node, obsToUse.value);\n            }\n        }\n    }\n\n    setMultiselectObsNodeValue(node: NodeBase, obs: Array<any>) {\n        if (node && obs.length > 0) {\n            node.initialValue = obs;\n\n            const obsUuids = [];\n            for (const m of obs) {\n                obsUuids.push(m.value.uuid);\n            }\n\n            this.setNodeFormControlValue(node, obsUuids);\n        }\n    }\n\n    setComplexObsNodeValue(node: NodeBase, obs: Array<any>) {\n        if (node && obs.length > 0) {\n            let valueField: LeafNode; // essential memmber\n            let dateField: LeafNode; // other member to be manipulated by user\n\n            const nodeAsGroup = (node as GroupNode);\n            // tslint:disable-next-line:forin\n            for (const o in nodeAsGroup.children) {\n                if ((nodeAsGroup.children[o] as LeafNode).question.extras.questionOptions.obsField === 'value') {\n                    valueField = nodeAsGroup.children[o];\n                }\n\n                if ((nodeAsGroup.children[o] as LeafNode).question.extras.questionOptions.obsField === 'obsDatetime') {\n                    dateField = nodeAsGroup.children[o];\n                }\n            }\n\n            // set the obs value here\n            this.setNodeValue(valueField, obs);\n            node.initialValue = valueField.initialValue;\n\n            // set the date value here\n            dateField.initialValue = valueField.initialValue;\n            this.setNodeFormControlValue(dateField, valueField.initialValue.obsDatetime);\n        }\n    }\n\n    setGroupObsNodeValue(node: NodeBase, obs: Array<any>) {\n        if (node && obs.length > 0) {\n            const groupNode = node as GroupNode;\n            groupNode.initialValue = obs[0];\n            // tslint:disable-next-line:forin\n            for (const o in groupNode.children) {\n                this.setNodeValue(groupNode.children[o], obs[0].groupMembers);\n            }\n        }\n    }\n\n    setRepeatingGroupObsNodeValue(node: NodeBase, obs: Array<any>) {\n        if (node && obs.length > 0) {\n            const arrayNode = node as ArrayNode;\n            arrayNode.initialValue = obs;\n\n            for (let i = 0; i < obs.length; i++) {\n                const createdNode = arrayNode.createChildNode();\n                this.setGroupObsNodeValue(createdNode, [obs[i]]);\n            }\n        }\n    }\n\n    setNodeValue(node: NodeBase, obs: Array<any>) {\n        switch (this.getObsNodeType(node)) {\n            case 'unknown':\n                if (node instanceof GroupNode) {\n                    const groupNode = node as GroupNode;\n                    // tslint:disable-next-line:forin\n                    for (const o in groupNode.children) {\n                        this.setNodeValue(groupNode.children[o], obs);\n                    }\n                    break;\n                }\n                if (node instanceof ArrayNode) {\n                    const arrayNode = node as ArrayNode;\n                    for (let i = 0; i < arrayNode.children.length; i++) {\n                        this.setNodeValue(arrayNode.children[i], obs);\n                    }\n                    break;\n                }\n                break;\n            case 'simple':\n                // search asnwering obs at this point\n                const answeringObs = this.findObsAnswerToQuestion(node, obs);\n\n                // set answer here\n                this.setSimpleObsNodeValue(node, answeringObs);\n                break;\n\n            case 'multiselect':\n                // search asnwering obs at this point\n                const multiselectObs = this.findObsAnswerToQuestion(node, obs);\n\n                // set answer here\n                this.setMultiselectObsNodeValue(node, multiselectObs);\n                break;\n\n\n            case 'complex':\n                // search asnwering obs at this point\n                const complexObs = this.findObsAnswerToQuestion(node, obs);\n\n                // set answer here\n                this.setComplexObsNodeValue(node, complexObs);\n                break;\n\n            case 'group':\n                const groupObs = this.findObsAnswerToQuestion(node, obs);\n\n                if (groupObs.length > 0) {\n                    this.setGroupObsNodeValue(node, groupObs);\n                }\n\n                break;\n            case 'repeatingGroup':\n                const repeatingGroupObs = this.findObsAnswerToQuestion(node, obs);\n\n                if (repeatingGroupObs.length > 0) {\n                    this.setRepeatingGroupObsNodeValue(node, repeatingGroupObs);\n                }\n\n                break;\n            default:\n                console.error('Unknown obs node', node);\n                break;\n        }\n    }\n\n    setNodeFormControlValue(node: NodeBase, value) {\n        node.control.setValue(value);\n        // TODO: Determine if we need this call\n        // node.control.updateValueAndValidity();\n\n        // TODO: Remove this hack and put it in appropriate place\n        if (node.question.enableHistoricalValue && node.initialValue !== undefined) {\n            node.question.setHistoricalValue(false);\n        }\n    }\n\n    getObsNodeType(node: NodeBase): string {\n        if (this.isObsNode(node)) {\n            if (node instanceof LeafNode &&\n                ( node.question.extras.questionOptions.rendering === 'multiCheckbox' ||\n                node.question.extras.questionOptions.rendering === 'checkbox') ) {\n                return 'multiselect';\n            }\n\n            if (node instanceof LeafNode) {\n                return 'simple';\n            }\n\n            if (node instanceof GroupNode &&\n                node.question.extras.type === 'complex-obs') {\n                return 'complex';\n            }\n\n            if (node instanceof ArrayNode &&\n                node.question.extras.type === 'obsGroup' &&\n                node.question.extras.questionOptions.rendering === 'repeating') {\n                return 'repeatingGroup';\n            }\n\n            if (node instanceof GroupNode &&\n                node.question.extras.type === 'obsGroup') {\n                return 'group';\n            }\n\n            return 'unknownObs';\n        }\n        return 'unknown';\n    }\n\n    // PAYLOAD GENERATION FUNCTIONS\n    getSimpleObsPayload(node: NodeBase): any {\n        // check for empty values first\n        if (this.isEmpty(node.control.value)) {\n            if (node.initialValue) {\n                // Handle case for existing voided obs\n                return {\n                    uuid: node.initialValue.uuid,\n                    voided: true\n                };\n            }\n            return null;\n        }\n\n        // check for exisiting, unchanged values\n        if (node.initialValue && !this.simpleNodeValueChanged(node)) {\n            return null;\n        }\n\n        // all numbers, text, concepts answers are handled in the same way\n        // no need for further formatting in this case\n        const obs: any = {\n            concept: node.question.extras.questionOptions.concept,\n            value: node.control.value\n        };\n\n        // handle date fields\n        if (node.question.extras.questionOptions.rendering === 'date') {\n            obs.value = this.toOpenMrsDateTimeString(node.control.value);\n        }\n\n        if (node.initialValue) {\n            // for existing cases, delete concept property, and add uuid\n            delete obs.concept;\n            obs.uuid = node.initialValue.uuid;\n        }\n\n        return obs;\n    }\n\n    getComplexObsPayload(node: NodeBase) {\n        let valueField: LeafNode; // essential memmber\n        let dateField: LeafNode; // other member to be manipulated by user\n\n        const nodeAsGroup = (node as GroupNode);\n        // tslint:disable-next-line:forin\n        for (const o in nodeAsGroup.children) {\n            if ((nodeAsGroup.children[o] as LeafNode).question.extras.questionOptions.obsField === 'value') {\n                valueField = nodeAsGroup.children[o];\n            }\n\n            if ((nodeAsGroup.children[o] as LeafNode).question.extras.questionOptions.obsField === 'obsDatetime') {\n                dateField = nodeAsGroup.children[o];\n            }\n        }\n\n        const valuePayload = this.getObsNodePayload(valueField);\n\n        // set obs datetime for the generated payload\n        if (valuePayload.length > 0) {\n            valuePayload[0].obsDatetime = this.toOpenMrsDateTimeString(dateField.control.value);\n            return valuePayload[0];\n        } else if (valuePayload.length === 0 && node.initialValue) {\n            // determine if date changed\n            if (!this.areDatesEqual(node.initialValue.obsDatetime, dateField.control.value)) {\n                const payload: any = {\n                    uuid: node.initialValue.uuid,\n                };\n                payload.obsDatetime = this.toOpenMrsDateTimeString(dateField.control.value);\n                return payload;\n            }\n        }\n        return null;\n    }\n\n    getMultiselectObsPayload(node: NodeBase): Array<any> {\n        const payload: Array<any> = [];\n\n        const existingUuids = [];\n\n        // add voided obs i.e. deleted options\n        if (Array.isArray(node.initialValue)) {\n            _.each(node.initialValue, (item) => {\n                existingUuids.push(item.value.uuid);\n                if (Array.isArray(node.control.value)) {\n                    if (node.control.value.indexOf(item.value.uuid) < 0) {\n                        payload.push({\n                            uuid: item.uuid,\n                            voided: true\n                        });\n                    }\n                } else {\n                    // every value was deleted\n                    payload.push({\n                        uuid: item.uuid,\n                        voided: true\n                    });\n                }\n            });\n        }\n\n        // add new obs i.e they didn't exisit originally\n        if (Array.isArray(node.control.value)) {\n            _.each(node.control.value, (item) => {\n                if (existingUuids.indexOf(item) < 0) {\n                    payload.push({\n                        concept: node.question.extras.questionOptions.concept,\n                        value: item\n                    });\n                }\n            });\n        }\n\n        return payload;\n    }\n\n    getGroupPayload(node: NodeBase) {\n        const nodeAsGroup: GroupNode = node as GroupNode;\n\n        let childrenPayload = [];\n        _.each(nodeAsGroup.children, (child) => {\n            const payload = this.getObsNodePayload(child);\n            if (payload.length > 0) {\n                childrenPayload = childrenPayload.concat(payload);\n            }\n        });\n\n        if (childrenPayload.length === 0) {\n            return null;\n        }\n\n        const groupPayload: any = {\n            groupMembers: childrenPayload\n        };\n\n        if (nodeAsGroup.initialValue) {\n            groupPayload.uuid = nodeAsGroup.initialValue.uuid;\n\n        } else {\n            groupPayload.concept = nodeAsGroup.question.extras.questionOptions.concept;\n        }\n\n        return groupPayload;\n    }\n\n    getRepeatingGroupPayload(node: NodeBase) {\n        const nodeAsArray: ArrayNode = node as ArrayNode;\n\n        let childrenPayload = [];\n\n        const groupsUuidsAfterEditting = [];\n        _.each(nodeAsArray.children, (child) => {\n            const payload = this.getObsNodePayload(child);\n            if (payload.length > 0) {\n                childrenPayload = childrenPayload.concat(payload);\n            }\n            if (child.initialValue && child.initialValue.uuid) {\n                groupsUuidsAfterEditting.push(child.initialValue.uuid);\n            }\n        });\n\n        // void deleted groups\n        // console.log('groupsUuidsAfterEditting', groupsUuidsAfterEditting);\n        if (nodeAsArray.initialValue && Array.isArray(nodeAsArray.initialValue)) {\n            _.each(nodeAsArray.initialValue, (obs) => {\n                if (groupsUuidsAfterEditting.indexOf(obs.uuid) < 0) {\n                    const voidedGroup = {\n                        uuid: obs.uuid,\n                        voided: true\n                    };\n                    childrenPayload.push(voidedGroup);\n                }\n            });\n        }\n\n        if (childrenPayload.length <= 0) {\n            return null;\n        }\n        return childrenPayload;\n\n    }\n\n    getObsNodePayload(node: NodeBase): Array<any> {\n        let payload = [];\n\n        switch (this.getObsNodeType(node)) {\n            case 'unknown':\n                if (node instanceof GroupNode) {\n                    const groupNode = node as GroupNode;\n                    // tslint:disable-next-line:forin\n                    for (const o in groupNode.children) {\n                        const groupNodePayoad = this.getObsNodePayload(groupNode.children[o]);\n                        if (Array.isArray(groupNodePayoad) && groupNodePayoad.length > 0) {\n                            payload = payload.concat(groupNodePayoad);\n                        }\n                    }\n                    break;\n                }\n                if (node instanceof ArrayNode) {\n                    const arrayNode = node as ArrayNode;\n                    for (let i = 0; i < arrayNode.children.length; i++) {\n                        const arrayNodePayload = this.getObsNodePayload(arrayNode.children[i]);\n                        if (Array.isArray(arrayNodePayload) && arrayNodePayload.length > 0) {\n                            payload = payload.concat(arrayNodePayload);\n                        }\n                    }\n                    break;\n                }\n                break;\n            case 'simple':\n                const simpleObs = this.getSimpleObsPayload(node);\n                if (simpleObs !== null) {\n                    payload.push(simpleObs);\n                }\n                break;\n\n            case 'multiselect':\n                const multiselectObs = this.getMultiselectObsPayload(node);\n\n                if (Array.isArray(multiselectObs) && multiselectObs.length > 0) {\n                    payload = payload.concat(multiselectObs);\n                }\n                break;\n\n            case 'complex':\n                const complexObs = this.getComplexObsPayload(node);\n                if (complexObs !== null) {\n                    payload.push(complexObs);\n                }\n                break;\n\n            case 'group':\n                const groupedObs = this.getGroupPayload(node);\n                if (groupedObs && groupedObs !== null) {\n                    payload.push(groupedObs);\n                }\n                break;\n            case 'repeatingGroup':\n                const repeatingGroupedObs = this.getRepeatingGroupPayload(node);\n                if (Array.isArray(repeatingGroupedObs) && repeatingGroupedObs.length > 0) {\n                    payload = payload.concat(repeatingGroupedObs);\n                }\n                break;\n            default:\n                break;\n        }\n\n        return payload;\n    }\n\n    simpleNodeValueChanged(node: NodeBase): boolean {\n        if (node.initialValue) {\n            if (node.initialValue.value && node.initialValue.value.uuid) {\n                // question whose answer is a concept\n                return node.control.value !== node.initialValue.value.uuid;\n            }\n\n            if (node.question.extras.questionOptions.rendering === 'date') {\n                return !this.areDatesEqual(node.control.value, node.initialValue.value);\n            }\n            return node.control.value !== node.initialValue.value;\n        }\n        return false;\n    }\n\n    areDatesEqual(date1, date2) {\n        return moment(date1).isSame(date2);\n    }\n\n    isEmpty(value): boolean {\n        if (value === '' ||\n            value === null ||\n            value === undefined\n            // || value === [] ||\n            // value === {}\n        ) {\n            return true;\n        }\n        return false;\n    }\n\n    toOpenMrsDateTimeString(datetime: string): string {\n        if (this.isEmpty(datetime)) {\n            return undefined;\n        }\n        const val = datetime.substring(0, 19).replace('T', ' ');\n        return this.isEmpty(val) ? undefined : val;\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport 'rxjs';\n\nimport * as _ from 'lodash';\n\nimport { LeafNode, GroupNode } from '../form-factory/form-node';\nimport { Form } from '../form-factory/form';\nimport { ValueAdapter } from './value.adapter';\nimport { ObsAdapterHelper } from './obs-adapter-helper';\n\n@Injectable()\nexport class ObsValueAdapter implements ValueAdapter {\n\n    constructor(private helper: ObsAdapterHelper) { }\n\n    generateFormPayload(form: Form) {\n        return this.helper.getObsNodePayload(form.rootNode);\n        // TODO: Get rid of the section below when the helper is stable.\n        // // Traverse  to get all nodes\n        // let pages = this.traverse(form.rootNode);\n        // // Extract actual question nodes\n        // let questionNodes = this.getQuestionNodes(pages);\n        // // Get obs Payload\n        // return this.getObsPayload(questionNodes);\n    }\n\n    populateForm(form: Form, payload) {\n        this.helper.setNodeValue(form.rootNode, payload);\n\n        // TODO: Get rid of the section below when the helper is stable.\n        // // Traverse  to get all nodes\n        // let pages = this.traverse(form.rootNode);\n        // // Extract actual question nodes\n        // let questionNodes = this.getQuestionNodes(pages);\n        // // Extract set obs\n        // this.setValues(questionNodes, payload);\n    }\n\n    // TODO: Get rid of all the functions below as they will not be needed\n    // once the helper is stable\n\n    setValues(nodes, payload?, forcegroup?) {\n        if (nodes) {\n            for (const node of nodes) {\n                if (node instanceof LeafNode) {\n                    this.setObsValue(node, payload);\n                    if (node.question.enableHistoricalValue && node.initialValue !== undefined) {\n                        node.question.setHistoricalValue(false);\n                    }\n\n                } else if (node.question && node.question.extras && node.question.renderingType === 'group' || forcegroup) {\n                    const groupObs = _.find(payload, (o: any) => {\n                        return o.concept.uuid === node.question.extras.questionOptions.concept && o.groupMembers;\n                    });\n                    if (groupObs) {\n                        if (node.node) {\n                            node.node['initialValue'] = groupObs;\n                        }\n\n                        this.setValues(node.groupMembers, groupObs.groupMembers);\n                    }\n                    if (forcegroup && node.payload) {\n                        this.setValues(node.groupMembers, node.payload.groupMembers);\n                    }\n\n\n                } else if (node instanceof GroupNode && node.question.extras.type === 'complex-obs') {\n                    this.setComplexObsValue(node, payload);\n                } else if (node.question && node.question.extras && node.question.renderingType === 'repeating' && !forcegroup) {\n                    this.setRepeatingGroupValues(node, payload);\n                    node.node.control.updateValueAndValidity();\n                } else {\n                    throw new Error('not implemented');\n                }\n            }\n        }\n    }\n\n    setObsValue(node, payload) {\n        if (node.question && node.question.extras &&\n            (node.question.extras.type === 'obs' ||\n            (node.question.extras.type === 'complex-obs-child' &&\n            node.question.extras.questionOptions.obsField === 'value')) &&\n            node.question.extras.questionOptions.rendering !== 'multiCheckbox' ||\n            node.question.extras.questionOptions.rendering !== 'checkbox') {\n            const obs = _.find(payload, (o: any) => {\n                return o.concept.uuid === node.question.extras.questionOptions.concept;\n            });\n            if (obs) {\n                if (obs.value instanceof Object) {\n                    node.control.setValue(obs.value.uuid);\n                    node.control.updateValueAndValidity();\n                } else {\n                    node.control.setValue(obs.value);\n                    node.control.updateValueAndValidity();\n                }\n                node['initialValue'] = { obsUuid: obs.uuid, value: obs.value };\n            }\n        } else {\n            const multiObs = _.filter(payload, (o: any) => {\n                return o.concept.uuid === node.question.extras.questionOptions.concept;\n            });\n            if (multiObs && multiObs.length > 0) {\n                node.control.setValue(this.getMultiselectValues(multiObs));\n                node.control.updateValueAndValidity();\n                node['initialValue'] = multiObs;\n            }\n        }\n    }\n\n    setComplexObsValue(node, payload) {\n        let valueField: any;\n        let dateField: any;\n\n        // tslint:disable-next-line:forin\n        for (const o in node.children) {\n            if ((node.children[o] as LeafNode).question.extras.questionOptions.obsField === 'value') {\n                valueField = node.children[o];\n            }\n\n            if ((node.children[o] as LeafNode).question.extras.questionOptions.obsField === 'obsDatetime') {\n                dateField = node.children[o];\n            }\n        }\n        // set the usual obs value\n        this.setObsValue(valueField, payload);\n\n        // set the obs date\n        const obs = _.find(payload, (o: any) => {\n            return o.concept.uuid === node.question.extras.questionOptions.concept;\n        });\n\n        if (obs) {\n            dateField['initialValue'] = { obsUuid: obs.uuid, value: obs.obsDatetime };\n            (dateField as LeafNode).control.setValue(obs.obsDatetime);\n            (dateField as LeafNode).control.updateValueAndValidity();\n        }\n    }\n\n    getMultiselectValues(multiObs) {\n        const values = [];\n        for (const m of multiObs) {\n            values.push(m.value.uuid);\n        }\n        return values;\n    }\n\n    setRepeatingGroupValues(node, payload) {\n        const groupRepeatingObs = _.filter(payload, (o: any) => {\n            const found = o.concept.uuid === node.question.extras.questionOptions.concept;\n            let intersect = false;\n            if (found && o.groupMembers) {\n                const obs = o.groupMembers.map((a) => {\n                    return a.concept.uuid;\n                });\n\n                const schemaQuestions = node.question.questions.map((a) => {\n                    return a.extras.questionOptions.concept;\n                });\n\n                intersect = (_.intersection(obs, schemaQuestions).length > 0);\n            }\n            return found && intersect;\n        });\n        if (groupRepeatingObs.length > 0) {\n            node.node['initialValue'] = groupRepeatingObs;\n            for (let i = 0; i < groupRepeatingObs.length; i++) {\n                node.node.createChildNode();\n            }\n        }\n        const groups = [];\n        let index = 0;\n        for (const child of node.node.children) {\n            const children = Object.keys(child.children).map(function (key) { return child.children[key]; });\n            const groupPayload = groupRepeatingObs[index];\n            groups.push({ question: node.question, groupMembers: children, payload: groupPayload });\n            index++;\n        }\n        this.setValues(groups, groupRepeatingObs, true);\n    }\n\n    getQuestionNodes(pages) {\n        const merged = [];\n        const arrays = [];\n        for (const page of pages) {\n            for (const section of page.page) {\n                arrays.push(section.section);\n            }\n        }\n        return merged.concat.apply([], arrays);\n    }\n\n    repeatingGroup(nodes) {\n        const toReturn = [];\n        for (const node of nodes) {\n            toReturn.push({ question: node.question, groupMembers: this.traverse(node) });\n        }\n        return toReturn;\n    }\n\n    processGroup(obs, obsPayload) {\n        if (obs.question && obs.question.extras && obs.question.extras.questionOptions.rendering === 'group') {\n            const members = _.filter(this.getObsPayload(obs.groupMembers), (o: any) => {\n                return o.value !== '';\n            });\n\n            const mappedMembers = members.map((a) => {\n                return a.voided;\n            });\n            if (members.length > 0 && mappedMembers.every(Boolean)) {\n                obsPayload.push({\n                    uuid: obs.node.initialValue.uuid,\n                    voided: true\n                });\n            } else if (members.length > 0) {\n                if (obs.node.initialValue) {\n                    obsPayload.push({\n                        uuid: obs.node.initialValue.uuid,\n                        groupMembers: members\n                    });\n                } else {\n                    obsPayload.push({\n                        concept: obs.question.extras.questionOptions.concept,\n                        groupMembers: members\n                    });\n                }\n            }\n        }\n    }\n\n    mapInitialGroup(group) {\n        let current = {};\n        for (const member of group.groupMembers) {\n            let value: any = '';\n            if (member.value instanceof Object) {\n                value = member.value.uuid;\n            } else if (member.value) {\n                value = member.value;\n            } else if (member.groupMembers && member.groupMembers.length > 0) {\n                current = this.mapInitialGroup(group);\n            }\n            current[member.concept.uuid + ':' + value] = value;\n        }\n        return current;\n    }\n\n    mapModelGroup(node, value) {\n        const current = {};\n        for (const key in value) {\n            if (value.hasOwnProperty(key)) {\n                const groupQuestion: any = _.find(node.question.questions, { key: key });\n                const modelValue = value[key];\n                if (modelValue instanceof Object) {\n                } else if (modelValue !== '') {\n                    current[groupQuestion.extras.questionOptions.concept + ':'\n                        + modelValue] = modelValue;\n                }\n            }\n\n        }\n        return current;\n    }\n\n    processRepeatingGroups(node, obsPayload) {\n        const initialValues = [];\n        if (node.node.initialValue) {\n            for (const group of node.node.initialValue) {\n                initialValues.push({ uuid: group.uuid, value: this.mapInitialGroup(group) });\n            }\n        }\n        const repeatingModel = [];\n        for (const value of node.node.control.value) {\n            repeatingModel.push({ value: this.mapModelGroup(node, value) });\n        }\n        const deleted = this.leftOuterJoinArrays(initialValues, repeatingModel);\n        const newObs = this.leftOuterJoinArrays(repeatingModel, initialValues);\n        const groupConcept = node.question.extras.questionOptions.concept;\n        let newObsPayload = [];\n        if (deleted.length > 0) {\n            const deletedObs = this.createGroupDeletedObs(deleted);\n            for (const d of deletedObs) {\n                obsPayload.push(d);\n            }\n            if (newObs.length > 0) {\n                newObsPayload = this.createGroupNewObs(newObs, groupConcept);\n            }\n        } else {\n            newObsPayload = this.createGroupNewObs(newObs, groupConcept);\n        }\n\n        if (newObsPayload.length > 0) {\n            for (const p of newObsPayload) {\n                obsPayload.push(p);\n            }\n        }\n    }\n\n    leftOuterJoinArrays(first, second) {\n        const unique = first.filter(function (obj) {\n            return !second.some(function (obj2) {\n                return _.isEqual(obj.value, obj2.value);\n            });\n        });\n        return unique;\n    }\n\n    createGroupNewObs(payload, groupConcept) {\n        const newPayload = [];\n        for (const obs of payload) {\n            const groupPayload = [];\n            /* tslint:disable */\n            for (let key in obs.value) {\n                let concept = key.split(':')[0];\n                let value = key.split(':')[1];\n                groupPayload.push({ concept: concept, value: value });\n            }\n            newPayload.push({ concept: groupConcept, groupMembers: groupPayload })\n            /* tslint:enable */\n        }\n        return newPayload;\n    }\n\n    createGroupDeletedObs(payload) {\n        const deletedObs = [];\n        for (const d of payload) {\n            deletedObs.push({ uuid: d.uuid, voided: true });\n        }\n        return deletedObs;\n    }\n\n    getExactTime(datetime: string) {\n        return datetime.substring(0, 19).replace('T', ' ');\n    }\n\n    processObs(obs, obsPayload) {\n        if (obs.control && obs.question.extras) {\n            const obsValue = {\n                concept: obs.question.extras.questionOptions.concept,\n                value: (obs.question.extras.questionOptions.rendering === 'date' && !this.isEmpty(obs.control.value)) ?\n                    this.getExactTime(obs.control.value) : obs.control.value\n            };\n\n            if (obs.question.extras.questionOptions.rendering === 'multiCheckbox' ||\n            obs.question.extras.questionOptions.rendering === 'checkbox') {\n                const multis = this.processMultiSelect(obs.question.extras.questionOptions.concept, obs.control.value);\n                if (obs.initialValue) {\n                    const mappedInitial = obs.initialValue.map((a) => {\n                        return { uuid: a.uuid, value: { concept: a.concept.uuid, value: a.value.uuid } };\n                    });\n                    const mappedCurrent = multis.map((a) => {\n                        return { value: a };\n                    });\n                    const deletedObs = this.leftOuterJoinArrays(mappedInitial, mappedCurrent);\n                    const newObs = this.leftOuterJoinArrays(mappedCurrent, mappedInitial);\n                    this.processDeletedMultiSelectObs(deletedObs, obsPayload);\n                    this.processNewMultiSelectObs(newObs, obsPayload);\n                } else {\n                    this.processNewMultiSelectObs(multis, obsPayload);\n                }\n            } else {\n                if (obs.initialValue && obs.initialValue.value && obsValue) {\n                    this.updateOrVoidObs(obsValue, obs.initialValue, obsPayload);\n                } else if (obsValue.value !== '' && obsValue.value !== null) {\n                    obsPayload.push(obsValue);\n                }\n            }\n        }\n    }\n\n    processComplexObs(node, obsPayload) {\n        let valueField: any;\n        let dateField: any;\n\n        // tslint:disable-next-line:forin\n        for (const o in node.children) {\n            if ((node.children[o] as LeafNode).question.extras.questionOptions.obsField === 'value') {\n                valueField = node.children[o];\n            }\n\n            if ((node.children[o] as LeafNode).question.extras.questionOptions.obsField === 'obsDatetime') {\n                dateField = node.children[o];\n            }\n        }\n\n        if (valueField) {\n            // process obs as usual\n            this.processObs(valueField, obsPayload);\n\n            // obtain the last inserted obs and set the obsDatetime\n            const createdPayload = obsPayload.length > 0 ? obsPayload[obsPayload.length - 1] : undefined;\n            if (createdPayload &&\n                ((createdPayload.concept && createdPayload.concept === node.question.extras.questionOptions.concept) ||\n                    (valueField.initialValue && createdPayload.uuid === valueField.initialValue.obsUuid))) {\n                if (dateField.initialValue && dateField.control.value !== dateField.initialValue.value) {\n                    createdPayload.obsDatetime = dateField.control.value;\n                }\n            }\n        }\n    }\n\n    processDeletedMultiSelectObs(values, obsPayload) {\n        for (const value of values) {\n            obsPayload.push({ uuid: value.uuid, voided: true });\n        }\n    }\n\n    processNewMultiSelectObs(values, obsPayload) {\n        for (const multi of values) {\n            if (multi.value instanceof Object) {\n                obsPayload.push(multi.value);\n            } else {\n                obsPayload.push(multi);\n            }\n        }\n    }\n\n    updateOrVoidObs(obsValue, initialValue, obsPayload) {\n        if (this.isEmpty(obsValue.value) && initialValue.value) {\n            obsPayload.push({ uuid: initialValue.obsUuid, voided: true });\n        } else if (!this.isEmpty(obsValue.value) && initialValue.value) {\n            obsPayload.push({ uuid: initialValue.obsUuid, value: obsValue.value });\n        }\n    }\n\n    isEmpty(value): boolean {\n        if (value === '' ||\n            value === null ||\n            value === undefined\n            // || value === [] ||\n            // value === {}\n        ) {\n            return true;\n        }\n        return false;\n    }\n\n    traverse(o, type?) {\n        const questions = [];\n        if (o.children) {\n            if (o.children instanceof Array) {\n                const returned = this.repeatingGroup(o.children);\n                return returned;\n            }\n            if (o.children instanceof Object) {\n                for (const key in o.children) {\n                    if (o.children.hasOwnProperty(key)) {\n                        switch (o.children[key].question.renderingType) {\n                            case 'page':\n                                const page = this.traverse(o.children[key]);\n                                questions.push({ page: page });\n                                break;\n                            case 'section':\n                                const section = this.traverse(o.children[key]);\n                                questions.push({ section: section });\n                                break;\n                            case 'group':\n                                const qs = this.traverse(o.children[key]);\n                                questions.push({ node: o.children[key], question: o.children[key].question, groupMembers: qs });\n                                break;\n                            case 'repeating':\n                                const rep = this.repeatingGroup(o.children[key].children);\n                                questions.push({ node: o.children[key], question: o.children[key].question, groupMembers: rep });\n                                break;\n                            default:\n                                questions.push(o.children[key]);\n                                break;\n\n                        }\n                    }\n                }\n            }\n\n        }\n        return questions;\n    }\n\n    processMultiSelect(concept, values) {\n        const multiSelectObs = [];\n        if (values && values !== null) {\n            for (const value of values) {\n                const obs = {\n                    concept: concept,\n                    value: value\n                };\n                multiSelectObs.push(obs);\n            }\n        }\n        return multiSelectObs;\n    }\n\n\n    isObs(node) {\n        return (node.question.extras.type === 'obs' ||\n            node.question.extras.type === 'obsGroup' ||\n            node.question.extras.type === 'complex-obs');\n    }\n\n    getObsPayload(nodes) {\n        const obsPayload = [];\n        for (const node of nodes) {\n            if (this.isObs(node)) {\n                if (node.groupMembers, node.question.extras.questionOptions.rendering === 'group') {\n\n                    this.processGroup(node, obsPayload);\n\n                } else if (node.groupMembers, node.question.extras.questionOptions.rendering === 'repeating') {\n                    this.processRepeatingGroups(node, obsPayload);\n                } else if (node instanceof GroupNode && (node as GroupNode).question.extras.type === 'complex-obs') {\n                    this.processComplexObs(node, obsPayload);\n                } else {\n                    this.processObs(node, obsPayload);\n                }\n            }\n        }\n        return obsPayload;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Form } from '../form-factory/form';\nimport { ValueAdapter } from './value.adapter';\nimport * as _ from 'lodash';\n@Injectable()\nexport class OrderValueAdapter implements ValueAdapter {\n    formOrderNodes = [];\n    private provider = '';\n\n    generateFormPayload(form: Form) {\n        this.formOrderNodes = [];\n        this._setOrderProvider(form);\n        this._findTestOrderQuestionNodes(form.rootNode);\n        return this._createOrdersPayload(this.formOrderNodes, form);\n    }\n\n    populateForm(form: Form, payload) {\n        form.existingOrders = payload;\n        this.formOrderNodes = [];\n        this._findTestOrderQuestionNodes(form.rootNode);\n        const existingOrders = this._getExistingOrders(form);\n        this._setOrderValues(this.formOrderNodes, existingOrders);\n    }\n\n    private _setOrderProvider(form: Form) {\n        if (form.valueProcessingInfo.providerUuid) {\n            this.provider = form.valueProcessingInfo.providerUuid;\n        }\n    }\n\n    private _createOrdersPayload(orderNodes, form: Form) {\n        const payload = [];\n        const selectedOrders = [];\n        let deletedOrders = [];\n        const existingOrders = this._getExistingOrders(form);\n        for (const orderNode of orderNodes) {\n            const orderNodeValues = orderNode.control.value;\n            const orders = [];\n            if (existingOrders) {\n                existingOrders.map(function (obj) {\n                    orders[obj.concept] = obj.concept;\n                });\n            }\n\n\n            for (const order in orderNodeValues) {\n                if (orderNodeValues.hasOwnProperty(order)) {\n\n                    const orderValue = orderNodeValues[order][orderNode.question.key];\n\n                    const payloadOrder = this._createPayloadOrder(orderValue, orderNode.question.extras);\n\n                    if (orders[orderValue] !== orderValue && payloadOrder.concept !== '') {\n\n                        payload.push(payloadOrder);\n                    }\n                    selectedOrders[orderValue] = orderValue;\n                    if (payloadOrder.orderNumber === '') {\n                        delete payloadOrder.orderNumber;\n                    }\n                    if (payloadOrder.uuid === '') {\n                        delete payloadOrder.uuid;\n                    }\n                }\n            }\n\n        }\n\n        deletedOrders = this._getDeletedOrders(selectedOrders, existingOrders);\n        return this._addDeletedOrdersToPayload(deletedOrders, payload);\n\n    }\n\n    private _getExistingOrders(form: Form) {\n        if (form.existingOrders && form.existingOrders.orders) {\n            let existingOrders = form.existingOrders.orders.map((o) => {\n                return {\n                    concept: o.concept.uuid,\n                    orderNumber: o.orderNumber,\n                    orderUuid: o.uuid,\n                    voided: o.voided,\n                    dateVoided: o.auditInfo.dateVoided\n                };\n            });\n\n            return existingOrders = _.filter(existingOrders, (order: any) => {\n                if (order.voided === true || order.dateVoided) {\n                    return false;\n                } else {\n                    return true;\n                }\n            });\n        } else {\n            return;\n        }\n\n    }\n\n    private _setOrderValues(node, existingOrders) {\n        this._findTestOrderQuestionNodes(node);\n\n        const orderNodes = this.formOrderNodes;\n        for (const orderNode of orderNodes) {\n            this._setOrderNodeValues(orderNode, existingOrders);\n        }\n    }\n\n    private _addDeletedOrdersToPayload(deletedOrders, payload): any {\n        for (const order in deletedOrders) {\n            if (deletedOrders.hasOwnProperty(order)) {\n                payload.push({ uuid: deletedOrders[order], voided: true });\n            }\n        }\n        return payload;\n    }\n\n    private _createPayloadOrder(orderConcept, quesitonExtras): any {\n        const order = {\n            concept: '',\n            type: '',\n            orderer: '',\n            careSetting: ''\n        };\n        order.concept = orderConcept;\n        order.type = quesitonExtras.questionOptions.orderType;\n        order.orderer = this.provider;\n        order.careSetting = quesitonExtras.questionOptions.orderSettingUuid;\n\n        // delete orderer if provider not provided\n        if (order.orderer === '') {\n            delete order.orderer;\n        }\n\n        return order;\n    }\n\n    private _getDeletedOrders(selectedOrders, existingOrders): any {\n        const deleteOrders = [];\n        if (selectedOrders) {\n            for (const order in existingOrders) {\n                if (existingOrders.hasOwnProperty(order)) {\n                    const existingOrderConcept = existingOrders[order].concept;\n                    const selectedOrder = selectedOrders[existingOrderConcept];\n                    if (selectedOrder !== existingOrderConcept) {\n                        deleteOrders.push(existingOrders[order].orderUuid);\n                    }\n                }\n            }\n        }\n        console.log('Deleted Orders ', deleteOrders);\n        return deleteOrders;\n    }\n\n    private _setOrderNodeValues(node, orders) {\n        let index = 0;\n        node['initialValue'] = orders;\n        for (const order of orders) {\n            node.createChildNode();\n            const value = {};\n            value[node.question.key] = order.concept;\n            const childNode = node.children[index];\n            childNode.control.setValue(value);\n            childNode['initialValue'] = value;\n            childNode['orderNumber'] = order.orderNumber;\n            console.log('Set Value', node.children[index].control.value, node, childNode);\n            index++;\n        }\n    }\n\n    private _findTestOrderQuestionNodes(formNode) {\n\n        if (formNode.children) {\n            if (formNode.children instanceof Object) {\n                for (const key in formNode.children) {\n                    if (formNode.children.hasOwnProperty(key)) {\n                        switch (formNode.children[key].question.renderingType) {\n                            case 'page':\n                                this._findTestOrderQuestionNodes(formNode.children[key]);\n                                break;\n                            case 'section':\n                                this._findTestOrderQuestionNodes(formNode.children[key]);\n                                break;\n                            case 'group':\n                                this._findTestOrderQuestionNodes(formNode.children[key]);\n\n                                break;\n                            case 'repeating':\n                                if (formNode.children) {\n                                    // tslint:disable-next-line:forin\n                                    for (const node in formNode.children) {\n                                        const question = formNode.children[node].question;\n                                        if (question.extras && question.extras.type === 'testOrder') {\n                                            this.formOrderNodes.push(formNode.children[node]);\n                                        }\n                                    }\n\n                                }\n                                break;\n                            default:\n                                break;\n\n                        }\n                    }\n                }\n            }\n\n        }\n    }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { NodeBase, GroupNode, ArrayNode } from '../form-factory/form-node';\nimport { Form } from '../form-factory/form';\n\nimport { ValueAdapter } from './value.adapter';\nimport { ObsValueAdapter } from './obs.adapter';\nimport { OrderValueAdapter } from './order.adapter';\n\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\n@Injectable()\nexport class EncounterAdapter implements ValueAdapter {\n\n    constructor(public ordersAdapter: OrderValueAdapter, public obsAdapter: ObsValueAdapter) { }\n\n    populateForm(form: Form, payload) {\n        this.populateNode(form.rootNode, payload);\n\n        if (Array.isArray(payload.orders)) {\n            this.ordersAdapter.populateForm(form, payload);\n        }\n        if (Array.isArray(payload.obs)) {\n            this.obsAdapter.populateForm(form, payload.obs);\n        }\n    }\n\n    populateNode(rootNode: NodeBase, payload) {\n\n        if (payload === undefined || payload === null) {\n            throw new Error('Expected payload');\n        }\n\n        const nodes = this.getEncounterNodes(rootNode);\n\n        nodes.forEach(node => {\n            switch (node.question.extras.type) {\n                case 'encounterDatetime':\n                    if (payload['encounterDatetime']) {\n                        console.log('date', payload['encounterDatetime']);\n                        node.control.setValue(moment(payload['encounterDatetime']).toDate());\n                        node.initialValue = moment(payload['encounterDatetime']).toDate();\n                    }\n                    break;\n                case 'encounterProvider':\n                    if (Array.isArray(payload['encounterProviders']) && payload['encounterProviders'].length > 0) {\n                        const firstProvider: any = payload['encounterProviders'][0].provider;\n                        if (firstProvider && firstProvider.uuid) {\n                            node.control.setValue(firstProvider.uuid);\n                            node.initialValue = firstProvider.uuid;\n                        }\n                    }\n                    break;\n                case 'encounterLocation':\n                    if (payload['location'] && payload['location'].uuid) {\n                        node.control.setValue(payload['location'].uuid);\n                        node.initialValue = payload['location'].uuid;\n                    }\n                    break;\n                default:\n                    break;\n            }\n        });\n    }\n\n    generateFormPayload(form: Form) {\n        const payload = this.generateNodePayload(form.rootNode);\n\n        this.setNonFilledPayloadMembers(form, payload);\n\n        payload['obs'] = this.obsAdapter.generateFormPayload(form) || [];\n\n        payload['orders'] = this.ordersAdapter.generateFormPayload(form) || [];\n\n        return payload;\n    }\n\n    generateNodePayload(rootNode: NodeBase) {\n        const nodes = this.getEncounterNodes(rootNode);\n        const payload = {};\n\n        nodes.forEach(node => {\n            if (node.control.value !== null &&\n                node.control.value !== undefined &&\n                node.control.value !== '') {\n                switch (node.question.extras.type) {\n                    case 'encounterDatetime':\n                        const dateValue = moment(node.control.value)\n                            .utcOffset(rootNode.form.valueProcessingInfo.utcOffset || '+0300');\n                        payload['encounterDatetime'] = dateValue.format('YYYY-MM-DD HH:mm:ss');\n                        break;\n                    case 'encounterProvider':\n                        if (node.control.value && node.control.value !== '') {\n                            const providers = [];\n                            providers.push({\n                                provider: node.control.value,\n                                encounterRole: 'a0b03050-c99b-11e0-9572-0800200c9a66' // unknown provider role in the encounter as default\n                            });\n                            payload['encounterProviders'] = providers;\n                        }\n                        break;\n                    case 'encounterLocation':\n                        payload['location'] = node.control.value;\n                        break;\n                    default:\n                        break;\n                }\n            }\n        });\n\n        return payload;\n    }\n\n    getEncounterNodes(rootNode: NodeBase): Array<NodeBase> {\n        const results: Array<NodeBase> = [];\n        this._getEncounterNodes(rootNode, results);\n        return results;\n    }\n\n    setNonFilledPayloadMembers(form: Form, payload) {\n        if (form.valueProcessingInfo.patientUuid) {\n            this.setPayloadPatientUuid(payload, form.valueProcessingInfo.patientUuid);\n        }\n\n        if (form.valueProcessingInfo.visitUuid) {\n            this.setPayloadVisitUuid(payload, form.valueProcessingInfo.visitUuid);\n        }\n\n        if (form.valueProcessingInfo.encounterTypeUuid) {\n            this.setPayloadEncounterTypeUuid(payload, form.valueProcessingInfo.encounterTypeUuid);\n        }\n\n        if (form.valueProcessingInfo.formUuid) {\n            this.setPayloadFormUuid(payload, form.valueProcessingInfo.formUuid);\n        }\n\n        if (form.valueProcessingInfo.encounterUuid) {\n            this.setPayloadEncounterUuid(payload, form.valueProcessingInfo.encounterUuid);\n        }\n    }\n\n    setPayloadPatientUuid(payload, patientUuid: string) {\n        payload['patient'] = patientUuid;\n    }\n\n    setPayloadVisitUuid(payload, visitUuid: string) {\n        payload['visit'] = visitUuid;\n    }\n\n    setPayloadEncounterTypeUuid(payload, encounterTypeUuid: string) {\n        payload['encounterType'] = encounterTypeUuid;\n    }\n\n    setPayloadFormUuid(payload, formUuid: string) {\n        payload['form'] = formUuid;\n    }\n\n    setPayloadEncounterUuid(payload, encounterUuid: string) {\n        payload['uuid'] = encounterUuid;\n    }\n\n    private _getEncounterNodes(rootNode: NodeBase, array: Array<NodeBase>) {\n        if (this._isEncounterNode(rootNode)) {\n            array.push(rootNode);\n        }\n\n        if (rootNode instanceof GroupNode) {\n            const node = rootNode as GroupNode;\n            // tslint:disable-next-line:forin\n            for (const o in node.children) {\n                if (node.children[o] instanceof NodeBase) {\n                    this._getEncounterNodes(node.children[o], array);\n                }\n            }\n        }\n\n        if (rootNode instanceof ArrayNode) {\n            const node = rootNode as ArrayNode;\n            node.children.forEach(child => {\n                this._getEncounterNodes(child, array);\n            });\n        }\n    }\n\n    private _isEncounterNode(node: NodeBase): boolean {\n        if (node.question.extras &&\n            (node.question.extras.type === 'encounterDatetime' ||\n                node.question.extras.type === 'encounterProvider' ||\n                node.question.extras.type === 'encounterLocation')) {\n            return true;\n        }\n        return false;\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { NodeBase, GroupNode, ArrayNode } from '../form-factory/form-node';\nimport { Form } from '../form-factory/form';\nimport { ValueAdapter } from './value.adapter';\n\n@Injectable()\nexport class PersonAttribuAdapter implements ValueAdapter {\n    constructor() { }\n\n    generateFormPayload(form: Form) {\n        return this.generateNodePayload(form.rootNode);\n    }\n\n    generateNodePayload(rootNode: NodeBase) {\n        const nodes = this.getPersonAttributeNodes(rootNode);\n        const payload = [];\n        nodes.forEach(node => {\n            if (node.control.value !== null &&\n                node.control.value !== undefined &&\n                node.control.value !== '' &&\n                node.initialValue !== node.control.value) {\n\n                if (node.question.extras.questionOptions.isSimpleValue === true) {\n                    payload.push({\n                        attributeType: node.question.extras.questionOptions.attributeType,\n                        value: node.control.value\n                    });\n                } else {\n                    payload.push({\n                        attributeType: node.question.extras.questionOptions.attributeType,\n                        hydratedObject: node.control.value\n                    });\n                }\n\n            }\n        });\n        return payload;\n    }\n\n    populateForm(form: Form, payload) {\n        this.populateNode(form.rootNode, payload);\n    }\n\n    populateNode(rootNode: NodeBase, payload) {\n        if (!Array.isArray(payload)) {\n            throw new Error('Expected an array of attributes');\n        }\n\n        const nodes = this.getPersonAttributeNodes(rootNode);\n\n        nodes.forEach(node => {\n            payload.forEach(element => {\n                if (element.attributeType.uuid\n                    === node.question.extras.questionOptions.attributeType) {\n                    if (element.value.uuid) {\n                        node.control.setValue(element.value.uuid);\n                        node.initialValue = element.value.uuid;\n                    } else {\n                        node.control.setValue(element.value);\n                        node.initialValue = element.value;\n                    }\n                }\n            });\n        });\n    }\n\n    getPersonAttributeNodes(rootNode: NodeBase): Array<NodeBase> {\n        const results: Array<NodeBase> = [];\n        this._getPersonAttributesNodes(rootNode, results);\n        return results;\n    }\n\n    private _getPersonAttributesNodes(rootNode: NodeBase, array: Array<NodeBase>) {\n        if (rootNode.question.extras &&\n            rootNode.question.extras.type === 'personAttribute') {\n            array.push(rootNode);\n        }\n\n        if (rootNode instanceof GroupNode) {\n            const node = rootNode as GroupNode;\n            // tslint:disable-next-line:forin\n            for (const o in node.children) {\n                if (node.children[o] instanceof NodeBase) {\n                    this._getPersonAttributesNodes(node.children[o], array);\n                }\n            }\n        }\n\n        if (rootNode instanceof ArrayNode) {\n            const node = rootNode as ArrayNode;\n            node.children.forEach(child => {\n                this._getPersonAttributesNodes(child, array);\n            });\n        }\n    }\n}\n","import { Component, OnInit, Input, forwardRef, ViewChild, Output, EventEmitter, Renderer2 } from '@angular/core';\nimport { SelectComponent } from '../../components/select/select.component';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\nimport * as _ from 'lodash';\n@Component({\n    selector: 'remote-select',\n    template: `<div>\n    <ng-select [id]=\"componentID\" [noFilter]=\"0\" (selected)=\"selected($event)\" (deselected)=\"removed($event)\" [options]=\"items\" [allowClear]=\"true\"\n        [placeholder]=\"placeholder\" [notFoundMsg]=\"notFoundMsg\" (typed)=\"typed($event)\" tabindex=\"0\">\n    </ng-select>\n    <div *ngIf=\"loading\">\n        resolving....\n    </div>\n</div>\n`,\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => RemoteSelectComponent),\n            multi: true,\n        }]\n})\nexport class RemoteSelectComponent implements OnInit, ControlValueAccessor {\n    // @Input() dataSource: DataSource;\n    @Input() placeholder = 'Search...';\n    @Input() componentID: string;\n    items = [];\n    value = [];\n    loading = false;\n    searchText = '';\n    notFoundMsg = 'match no found';\n    @Output() done: EventEmitter<any> = new EventEmitter<any>();\n\n    characters = [];\n    @ViewChild(SelectComponent) private selectC: SelectComponent;\n\n\n    private _dataSource: DataSource;\n    @Input()\n    public get dataSource(): DataSource {\n        return this._dataSource;\n    }\n    public set dataSource(v: DataSource) {\n        this._dataSource = v;\n        if (this._dataSource && this._dataSource.dataFromSourceChanged) {\n            this.subscribeToDataSourceDataChanges();\n        }\n    }\n\n\n    constructor(private renderer: Renderer2) { }\n\n    ngOnInit() {\n\n    }\n\n    subscribeToDataSourceDataChanges() {\n        this._dataSource.dataFromSourceChanged.subscribe((results) => {\n            if (results.length > 0) {\n                this.items = results;\n                this.notFoundMsg = '';\n                // console.log('updating items', results, this.selectC.value);\n                this.restoreSelectedValue(this.selectC.value, results);\n            } else {\n                this.notFoundMsg = 'Not found';\n                this.items = [];\n            }\n        });\n    }\n\n    public typed(value: any): void {\n        this.search(value);\n    }\n    search(value: string) {\n        if (this.dataSource) {\n            this.searchText = value;\n            this.notFoundMsg = 'Loading.........';\n            this.dataSource.searchOptions(value)\n                .subscribe((result) => {\n                    if (result.length > 0) {\n                        const existing = _.map(this.value, _.clone);\n                        const concat = existing.concat(result);\n                        this.items = _.uniqBy(concat, 'value');\n                    }\n                    this.notFoundMsg = '';\n                }, (error) => {\n                    this.notFoundMsg = 'Errored';\n                });\n        }\n    }\n\n    restoreSelectedValue(value, results) {\n        let found = false;\n        _.each(results, (item) => {\n            if (item.value === value) {\n                setTimeout(() => {\n                    this.selectC.select(value);\n                    this.selectC.value = value;\n                });\n                found = true;\n            }\n        });\n        if (!found) {\n            // console.log('not found after loading items', value, results);\n            setTimeout(() => {\n                this.selectC.select('');\n                this.selectC.value = '';\n            });\n        }\n    }\n\n    canSearch(searchText: string) {\n        return (searchText.length - this.searchText.length >= 2 ||\n            (searchText.length - this.searchText.length <= 2 && searchText !== '')) && this.loading === false;\n    }\n\n    // this is the initial value set to the component\n    public writeValue(value: any) {\n        if (value && value !== '') {\n            if (this.dataSource) {\n                this.loading = true;\n                this.dataSource.resolveSelectedValue(value).subscribe((result: any) => {\n                    this.items = [result];\n                    setTimeout(() => {\n                        this.selectC.select(result.value);\n                        this.selectC.value = result.value;\n                    });\n                    this.loading = false;\n                }, (error) => {\n                    this.loading = false;\n                });\n            }\n        }\n    }\n    // registers 'fn' that will be fired when changes are made\n    // this is how we emit the changes back to the form\n    public registerOnChange(fn: any) {\n        this.propagateChange = fn;\n    }\n\n    // not used, used for touch input\n    public registerOnTouched() { }\n    // change events from the textarea\n    onChange(event) {\n        this.propagateChange(event.id);\n        // .....\n        // update the form\n        // this.propagateChange(this.data);\n    }\n    removed(event) {\n        console.log('Removed');\n        this.propagateChange('');\n    }\n    selected(event) {\n        this.propagateChange(event.value);\n    }\n\n    // the method set in registerOnChange, it is just\n    // a placeholder for a method that takes one parameter,\n    // we use it to emit changes back to the form\n    private propagateChange = (change: any) => { };\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule } from '@angular/forms';\n// import { SelectModule } from 'ng2-select/ng2-select';\nimport { SelectModule } from '../../components/select/select.module';\nimport { RemoteSelectComponent } from './remote-select.component';\n\n@NgModule({\n    imports: [CommonModule, SelectModule, FormsModule],\n    exports: [RemoteSelectComponent],\n    declarations: [RemoteSelectComponent],\n    providers: [],\n})\nexport class RemoteSelectModule { }\n","import { Component, OnInit, OnChanges, Input } from '@angular/core';\n\nimport { LeafNode } from '../../form-entry/form-factory/form-node';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\n@Component({\n  selector: 'appointments-overview',\n  template: `<div *ngIf=\"showAppointments\" class=\"appointments\">\n  <p *ngIf=\"loadingAppointments\">\n    <span *ngIf=\"!appointmentsLoaded && errorLoadingAppointments\">Error checking appointments</span>\n    <span *ngIf=\"loadingAppointments\"><span\n      class=\"fa fa-spinner fa-spin\"></span>Checking appointments...</span>\n  </p>\n  <div *ngIf=\"appointmentsLoaded && !errorLoadingAppointments\">\n    <table *ngIf=\"appointments.length>0\" class=\"table table-stripped table-bordered\">\n      <thead>\n      <tr>\n        <th *ngFor=\"let appointment of appointments\" [ngClass]=\"{'active': appointment.date === today}\">\n          <span>{{appointment.date}}</span>\n        </th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr>\n        <td *ngFor=\"let appointment of appointments\"\n            [ngClass]=\"{'active': appointment.date === today}\">\n          <span><strong><em>{{appointment.count}}</em></strong></span>\n        </td>\n      </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n`,\n  styles: [`.appointments{margin-top:12px;font-size:12px;color:#999}.appointments p{padding-top:12px}.appointments th{border-bottom:0!important;color:#333}.appointments td span,.appointments th span{display:block}.appointments td.active,.appointments th.active{background-color:#3c8dbc;color:#fff!important;padding:0}.appointments td.active span,.appointments th.active span{padding:4px}.appointments span.fa{display:inline-block;margin-right:7px}`]\n})\nexport class AppointmentsOverviewComponent implements OnInit, OnChanges {\n  @Input() node: LeafNode;\n  showAppointments = false;\n  loadingAppointments = false;\n  errorLoadingAppointments = false;\n  appointmentsLoaded = false;\n  appointments: Array<any> = [];\n  today = '';\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges() {\n    this.node.control.valueChanges.subscribe((v) => {\n      this.resetProperties();\n      const node = this.node;\n      if (node.question.extras.questionOptions.concept\n        && (node.question.extras.questionOptions.concept === 'a8a666ba-1350-11df-a1f1-0026b9348838'\n        || node.question.extras.questionOptions.concept === 'a89d2398-1350-11df-a1f1-0026b9348838')) {\n        console.log('what change is here', this.showAppointments);\n        if (!this.showAppointments) {\n          this.loadingAppointments = true;\n          this.showAppointments = true;\n          let dataSource;\n          if (node.form && node.form.dataSourcesContainer.dataSources) {\n            dataSource = node.form.dataSourcesContainer.dataSources.monthlyScheduleResourceService;\n          }\n          const locationUuid = node.form.dataSourcesContainer.dataSources.userLocation.uuid;\n          if (dataSource && locationUuid) {\n            const startDate = moment(v).startOf('week').add(1, 'day').format('YYYY-MM-DD');\n            const endDate = moment(v).endOf('week').subtract(1, 'day').format('YYYY-MM-DD');\n            this.today = moment(v).format('DD-MM-YYYY');\n            // create 5 week days\n            const _data = [];\n            const params = {\n              'programType': ['781d85b0-1359-11df-a1f1-0026b9348838', '781d897a-1359-11df-a1f1-0026b9348838',\n              '96047aaf-7ab3-45e9-be6a-b61810fe617d', 'c19aec66-1a40-4588-9b03-b6be55a8dd1d', 'f7793d42-11ac-4cfd-9b35-e0a21a7a7c31',\n              '334c9e98-173f-4454-a8ce-f80b20b7fdf0', '96ba279b-b23b-4e78-aba9-dcbd46a96b7b', '781d8880-1359-11df-a1f1-0026b9348838']\n            };\n            const urlParams = encodeURI(JSON.stringify(params));\n            for (let i = 1; i <= 5; i++) {\n              _data.push({\n                date: moment(v).startOf('week').add(i, 'day').format('DD-MM-YYYY'),\n                count: 0\n              });\n            }\n            dataSource.getMonthlySchedule({\n              startDate: startDate,\n              endDate: endDate,\n              limit: 5,\n              locationUuids: locationUuid,\n              programVisitEncounter: urlParams\n            }).subscribe((data) => {\n              this.appointmentsLoaded = true;\n              this.loadingAppointments = false;\n              _data.map((appointment, index) => {\n                appointment.count = data[index] !== undefined ? data[index].count.scheduled : 0;\n              });\n              this.appointments = _data;\n            }, (error) => {\n              this.loadingAppointments = false;\n              this.errorLoadingAppointments = true;\n              this.showAppointments = false;\n              console.error(error);\n            });\n          } else {\n            this.showAppointments = false;\n            this.errorLoadingAppointments = true;\n          }\n        }\n      }\n    });\n  }\n\n  resetProperties() {\n    this.loadingAppointments = false;\n    this.appointmentsLoaded = false;\n    this.errorLoadingAppointments = false;\n    this.showAppointments = false;\n    this.appointments = [];\n    this.today = '';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { GroupNode, LeafNode, ArrayNode, NodeBase } from '../form-entry/form-factory/form-node';\nimport * as _ from 'lodash';\nimport { DataSource } from '../form-entry/question-models/interfaces/data-source';\nimport { Observable } from 'rxjs';\nimport { SelectOption } from '../form-entry/question-models/interfaces/select-option';\nconst comma = ', ';\nconst newLine = '\\n';\n\n@Injectable()\nexport class EncounterViewerService implements DataSource {\n\n    constructor() {}\n    public resolveSelectedValue(value: any): Observable<SelectOption> {\n        return;\n    }\n    public searchOptions(searchText: any): Observable<SelectOption[]> {\n        return;\n    }\n    public fileUpload(data: any): Observable<any> {\n        return;\n    }\n    public fetchFile(url: any): Observable<any> {\n        return;\n    }\n\n    public resolveSelectedValueFromSchema( answerUuid: string, schema: any): string {\n        let label;\n        if (schema.pages) {\n            _.forEach(schema.pages, (page) => {\n              const l = this.resolveSelectedValueFromSchema(answerUuid, page);\n              if (l) { label = l; }\n            }); }\n\n        if (schema.sections) {\n            _.forEach(schema.sections, (section) => {\n                const l = this.resolveSelectedValueFromSchema(answerUuid, section);\n                if (l) { label = l; }\n            });\n        }\n\n        if (schema.questions) {\n            _.forEach(schema.questions, (question) => {\n                 if (question.questions) {\n                    const l = this.resolveSelectedValueFromSchema(answerUuid, question);\n                    if (l) { label = l; }\n                } else {\n                    if (question.questionOptions.answers) {\n                    _.forEach(question.questionOptions.answers, (answer) => {\n                        if (answer.concept === answerUuid) {\n                            label = answer.label;\n                        }\n                    });\n                } else if (question.questionOptions.selectableOrders) {\n                    _.forEach(question.questionOptions.selectableOrders, (order) => {\n                        if (order.concept === answerUuid) { label = order.label; }\n                    });\n                }\n\n                }\n            });\n        }\n        return label;\n\n\n    }\n\n    public hasAnswer(node: NodeBase) {\n        let answered = false;\n        if (node.initialValue) {\n            answered = true;\n        }\n        return answered;\n    }\n\n    public questionsAnswered(node: any, answered?: boolean[]) {\n        const $answered = answered || [];\n        if (node.question.renderingType === 'page') {\n            _.forEach(node.children, (childNode: any) => {\n                this.questionsAnswered(childNode, $answered); });\n\n        } else if (node.question.renderingType === 'section') {\n            _.forEach(node.children, (childNode) => {\n                if (childNode.question.renderingType === 'group') {\n                   _.forEach(childNode.children, (child) => {\n                       const ans = this.questionsAnswered(child, $answered);\n                       if (ans) { $answered.push(ans); }\n                   });\n                } else if (this.hasAnswer(childNode)) { $answered.push(true); }\n            });\n        } else { return this.hasAnswer(node); }\n\n        if ($answered.length > 0) {return true; } else { return false; }\n    }\n\n\n    public isDate(val: any) {\n        if (Date.parse(val)) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public convertTime(unixTimestamp: number) {\n        const a = new Date(unixTimestamp);\n        const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May',\n                        'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n        const year = a.getFullYear();\n        const month = months[a.getMonth()];\n        const date = a.getDate();\n        const hour = a.getHours();\n        const min = a.getMinutes();\n        const sec = a.getSeconds();\n        const suffix = hour < 12 ? 'AM' : 'PM';\n        let time;\n        if (hour === 0 && min === 0) {\n            time = date + ' ' + month + ' ' + year;\n        } else {\n            time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + suffix + ' (EAT)';\n        }\n        return time;\n\n    }\n}\n","import { Component, OnInit, Input, Inject } from '@angular/core';\nimport { NodeBase, GroupNode, LeafNode } from '../../form-entry/form-factory/form-node';\nimport { QuestionBase } from '../../form-entry/question-models/question-base';\nimport * as _ from 'lodash';\nimport { EncounterViewerService } from '../encounter-viewer.service';\nimport { AfeFormGroup } from '../../abstract-controls-extension/afe-form-group';\nimport { DataSources } from '../../form-entry/data-sources';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\n\n@Component({\n    selector: 'encounter-viewer',\n    template: `<div class=\"viewer\">\n\n\n  <div *ngIf=\"rootNode.question.renderingType === 'form'\" class=\"form\">\n    <div *ngFor=\"let question of rootNode.question.questions; let i = index;\">\n      <div *ngIf=\"questionsAnswered(rootNode.children[question.key])\">\n        <div [attr.id]=\"'page'+i\" class=\"panel panel-default\">\n          <p class=\"page-label panel-heading text-primary\">{{question.label}}</p>\n          <div class=\"panel-body\">\n            <encounter-viewer [node]=\"rootNode.children[question.key]\" [schema]=\"_schema\" [parentComponent]=\"this\" [parentGroup]=\"rootNode.control\"></encounter-viewer>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div *ngIf=\"rootNode.question.renderingType === 'page'\" class=\"page\">\n    <encounter-viewer *ngFor=\"let question of rootNode.question.questions\" [parentComponent]=\"this\" [node]=\"rootNode.children[question.key]\"\n      [schema]=\"_schema\" [parentGroup]=\"parentGroup\"></encounter-viewer>\n  </div>\n\n\n  <div *ngIf=\"rootNode.question.renderingType === 'section'&& questionsAnswered(rootNode)\"\n    class=\"section\">\n    <div class=\"panel panel-primary\">\n      <p class=\"panel-heading section-label\">{{ rootNode.question.label }}</p>\n    </div>\n    <div *ngFor=\"let question of rootNode.question.questions\">\n      <encounter-viewer [node]=\"rootNode.children[question.key]\" [parentComponent]=\"this\" [schema]=\"_schema\" [parentGroup]=\"parentGroup\"></encounter-viewer>\n    </div>\n  </div>\n\n  <!--Leaf Controls-->\n  <div style=\"margin-left:10px;\">\n  <form *ngIf=\"rootNode.question.controlType === 0\" [formGroup]=\"parentGroup\">\n    <div *ngIf=\"rootNode.control.value\">\n    <div class=\"question-answer\">\n      <label *ngIf=\"rootNode.question.label\" [attr.for]=\"rootNode.question.key\" style=\"font-weight:400;\">\n          {{ rootNode.question.label }}\n      </label>\n      <span *ngIf=\"checkForColon(rootNode.question.label)\">:</span>\n      <div [ngSwitch]=\"rootNode.question.renderingType\" style=\"display:inline-block; font-weight:bold;\">\n          <div *ngSwitchCase=\" 'file' \">\n            <file-preview [formControlName]=\"rootNode.question.key\" [id]=\"rootNode.question.key + 'id'\" [dataSource]=\"fileDataSource\"></file-preview>\n          </div>\n          <div *ngSwitchCase=\"'remote-select'\">\n            <remote-answer [formControlName]=\"rootNode.question.key\" [id]=\"rootNode.question.key + 'id'\" [dataSource]=\"remoteDataSource\"></remote-answer>\n          </div>\n          <div *ngSwitchDefault style=\"display:inline-block\">\n              <question-control [schema]=\"_schema\" [value]=\"rootNode.control.value\" [dataSource]=\"customDataSource\"></question-control>\n            </div>\n      </div>\n     \n    </div>\n    </div>\n  </form>\n</div>\n\n  <!--Array Controls-->\n  <div *ngIf=\"rootNode.question.controlType === 1 && questionsAnswered(rootNode)\">\n    <div [ngSwitch]=\"rootNode.question.renderingType\">\n      <div *ngSwitchCase=\" 'repeating' \">\n        <div [ngSwitch]=\"rootNode.question.extras.type\">\n          <div *ngSwitchCase=\"'testOrder'\">\n            <label>{{rootNode.question.label}}:</label>\n            <div *ngFor=\"let child of rootNode.children; let i=index \">\n              <encounter-viewer *ngFor=\"let question of child.question.questions \" [parentComponent]=\"this\" [node]=\"child.children[question.key]\n                \" [parentGroup]=\"child.control \" [schema]=\"_schema\"></encounter-viewer>\n            </div>\n          </div>\n          \n          <div *ngSwitchCase=\"'obsGroup'\">\n            <div *ngFor=\"let child of rootNode.children; let i=index \">\n              <encounter-viewer *ngFor=\"let question of child.question.questions \" [parentComponent]=\"this\" [node]=\"child.children[question.key]\n                \" [parentGroup]=\"child.control \" [schema]=\"_schema\"></encounter-viewer>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div *ngIf=\"rootNode.question.controlType === 2\">\n\n    <!--GROUP-->\n    <div [ngSwitch]=\"rootNode.question.renderingType \">\n      <div *ngSwitchCase=\" 'group' \">\n        <encounter-viewer *ngFor=\"let question of rootNode.question.questions \" [parentComponent]=\"this\" [node]=\"rootNode.children[question.key]\n                  \" [parentGroup]=\"rootNode.control \" [schema]=\"_schema\"></encounter-viewer>\n      </div>\n      <div *ngSwitchCase=\" 'field-set' \">\n        <encounter-viewer *ngFor=\"let question of rootNode.question.questions \" [parentComponent]=\"this\" [node]=\"rootNode.children[question.key]\n                  \" [parentGroup]=\"rootNode.control \" [schema]=\"_schema\"></encounter-viewer>\n      </div>\n    </div>\n  </div>\n\n\n\n  </div>\n`,\n    styles: [`.page-label{font-size:20px;font-weight:700}.section-label{font-size:18px;font-weight:500}.panel-primary{border:none!important}.question-answer{font-size:16px}.panel{margin-bottom:5px}div.section{margin-bottom:15px!important}.line-breaker{white-space:pre-line}hr{margin:10px}`],\n})\nexport class EncounterViewerComponent implements OnInit {\n    public rootNode: NodeBase;\n    public enc: any;\n    public fileDataSource: DataSource;\n    public remoteDataSource: DataSource;\n    public customDataSource: DataSource;\n    public _schema;\n    @Input() public parentGroup: AfeFormGroup;\n    @Input() public parentComponent: EncounterViewerComponent;\n    @Input() set node(rootNode: NodeBase) {\n        this.rootNode = rootNode;\n    }\n\n    @Input() public set schema(schema: any) {\n        this._schema = schema;\n    }\n\n    @Input() public set encounter(enc: any) {\n        this.enc = enc;\n    }\n     @Input() set form(form: any) {\n         this.rootNode = form.rootNode;\n         this._schema = form.schema;\n         console.log(this.rootNode);\n    }\n\n    constructor(private encounterViewerService: EncounterViewerService,\n               private dataSources: DataSources) {\n    }\n\n    public ngOnInit() {\n        if (this.rootNode && this.rootNode.question.extras\n            && this.rootNode.question.renderingType === 'file') {\n                this.fileDataSource =\n                this.dataSources.dataSources[this.rootNode.question.dataSource];\n        } else if (this.rootNode && this.rootNode.question.extras\n            && this.rootNode.question.renderingType === 'remote-select') {\n                this.remoteDataSource =\n                this.dataSources.dataSources[this.rootNode.question.dataSource];\n            } else {\n                this.customDataSource = this.encounterViewerService;\n            }\n    }\n\n    public questionsAnswered(node: any) {\n        const $answered = this.encounterViewerService.questionsAnswered(node);\n        return $answered;\n    }\n\n    public questionAnswered(node: NodeBase) {\n        const answered = this.encounterViewerService.hasAnswer(node);\n        return answered;\n    }\n\n    public checkForColon(questionLabel: string) {\n        if (questionLabel.indexOf(':') === -1) { return true; } else { return false; }\n    }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Form } from '../../form-entry/form-factory/form';\nimport { NodeBase } from '../../form-entry/form-factory/form-node';\nimport { EncounterAdapter } from '../../form-entry/value-adapters/encounter.adapter';\n@Component({\n    selector: 'encounter-renderer',\n    template: `<encounter-viewer class=\"card\" [form]=\"$form\" [encounter]=\"$enc\"></encounter-viewer>\n\n\n`,\n    styles: [`.card{box-shadow:0 2px 5px 0 rgba(0,0,0,.16),0 2px 10px 0 rgba(0,0,0,.12)}`]\n})\nexport class EncounterContainerComponent implements OnInit {\n    public $form: Form;\n    public $enc: any;\n\n    @Input() public set form(form) {\n        this.$form = form;\n    }\n    @Input() public set encounter(enc) {\n        this.$enc = enc;\n    }\n\n    constructor(private encAdapter: EncounterAdapter) { }\n\n    ngOnInit() {\n    }\n}\n","import {Component, OnInit, Input} from '@angular/core';\nimport { EncounterViewerService } from '../encounter-viewer.service';\nimport * as _ from 'lodash';\n\n@Component({\n    selector: 'question-control',\n    styles: [`input{border:none;box-shadow:none;color:#000;background:#fff!important;padding-top:23px;display:block;position:relative}`],\n    template: `<div>\n    {{innerValue}}\n</div>`,\n  })\nexport class QuestionControlComponent implements OnInit {\n    @Input() public set schema(schema: any) {\n      this._schema = schema;\n    }\n    @Input() public set value(value) {\n      this._value = value;\n    }\n    @Input() public set dataSource(dataSource: any) {\n      this._dataSource = dataSource;\n    }\n    // The internal data model\n    public innerValue: any = '';\n    private _value: any;\n    private _schema: any;\n    private _dataSource: EncounterViewerService;\n    constructor() {}\n\n    ngOnInit() {\n      this.writeValue(this._value);\n    }\n    public isUuid(value: string) {\n      if (value.length === 36 && value.indexOf(' ') === -1 && value.indexOf('.') === -1) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    // Current time string.\n\n    public writeValue(v: any, arrayElement?: boolean) {\n      if (v !== this.innerValue) {\n          if (this.isUuid(v)) {\n            if (!arrayElement) {\n              const val =\n              this._dataSource.resolveSelectedValueFromSchema(v, this._schema);\n              if (val) { this.innerValue = val.toUpperCase(); } else { this.innerValue = v; }\n            } else { return this._dataSource.resolveSelectedValueFromSchema(v, this._schema); }\n          } else if (_.isArray(v)) {\n            const arr = [];\n            _.forEach(v, (el) => {\n              arr.push(this.writeValue(el, true));\n            });\n            this.innerValue = arr;\n          } else if (this.isDate(v)) {\n              if (!arrayElement) { this.innerValue = this._dataSource.convertTime(v); } else {\n                  return  this._dataSource.convertTime(v);\n              }\n          } else {\n              if (!arrayElement) { this.innerValue = v; } else {\n                return v;\n              }\n          }\n\n      }\n    }\n\n    public isDate(str: string) {\n      return this._dataSource.isDate(str) && !_.isNumber(str);\n    }\n\n  }\n","import {\n    Component, OnInit, Input, forwardRef,\n    OnChanges, Output, EventEmitter\n  } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { EncounterViewerService } from '../encounter-viewer.service';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\nconst noop = () => {};\n\n@Component({\n    selector: 'file-preview',\n    styles: [``],\n    template: `<div *ngIf=\"innerValue\">\n              <img class=\"img-responsive\"\n                [src]=\"innerValue | secure:this._dataSource.fetchFile\" alt=\"image\" />\n                </div>`,\n    providers: [\n      {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => FilePreviewComponent),\n        multi: true\n      }\n    ]\n  })\nexport class FilePreviewComponent implements ControlValueAccessor {\n    @Input() public source: any;\n    public innerValue = null;\n    public _dataSource: DataSource;\n    @Input()\n    public get dataSource(): DataSource {\n        return this._dataSource;\n    }\n    public set dataSource(v: DataSource) {\n        this._dataSource = v;\n    }\n    // Placeholders for the callbacks which are later providesd\n    // by the Control Value Accessor\n    private onTouchedCallback: () => void = noop;\n    private onChangeCallback: (_: any) => void = noop;\n    constructor(private encounterService: EncounterViewerService) {}\n    // get accessor\n    get value(): any {\n      return this.innerValue;\n    }\n\n    // set accessor including call the onchange callback\n    set value(v: any) {\n      if (v !== this.innerValue) {\n        this.innerValue = v;\n      }\n    }\n    // Current time string.\n\n    public writeValue(v: any) {\n      if (v !== this.innerValue) {\n          this.innerValue = v;\n      }\n    }\n\n    // From ControlValueAccessor interface\n    public registerOnChange(fn: any) {\n      this.onChangeCallback = fn;\n    }\n\n    // From ControlValueAccessor interface\n    public registerOnTouched(fn: any) {\n      this.onTouchedCallback = fn;\n    }\n\n    public onBlur() {\n      this.onTouchedCallback();\n    }\n\n    public onChange(event: any) {\n      // const files = event.srcElement.files;\n      // const fileToLoad = files[0];\n\n      // const fileReader = new FileReader();\n\n      // fileReader.onload = (fileLoadedEvent) => {\n      //   const data = fileReader.result;\n      //   const fileType = data.substring('data:image/'.length, data.indexOf(';base64'));\n      //   const payload = {\n      //     data,\n      //     extension: fileType\n      //   };\n      // };\n\n      // fileReader.readAsDataURL(fileToLoad);\n    }\n  }\n","import {\n    Component, OnInit, Input, forwardRef,\n    OnChanges, Output, EventEmitter\n  } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\nconst noop = () => {};\n\n@Component({\n    selector: 'remote-answer',\n    styles: [],\n    template: `\n    <div *ngIf=\"innerValue\">\n      {{innerValue}}\n      </div>\n`,\n    providers: [\n      {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => RemoteAnswerComponent),\n        multi: true\n      }\n    ]\n  })\nexport class RemoteAnswerComponent implements ControlValueAccessor {\n    @Input() public source: any;\n    public innerValue = null;\n    private _dataSource: DataSource;\n    @Input()\n    public get dataSource(): DataSource {\n        return this._dataSource;\n    }\n    public set dataSource(v: DataSource) {\n        this._dataSource = v;\n    }\n    // Placeholders for the callbacks which are later providesd\n    // by the Control Value Accessor\n    private onTouchedCallback: () => void = noop;\n    private onChangeCallback: (_: any) => void = noop;\n    constructor() {}\n    // get accessor\n    get value(): any {\n      return this.innerValue;\n    }\n\n    // set accessor including call the onchange callback\n    set value(v: any) {\n      if (v !== this.innerValue) {\n        this.innerValue = v;\n      }\n    }\n    // Current time string.\n\n    public writeValue(v: any) {\n      if (v !== this.innerValue) {\n        if (this._dataSource) {\n          this._dataSource.resolveSelectedValue(v).subscribe((ans) => {\n            this.innerValue = ans.label;\n        });\n        } else {\n          this.innerValue = v;\n        }\n      }\n    }\n\n    // From ControlValueAccessor interface\n    public registerOnChange(fn: any) {\n      this.onChangeCallback = fn;\n    }\n\n    // From ControlValueAccessor interface\n    public registerOnTouched(fn: any) {\n      this.onTouchedCallback = fn;\n    }\n\n    public onBlur() {\n      this.onTouchedCallback();\n    }\n\n    public onChange(event: any) {\n    }\n  }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EncounterViewerComponent } from './encounter-view/encounter-viewer.component';\nimport { EncounterContainerComponent } from './encounter-container/encounter-container.component';\nimport { EncounterViewerService } from './encounter-viewer.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { QuestionControlComponent } from './display-controls/question-control.component';\nimport { FilePreviewComponent } from './display-controls/file-preview.component';\nimport { RemoteAnswerComponent } from './display-controls/remote-answer.component';\nimport { HttpModule } from '@angular/http';\nimport { SharedModule } from '../shared.module';\n@NgModule({\n    declarations: [\n        EncounterViewerComponent,\n        EncounterContainerComponent,\n        QuestionControlComponent,\n        FilePreviewComponent,\n        RemoteAnswerComponent\n    ],\n    imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        CommonModule,\n        HttpModule,\n        SharedModule\n    ],\n    providers: [\n        EncounterViewerService,\n    ],\n    exports: [\n        EncounterContainerComponent,\n        HttpModule\n    ],\n})\nexport class EncounterViewerModule {}\n","import { Component, Input, forwardRef, OnInit, AfterViewInit } from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'checkbox',\n  template: `<div *ngFor=\"let option of options; let i = index;\">\n    <label class=\"form-control no-border\">\n        <input type=\"checkbox\" id=\"i + 'id'\" (change)=\"selectOpt(option, $event)\" value=\"option.value\">\n        {{ option.label }}\n    </label>\n</div>`,\n  providers: [\n    {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => CheckboxControlComponent),\n        multi: true,\n    }],\n  styles: [`\n  .no-border {\n    border: 0;\n    box-shadow: none;\n  }`]\n})\nexport class CheckboxControlComponent implements OnInit, AfterViewInit {\n\n  @Input() public options;\n\n  public _value: Array<any> = [];\n\n  public ngOnInit() {}\n\n  public ngAfterViewInit() {}\n\n  public writeValue(value: any) {\n    this.value = value;\n  }\n\n  public registerOnChange(fn: (_: any) => void) {\n    this.onChange = fn;\n  }\n\n  public registerOnTouched(fn: () => void) {\n    this.onTouched = fn;\n  }\n\n  get value(): any {\n    if (this._value.length === 0) {\n        return '';\n    } else {\n        return this._value || this._value[0];\n    }\n  }\n\n  set value(v: any) {\n    if (typeof v === 'undefined' || v === null || v === '') {\n        v = [];\n    } else if (typeof v === 'string') {\n        v = [v];\n    } else if (!Array.isArray(v)) {\n        throw new TypeError('Value must be a string or an array.');\n    }\n  }\n\n  public selectOpt(option, event) {\n    if (event.target.checked) {\n      this._value.push(option.value);\n    } else {\n      this.options.forEach((o) => {\n        if (o.value === option.value) {\n          this._value.splice(o, 1);\n        }\n      });\n    }\n\n    this.onChange(this.value);\n  }\n\n  private onChange = ( change: any) => { };\n  private onTouched = () => { };\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule } from '@angular/forms';\nimport { CheckboxControlComponent } from './checkbox.component';\n\n@NgModule({\n    declarations: [\n        CheckboxControlComponent\n    ],\n    exports: [\n        CheckboxControlComponent\n    ],\n    imports: [CommonModule, FormsModule]\n})\nexport class CheckboxModule { }\n","import { NgModule } from '@angular/core';\nimport { MatTabsModule , MatIconModule , MatCardModule} from '@angular/material';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormBuilder } from '@angular/forms';\nimport { HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';\n\nimport { DebugModeService } from '../form-entry/services/debug-mode.service';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { FormErrorsService } from './services/form-errors.service';\nimport { HammerConfig } from './helpers/hammer-config';\nimport { FormControlService } from './form-factory/form-control.service';\nimport { ValidationFactory } from './form-factory/validation.factory';\nimport { FormRendererComponent } from './form-renderer/form-renderer.component';\nimport { ErrorRendererComponent } from './error-renderer/error-renderer.component';\nimport { HistoricalValueDirective } from './directives/historical-value-directive';\nimport { HistoricalFieldHelperService } from './helpers/historical-field-helper-service';\nimport { SelectModule } from '../components/select/select.module';\nimport { RemoteFileUploadModule } from '../components/file-upload/file-upload.module';\nimport { DateTimePickerModule } from '../components/date-time-picker';\nimport { NgxDateTimePickerModule } from '../components/ngx-date-time-picker/ngx-date-time-picker.module';\nimport { AfeNgSelectComponent } from '../components/afe-ng-select.component';\nimport { HidersDisablersFactory } from './form-factory/hiders-disablers.factory';\nimport { AlertsFactory } from './form-factory/show-messages.factory';\nimport { ExpressionRunner } from './expression-runner/expression-runner';\nimport { JsExpressionHelper } from './helpers/js-expression-helper';\nimport { FormSchemaCompiler } from './services/form-schema-compiler.service';\nimport { FormFactory } from './form-factory/form.factory';\nimport { QuestionFactory } from './form-factory/question.factory';\nimport { ControlRelationsFactory } from './form-factory/control-relations.factory';\nimport { EncounterAdapter } from './value-adapters/encounter.adapter';\nimport { PersonAttribuAdapter } from './value-adapters/person-attribute.adapter';\nimport { OrderValueAdapter } from './value-adapters/order.adapter';\nimport { ObsAdapterHelper } from './value-adapters/obs-adapter-helper';\nimport { ObsValueAdapter } from './value-adapters/obs.adapter';\nimport { RemoteSelectModule } from '../components/remote-select/remote-select.module';\nimport { DataSources } from './data-sources/data-sources';\nimport {\n    AppointmentsOverviewComponent\n} from '../components/appointments-overview/appointments-overview.component';\nimport { EncounterViewerModule } from '../encounter-viewer/encounter-viewer.module';\nimport { CheckboxModule } from '../components/check-box/checkbox.module';\n\n\n@NgModule({\n    imports: [CommonModule,\n        ReactiveFormsModule,\n        CollapseModule,\n        SelectModule,\n        DateTimePickerModule,\n        RemoteSelectModule,\n        RemoteFileUploadModule,\n        EncounterViewerModule,\n        CheckboxModule,\n        MatIconModule,\n        MatTabsModule,\n        MatCardModule,\n        NgxDateTimePickerModule\n    ],\n    declarations: [\n        FormRendererComponent,\n        AfeNgSelectComponent,\n        AppointmentsOverviewComponent,\n        HistoricalValueDirective,\n        ErrorRendererComponent\n    ],\n    providers: [\n        FormBuilder,\n        FormControlService,\n        FormErrorsService,\n        ValidationFactory,\n        HidersDisablersFactory,\n        AlertsFactory,\n        ExpressionRunner,\n        JsExpressionHelper,\n        HistoricalFieldHelperService,\n        FormSchemaCompiler,\n        FormFactory,\n        QuestionFactory,\n        ValidationFactory,\n        ControlRelationsFactory,\n        ObsAdapterHelper,\n        ObsValueAdapter,\n        EncounterAdapter,\n        PersonAttribuAdapter,\n        OrderValueAdapter,\n        DebugModeService,\n        DataSources\n    ],\n    exports: [FormRendererComponent, AfeNgSelectComponent,\n        ErrorRendererComponent, DateTimePickerModule, EncounterViewerModule , NgxDateTimePickerModule]\n})\nexport class FormEntryModule {\n\n}\n","\nexport class Pair {\n\n  key: string;\n\n  value: any;\n\n  constructor(key: string, value: any) {\n    this.key = key;\n    this.value = value;\n  }\n}\n"]}